//region block: polyfills
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof Math.log10 === 'undefined') {
  Math.log10 = function (x) {
    return Math.log(x) * Math.LOG10E;
  };
}
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
//endregion
(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', '@js-joda/core'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('@js-joda/core'));
  else {
    if (typeof this['@js-joda/core'] === 'undefined') {
      throw new Error("Error loading module 'verified-emission-reduction-registry-asset-order-f2-domain'. Its dependency '@js-joda/core' was not found. Please, check whether '@js-joda/core' is loaded prior to 'verified-emission-reduction-registry-asset-order-f2-domain'.");
    }
    root['verified-emission-reduction-registry-asset-order-f2-domain'] = factory(typeof this['verified-emission-reduction-registry-asset-order-f2-domain'] === 'undefined' ? {} : this['verified-emission-reduction-registry-asset-order-f2-domain'], this['@js-joda/core']);
  }
}(this, function (_, $module$_js_joda_core_gcv2k) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var isView = ArrayBuffer.isView;
  var Instant = $module$_js_joda_core_gcv2k.Instant;
  var Clock = $module$_js_joda_core_gcv2k.Clock;
  var log10 = Math.log10;
  //endregion
  //region block: pre-declaration
  setMetadataFor(_no_name_provided__qut3iv, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Collection, 'Collection', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractCollection, 'AbstractCollection', classMeta, undefined, [Collection], undefined, undefined, []);
  setMetadataFor(IteratorImpl, 'IteratorImpl', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(List, 'List', interfaceMeta, undefined, [Collection], undefined, undefined, []);
  setMetadataFor(AbstractList, 'AbstractList', classMeta, AbstractCollection, [AbstractCollection, List], undefined, undefined, []);
  setMetadataFor(AbstractMap$keys$1$iterator$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_0, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Set, 'Set', interfaceMeta, undefined, [Collection], undefined, undefined, []);
  setMetadataFor(AbstractSet, 'AbstractSet', classMeta, AbstractCollection, [AbstractCollection, Set], undefined, undefined, []);
  setMetadataFor(AbstractMap$keys$1, undefined, classMeta, AbstractSet, undefined, undefined, undefined, []);
  setMetadataFor(Map, 'Map', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractMap, 'AbstractMap', classMeta, undefined, [Map], undefined, undefined, []);
  setMetadataFor(Companion_1, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EmptyIterator, 'EmptyIterator', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EmptyList, 'EmptyList', objectMeta, undefined, [List], undefined, undefined, []);
  setMetadataFor(ArrayAsCollection, 'ArrayAsCollection', classMeta, undefined, [Collection], undefined, undefined, []);
  setMetadataFor(IndexedValue, 'IndexedValue', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(IndexingIterable, 'IndexingIterable', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(IndexingIterator, 'IndexingIterator', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EmptyMap, 'EmptyMap', objectMeta, undefined, [Map], undefined, undefined, []);
  setMetadataFor(IntIterator, 'IntIterator', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EmptySet, 'EmptySet', objectMeta, undefined, [Set], undefined, undefined, []);
  setMetadataFor(Continuation, 'Continuation', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Key, 'Key', objectMeta, undefined, undefined, undefined, undefined, []);
  function plus(context) {
    var tmp;
    if (context === EmptyCoroutineContext_getInstance()) {
      tmp = this;
    } else {
      tmp = context.d3(this, CoroutineContext$plus$lambda);
    }
    return tmp;
  }
  setMetadataFor(CoroutineContext, 'CoroutineContext', interfaceMeta, undefined, undefined, undefined, undefined, []);
  function get(key) {
    var tmp;
    if (equals_0(this.h1(), key)) {
      tmp = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function fold(initial, operation) {
    return operation(initial, this);
  }
  function minusKey(key) {
    return equals_0(this.h1(), key) ? EmptyCoroutineContext_getInstance() : this;
  }
  setMetadataFor(Element, 'Element', interfaceMeta, undefined, [CoroutineContext], undefined, undefined, []);
  function releaseInterceptedContinuation(continuation) {
  }
  function get_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      var tmp;
      if (key.b3(this.h1())) {
        var tmp_0 = key.a3(this);
        tmp = (!(tmp_0 == null) ? isInterface(tmp_0, Element) : false) ? tmp_0 : null;
      } else {
        tmp = null;
      }
      return tmp;
    }
    var tmp_1;
    if (Key_getInstance() === key) {
      tmp_1 = isInterface(this, Element) ? this : THROW_CCE();
    } else {
      tmp_1 = null;
    }
    return tmp_1;
  }
  function minusKey_0(key) {
    if (key instanceof AbstractCoroutineContextKey) {
      return (key.b3(this.h1()) ? !(key.a3(this) == null) : false) ? EmptyCoroutineContext_getInstance() : this;
    }
    return Key_getInstance() === key ? EmptyCoroutineContext_getInstance() : this;
  }
  setMetadataFor(ContinuationInterceptor, 'ContinuationInterceptor', interfaceMeta, undefined, [Element], undefined, undefined, []);
  setMetadataFor(EmptyCoroutineContext, 'EmptyCoroutineContext', objectMeta, undefined, [CoroutineContext], undefined, undefined, []);
  setMetadataFor(CombinedContext, 'CombinedContext', classMeta, undefined, [CoroutineContext], undefined, undefined, []);
  setMetadataFor(AbstractCoroutineContextKey, 'AbstractCoroutineContextKey', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractCoroutineContextElement, 'AbstractCoroutineContextElement', classMeta, undefined, [Element], undefined, undefined, []);
  setMetadataFor(Enum, 'Enum', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CoroutineSingletons, 'CoroutineSingletons', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(Companion_2, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(IntProgression, 'IntProgression', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(IntRange, 'IntRange', classMeta, IntProgression, undefined, undefined, undefined, []);
  setMetadataFor(IntProgressionIterator, 'IntProgressionIterator', classMeta, IntIterator, undefined, undefined, undefined, []);
  setMetadataFor(Companion_3, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DelimitedRangesSequence$iterator$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DelimitedRangesSequence, 'DelimitedRangesSequence', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(LazyThreadSafetyMode, 'LazyThreadSafetyMode', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(UnsafeLazyImpl, 'UnsafeLazyImpl', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UNINITIALIZED_VALUE, 'UNINITIALIZED_VALUE', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_4, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Failure, 'Failure', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Error_0, 'Error', classMeta, Error, undefined, undefined, undefined, []);
  setMetadataFor(NotImplementedError, 'NotImplementedError', classMeta, Error_0, undefined, undefined, undefined, []);
  setMetadataFor(Pair, 'Pair', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Triple, 'Triple', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UByte, 'UByte', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_5, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UInt, 'UInt', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Iterator, 'Iterator', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UIntArray, 'UIntArray', classMeta, undefined, [Collection], undefined, undefined, []);
  setMetadataFor(Companion_6, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ULong, 'ULong', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Iterator_0, 'Iterator', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ULongArray, 'ULongArray', classMeta, undefined, [Collection], undefined, undefined, []);
  setMetadataFor(UShort, 'UShort', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CharSequence, 'CharSequence', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Number_0, 'Number', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Unit, 'Unit', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(IntCompanionObject, 'IntCompanionObject', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FloatCompanionObject, 'FloatCompanionObject', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DoubleCompanionObject, 'DoubleCompanionObject', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(StringCompanionObject, 'StringCompanionObject', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractMutableCollection, 'AbstractMutableCollection', classMeta, AbstractCollection, [AbstractCollection, Collection], undefined, undefined, []);
  setMetadataFor(IteratorImpl_0, 'IteratorImpl', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractMutableList, 'AbstractMutableList', classMeta, AbstractMutableCollection, [AbstractMutableCollection, List, Collection], undefined, undefined, []);
  setMetadataFor(AbstractMutableMap$keys$1$iterator$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Entry, 'Entry', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(MutableEntry, 'MutableEntry', interfaceMeta, undefined, [Entry], undefined, undefined, []);
  setMetadataFor(SimpleEntry, 'SimpleEntry', classMeta, undefined, [MutableEntry], undefined, undefined, []);
  setMetadataFor(AbstractMutableSet, 'AbstractMutableSet', classMeta, AbstractMutableCollection, [AbstractMutableCollection, Set, Collection], undefined, undefined, []);
  setMetadataFor(AbstractEntrySet, 'AbstractEntrySet', classMeta, AbstractMutableSet, undefined, undefined, undefined, []);
  setMetadataFor(AbstractMutableMap$keys$1, undefined, classMeta, AbstractMutableSet, undefined, undefined, undefined, []);
  setMetadataFor(AbstractMutableMap, 'AbstractMutableMap', classMeta, AbstractMap, [AbstractMap, Map], undefined, undefined, []);
  setMetadataFor(ArrayList, 'ArrayList', classMeta, AbstractMutableList, [AbstractMutableList, List, Collection], undefined, undefined, []);
  setMetadataFor(HashCode, 'HashCode', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EntrySet, 'EntrySet', classMeta, AbstractEntrySet, undefined, undefined, undefined, []);
  setMetadataFor(HashMap, 'HashMap', classMeta, AbstractMutableMap, [AbstractMutableMap, Map], undefined, undefined, []);
  setMetadataFor(HashSet, 'HashSet', classMeta, AbstractMutableSet, [AbstractMutableSet, Set, Collection], undefined, undefined, []);
  setMetadataFor(InternalHashCodeMap$iterator$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  function createJsMap() {
    var result = Object.create(null);
    result['foo'] = 1;
    jsDeleteProperty(result, 'foo');
    return result;
  }
  setMetadataFor(InternalMap, 'InternalMap', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(InternalHashCodeMap, 'InternalHashCodeMap', classMeta, undefined, [InternalMap], undefined, undefined, []);
  setMetadataFor(EntryIterator, 'EntryIterator', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ChainEntry, 'ChainEntry', classMeta, SimpleEntry, undefined, undefined, undefined, []);
  setMetadataFor(EntrySet_0, 'EntrySet', classMeta, AbstractEntrySet, undefined, undefined, undefined, []);
  setMetadataFor(LinkedHashMap, 'LinkedHashMap', classMeta, HashMap, [HashMap, Map], undefined, undefined, []);
  setMetadataFor(BaseOutput, 'BaseOutput', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(NodeJsOutput, 'NodeJsOutput', classMeta, BaseOutput, undefined, undefined, undefined, []);
  setMetadataFor(BufferedOutput, 'BufferedOutput', classMeta, BaseOutput, undefined, undefined, undefined, []);
  setMetadataFor(BufferedOutputToConsoleLog, 'BufferedOutputToConsoleLog', classMeta, BufferedOutput, undefined, undefined, undefined, []);
  setMetadataFor(Exception, 'Exception', classMeta, Error, undefined, undefined, undefined, []);
  setMetadataFor(RuntimeException, 'RuntimeException', classMeta, Exception, undefined, undefined, undefined, []);
  setMetadataFor(IllegalStateException, 'IllegalStateException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(CancellationException, 'CancellationException', classMeta, IllegalStateException, undefined, undefined, undefined, []);
  setMetadataFor(KClass, 'KClass', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(KClassImpl, 'KClassImpl', classMeta, undefined, [KClass], undefined, undefined, []);
  setMetadataFor(PrimitiveKClassImpl, 'PrimitiveKClassImpl', classMeta, KClassImpl, undefined, undefined, undefined, []);
  setMetadataFor(NothingKClassImpl, 'NothingKClassImpl', objectMeta, KClassImpl, undefined, undefined, undefined, []);
  setMetadataFor(ErrorKClass, 'ErrorKClass', classMeta, undefined, [KClass], undefined, undefined, []);
  setMetadataFor(SimpleKClassImpl, 'SimpleKClassImpl', classMeta, KClassImpl, undefined, undefined, undefined, []);
  setMetadataFor(KProperty1, 'KProperty1', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(PrimitiveClasses, 'PrimitiveClasses', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(StringBuilder, 'StringBuilder', classMeta, undefined, [CharSequence], undefined, undefined, []);
  setMetadataFor(Companion_7, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Char, 'Char', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_8, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(BitMask, 'BitMask', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(arrayIterator$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_9, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Long, 'Long', classMeta, Number_0, undefined, undefined, undefined, []);
  setMetadataFor(InterfaceIdService, 'InterfaceIdService', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Digit, 'Digit', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(asList$1, undefined, classMeta, AbstractList, undefined, undefined, undefined, []);
  setMetadataFor(CoroutineImpl, 'CoroutineImpl', classMeta, undefined, [Continuation], undefined, undefined, []);
  setMetadataFor(CompletedContinuation, 'CompletedContinuation', objectMeta, undefined, [Continuation], undefined, undefined, []);
  setMetadataFor(_no_name_provided__qut3iv_0, undefined, classMeta, CoroutineImpl, undefined, undefined, undefined, []);
  setMetadataFor(IllegalArgumentException, 'IllegalArgumentException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(NoSuchElementException, 'NoSuchElementException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(UnsupportedOperationException, 'UnsupportedOperationException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(IndexOutOfBoundsException, 'IndexOutOfBoundsException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(NumberFormatException, 'NumberFormatException', classMeta, IllegalArgumentException, undefined, undefined, undefined, []);
  setMetadataFor(ArithmeticException, 'ArithmeticException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(NullPointerException, 'NullPointerException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(NoWhenBranchMatchedException, 'NoWhenBranchMatchedException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(ClassCastException, 'ClassCastException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(UninitializedPropertyAccessException, 'UninitializedPropertyAccessException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(atomicfu$TraceBase, 'TraceBase', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(None, 'None', objectMeta, atomicfu$TraceBase, undefined, undefined, undefined, []);
  setMetadataFor(AtomicRef, 'AtomicRef', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AtomicBoolean, 'AtomicBoolean', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AtomicInt, 'AtomicInt', classMeta, undefined, undefined, undefined, undefined, []);
  function invokeOnCompletion$default(onCancelling, invokeImmediately, handler, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancelling = false;
    if (!(($mask0 & 2) === 0))
      invokeImmediately = true;
    return $handler == null ? this.vd(onCancelling, invokeImmediately, handler) : $handler(onCancelling, invokeImmediately, handler);
  }
  setMetadataFor(Job, 'Job', interfaceMeta, undefined, [Element], undefined, undefined, [0]);
  setMetadataFor(ParentJob, 'ParentJob', interfaceMeta, undefined, [Job], undefined, undefined, [0]);
  setMetadataFor(JobSupport, 'JobSupport', classMeta, undefined, [Job, ParentJob], undefined, undefined, [0]);
  setMetadataFor(CoroutineScope, 'CoroutineScope', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractCoroutine, 'AbstractCoroutine', classMeta, JobSupport, [JobSupport, Job, Continuation, CoroutineScope], undefined, undefined, [0]);
  setMetadataFor(DeferredCoroutine, 'DeferredCoroutine', classMeta, AbstractCoroutine, [AbstractCoroutine, Job], undefined, undefined, [0]);
  setMetadataFor(LazyDeferredCoroutine, 'LazyDeferredCoroutine', classMeta, DeferredCoroutine, undefined, undefined, undefined, [0]);
  setMetadataFor(SchedulerTask, 'SchedulerTask', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DispatchedTask, 'DispatchedTask', classMeta, SchedulerTask, undefined, undefined, undefined, []);
  setMetadataFor(CancellableContinuationImpl, 'CancellableContinuationImpl', classMeta, DispatchedTask, [DispatchedTask, Continuation], undefined, undefined, []);
  setMetadataFor(CompletedExceptionally, 'CompletedExceptionally', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CompletedWithCancellation, 'CompletedWithCancellation', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Key_0, 'Key', objectMeta, AbstractCoroutineContextKey, undefined, undefined, undefined, []);
  setMetadataFor(CoroutineDispatcher, 'CoroutineDispatcher', classMeta, AbstractCoroutineContextElement, [AbstractCoroutineContextElement, ContinuationInterceptor], undefined, undefined, []);
  setMetadataFor(Key_1, 'Key', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(GlobalScope, 'GlobalScope', objectMeta, undefined, [CoroutineScope], undefined, undefined, []);
  setMetadataFor(CoroutineStart, 'CoroutineStart', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(EventLoop, 'EventLoop', classMeta, CoroutineDispatcher, undefined, undefined, undefined, []);
  setMetadataFor(ThreadLocalEventLoop, 'ThreadLocalEventLoop', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CompletionHandlerException, 'CompletionHandlerException', classMeta, RuntimeException, undefined, undefined, undefined, []);
  setMetadataFor(CoroutinesInternalError, 'CoroutinesInternalError', classMeta, Error_0, undefined, undefined, undefined, []);
  setMetadataFor(Key_2, 'Key', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ChildHandle, 'ChildHandle', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(NonDisposableHandle, 'NonDisposableHandle', objectMeta, undefined, [ChildHandle], undefined, undefined, []);
  setMetadataFor(Incomplete, 'Incomplete', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Empty, 'Empty', classMeta, undefined, [Incomplete], undefined, undefined, []);
  setMetadataFor(LinkedListNode, 'LinkedListNode', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(LinkedListHead, 'LinkedListHead', classMeta, LinkedListNode, undefined, undefined, undefined, []);
  setMetadataFor(NodeList, 'NodeList', classMeta, LinkedListHead, [LinkedListHead, Incomplete], undefined, undefined, []);
  setMetadataFor(CompletionHandlerBase, 'CompletionHandlerBase', classMeta, LinkedListNode, undefined, undefined, undefined, []);
  setMetadataFor(JobNode, 'JobNode', classMeta, CompletionHandlerBase, [CompletionHandlerBase, Incomplete], undefined, undefined, []);
  setMetadataFor(Finishing, 'Finishing', classMeta, undefined, [Incomplete], undefined, undefined, []);
  setMetadataFor(ChildCompletion, 'ChildCompletion', classMeta, JobNode, undefined, undefined, undefined, []);
  setMetadataFor(JobCancellingNode, 'JobCancellingNode', classMeta, JobNode, undefined, undefined, undefined, []);
  setMetadataFor(InactiveNodeList, 'InactiveNodeList', classMeta, undefined, [Incomplete], undefined, undefined, []);
  setMetadataFor(ChildHandleNode, 'ChildHandleNode', classMeta, JobCancellingNode, [JobCancellingNode, ChildHandle], undefined, undefined, []);
  setMetadataFor(InvokeOnCancelling, 'InvokeOnCancelling', classMeta, JobCancellingNode, undefined, undefined, undefined, []);
  setMetadataFor(InvokeOnCompletion, 'InvokeOnCompletion', classMeta, JobNode, undefined, undefined, undefined, []);
  setMetadataFor(IncompleteStateBox, 'IncompleteStateBox', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(MainCoroutineDispatcher, 'MainCoroutineDispatcher', classMeta, CoroutineDispatcher, undefined, undefined, undefined, []);
  setMetadataFor(TimeoutCancellationException, 'TimeoutCancellationException', classMeta, CancellationException, undefined, undefined, undefined, []);
  setMetadataFor(Unconfined, 'Unconfined', objectMeta, CoroutineDispatcher, undefined, undefined, undefined, []);
  setMetadataFor(Key_3, 'Key', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ArrayQueue, 'ArrayQueue', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OpDescriptor, 'OpDescriptor', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DispatchedContinuation, 'DispatchedContinuation', classMeta, DispatchedTask, [DispatchedTask, Continuation], undefined, undefined, []);
  setMetadataFor(Symbol, 'Symbol', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Dispatchers, 'Dispatchers', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(JsMainDispatcher, 'JsMainDispatcher', classMeta, MainCoroutineDispatcher, undefined, undefined, undefined, []);
  setMetadataFor(UnconfinedEventLoop, 'UnconfinedEventLoop', classMeta, EventLoop, undefined, undefined, undefined, []);
  setMetadataFor(JobCancellationException, 'JobCancellationException', classMeta, CancellationException, undefined, undefined, undefined, []);
  setMetadataFor(SetTimeoutBasedDispatcher, 'SetTimeoutBasedDispatcher', classMeta, CoroutineDispatcher, undefined, undefined, undefined, [1]);
  setMetadataFor(NodeDispatcher, 'NodeDispatcher', objectMeta, SetTimeoutBasedDispatcher, undefined, undefined, undefined, [1]);
  setMetadataFor(SetTimeoutDispatcher, 'SetTimeoutDispatcher', objectMeta, SetTimeoutBasedDispatcher, undefined, undefined, undefined, [1]);
  setMetadataFor(MessageQueue, 'MessageQueue', classMeta, ArrayQueue, undefined, undefined, undefined, []);
  setMetadataFor(ScheduledMessageQueue, 'ScheduledMessageQueue', classMeta, MessageQueue, undefined, undefined, undefined, []);
  setMetadataFor(WindowDispatcher, 'WindowDispatcher', classMeta, CoroutineDispatcher, undefined, undefined, undefined, [1]);
  setMetadataFor(WindowMessageQueue, 'WindowMessageQueue', classMeta, MessageQueue, undefined, undefined, undefined, []);
  setMetadataFor(CommonThreadLocal, 'CommonThreadLocal', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(KSerializer, 'KSerializer', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AbstractPolymorphicSerializer, 'AbstractPolymorphicSerializer', classMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(PolymorphicSerializer, 'PolymorphicSerializer', classMeta, AbstractPolymorphicSerializer, undefined, undefined, undefined, []);
  setMetadataFor(_no_name_provided__qut3iv_1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SealedClassSerializer, 'SealedClassSerializer', classMeta, AbstractPolymorphicSerializer, undefined, undefined, undefined, []);
  setMetadataFor(SerializationException, 'SerializationException', classMeta, IllegalArgumentException, undefined, undefined, undefined, []);
  setMetadataFor(UnknownFieldException, 'UnknownFieldException', classMeta, SerializationException, undefined, undefined, undefined, []);
  setMetadataFor(MissingFieldException, 'MissingFieldException', classMeta, SerializationException, undefined, undefined, undefined, []);
  function get_isNullable() {
    return false;
  }
  setMetadataFor(SerialDescriptor, 'SerialDescriptor', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ContextDescriptor, 'ContextDescriptor', classMeta, undefined, [SerialDescriptor], undefined, undefined, []);
  setMetadataFor(elementDescriptors$1$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(_no_name_provided__qut3iv_2, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(elementNames$1$1, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(_no_name_provided__qut3iv_3, undefined, classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClassSerialDescriptorBuilder, 'ClassSerialDescriptorBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CachedNames, 'CachedNames', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SerialDescriptorImpl, 'SerialDescriptorImpl', classMeta, undefined, [SerialDescriptor, CachedNames], undefined, undefined, []);
  setMetadataFor(SerialKind, 'SerialKind', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ENUM, 'ENUM', objectMeta, SerialKind, undefined, undefined, undefined, []);
  setMetadataFor(CONTEXTUAL, 'CONTEXTUAL', objectMeta, SerialKind, undefined, undefined, undefined, []);
  setMetadataFor(PolymorphicKind, 'PolymorphicKind', classMeta, SerialKind, undefined, undefined, undefined, []);
  setMetadataFor(SEALED_0, 'SEALED', objectMeta, PolymorphicKind, undefined, undefined, undefined, []);
  setMetadataFor(OPEN, 'OPEN', objectMeta, PolymorphicKind, undefined, undefined, undefined, []);
  setMetadataFor(PrimitiveKind, 'PrimitiveKind', classMeta, SerialKind, undefined, undefined, undefined, []);
  setMetadataFor(INT, 'INT', objectMeta, PrimitiveKind, undefined, undefined, undefined, []);
  setMetadataFor(STRING, 'STRING', objectMeta, PrimitiveKind, undefined, undefined, undefined, []);
  setMetadataFor(StructureKind, 'StructureKind', classMeta, SerialKind, undefined, undefined, undefined, []);
  setMetadataFor(CLASS, 'CLASS', objectMeta, StructureKind, undefined, undefined, undefined, []);
  setMetadataFor(LIST, 'LIST', objectMeta, StructureKind, undefined, undefined, undefined, []);
  setMetadataFor(MAP, 'MAP', objectMeta, StructureKind, undefined, undefined, undefined, []);
  setMetadataFor(OBJECT, 'OBJECT', objectMeta, StructureKind, undefined, undefined, undefined, []);
  function decodeSequentially() {
    return false;
  }
  setMetadataFor(CompositeDecoder, 'CompositeDecoder', interfaceMeta, undefined, undefined, undefined, undefined, []);
  function shouldEncodeElementDefault(descriptor, index) {
    return true;
  }
  setMetadataFor(CompositeEncoder, 'CompositeEncoder', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ListLikeDescriptor, 'ListLikeDescriptor', classMeta, undefined, [SerialDescriptor], undefined, undefined, []);
  setMetadataFor(ArrayListClassDesc, 'ArrayListClassDesc', classMeta, ListLikeDescriptor, undefined, undefined, undefined, []);
  setMetadataFor(ArrayClassDesc, 'ArrayClassDesc', classMeta, ListLikeDescriptor, undefined, undefined, undefined, []);
  setMetadataFor(AbstractCollectionSerializer, 'AbstractCollectionSerializer', classMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(CollectionLikeSerializer, 'CollectionLikeSerializer', classMeta, AbstractCollectionSerializer, undefined, undefined, undefined, []);
  setMetadataFor(CollectionSerializer, 'CollectionSerializer', classMeta, CollectionLikeSerializer, undefined, undefined, undefined, []);
  setMetadataFor(ArrayListSerializer, 'ArrayListSerializer', classMeta, CollectionSerializer, undefined, undefined, undefined, []);
  setMetadataFor(ReferenceArraySerializer, 'ReferenceArraySerializer', classMeta, CollectionLikeSerializer, undefined, undefined, undefined, []);
  setMetadataFor(EnumSerializer, 'EnumSerializer', classMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(PluginGeneratedSerialDescriptor, 'PluginGeneratedSerialDescriptor', classMeta, undefined, [SerialDescriptor, CachedNames], undefined, undefined, []);
  setMetadataFor(EnumDescriptor, 'EnumDescriptor', classMeta, PluginGeneratedSerialDescriptor, undefined, undefined, undefined, []);
  setMetadataFor(NullableSerializer, 'NullableSerializer', classMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(SerialDescriptorForNullable, 'SerialDescriptorForNullable', classMeta, undefined, [SerialDescriptor, CachedNames], undefined, undefined, []);
  function typeParametersSerializers() {
    return get_EMPTY_SERIALIZER_ARRAY();
  }
  setMetadataFor(GeneratedSerializer, 'GeneratedSerializer', interfaceMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(StringSerializer, 'StringSerializer', objectMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(IntSerializer, 'IntSerializer', objectMeta, undefined, [KSerializer], undefined, undefined, []);
  setMetadataFor(PrimitiveSerialDescriptor, 'PrimitiveSerialDescriptor', classMeta, undefined, [SerialDescriptor], undefined, undefined, []);
  setMetadataFor(SerializersModule, 'SerializersModule', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SerialModuleImpl, 'SerialModuleImpl', classMeta, SerializersModule, undefined, undefined, undefined, []);
  setMetadataFor(ContextualProvider, 'ContextualProvider', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Argless, 'Argless', classMeta, ContextualProvider, undefined, undefined, undefined, []);
  setMetadataFor(WithTypeArguments, 'WithTypeArguments', classMeta, ContextualProvider, undefined, undefined, undefined, []);
  function contextual(kClass, serializer) {
    return this.wp(kClass, SerializersModuleCollector$contextual$lambda(serializer));
  }
  setMetadataFor(SerializersModuleCollector, 'SerializersModuleCollector', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SerializableWith, 'SerializableWith', classMeta, undefined, undefined, 0, undefined, []);
  setMetadataFor(Json, 'Json', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Default, 'Default', objectMeta, Json, undefined, undefined, undefined, []);
  setMetadataFor(JsonBuilder, 'JsonBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(JsonImpl, 'JsonImpl', classMeta, Json, undefined, undefined, undefined, []);
  setMetadataFor(JsonConfiguration, 'JsonConfiguration', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(PolymorphismValidator, 'PolymorphismValidator', classMeta, undefined, [SerializersModuleCollector], undefined, undefined, []);
  setMetadataFor(DescriptorSchemaCache, 'DescriptorSchemaCache', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_10, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(KotlinxSerializer, 'KotlinxSerializer', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SerializerInitializer, 'SerializerInitializer', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(System, 'System', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_11, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Instant_0, 'Instant', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Message, 'Message', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Command, 'Command', interfaceMeta, undefined, [Message], undefined, undefined, []);
  setMetadataFor(Event, 'Event', interfaceMeta, undefined, [Message], undefined, undefined, []);
  setMetadataFor(Query, 'Query', interfaceMeta, undefined, [Message], undefined, undefined, []);
  setMetadataFor(F2ErrorDTO, 'F2ErrorDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_12, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(F2Error, 'F2Error', classMeta, undefined, [F2ErrorDTO], undefined, {0: $serializer_getInstance}, []);
  setMetadataFor(Companion_13, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(F2Exception, 'F2Exception', classMeta, RuntimeException, undefined, undefined, undefined, []);
  function and(match) {
    var tmp = listOf([this, match]);
    return AndMatch_init_$Create$(tmp, false, 2, null);
  }
  function or(match) {
    var tmp = listOf([this, match]);
    return OrMatch_init_$Create$(tmp, false, 2, null);
  }
  setMetadataFor(Match, 'Match', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AndMatch, 'AndMatch', classMeta, undefined, [Match], undefined, undefined, []);
  setMetadataFor(OrMatch, 'OrMatch', classMeta, undefined, [Match], undefined, undefined, []);
  setMetadataFor(SortDTO, 'SortDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(PageDTO, 'PageDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_14, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_0, '$serializer', classMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(Page, 'Page', classMeta, undefined, [PageDTO], undefined, {0: Companion_getInstance_14}, []);
  setMetadataFor(PageQueryDTO, 'PageQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(PageQueryResultDTO, 'PageQueryResultDTO', interfaceMeta, undefined, [Event, PageDTO], undefined, undefined, []);
  setMetadataFor(Companion_15, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_1, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(PageQuery, 'PageQuery', classMeta, undefined, [PageQueryDTO], undefined, {0: $serializer_getInstance_0}, []);
  setMetadataFor(Companion_16, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_2, '$serializer', classMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(PageQueryResult, 'PageQueryResult', classMeta, undefined, [PageQueryResultDTO], undefined, {0: Companion_getInstance_16}, []);
  setMetadataFor(Companion_17, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Pagination, 'Pagination', interfaceMeta, undefined, undefined, undefined, {0: Companion_getInstance_17}, []);
  setMetadataFor(OffsetPaginationDTO, 'OffsetPaginationDTO', interfaceMeta, undefined, [Pagination], undefined, undefined, []);
  setMetadataFor(PagePaginationDTO, 'PagePaginationDTO', interfaceMeta, undefined, [Pagination], undefined, undefined, []);
  setMetadataFor(Companion_18, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_3, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(OffsetPagination, 'OffsetPagination', classMeta, undefined, [OffsetPaginationDTO], undefined, {0: $serializer_getInstance_1}, []);
  setMetadataFor(Companion_19, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_4, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(PagePagination, 'PagePagination', classMeta, undefined, [PagePaginationDTO], undefined, {0: $serializer_getInstance_2}, []);
  setMetadataFor(AuthedUserDTO, 'AuthedUserDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Role, 'Role', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(AddressDTO, 'AddressDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientJs$doCall$slambda, 'ClientJs$doCall$slambda', classMeta, CoroutineImpl, undefined, undefined, undefined, [1]);
  setMetadataFor(ClientJs, 'ClientJs', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AuthRealm, 'AuthRealm', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AuthRealmPassword, 'AuthRealmPassword', classMeta, AuthRealm, undefined, undefined, undefined, []);
  setMetadataFor(AuthRealmClientSecret, 'AuthRealmClientSecret', classMeta, AuthRealm, undefined, undefined, undefined, []);
  setMetadataFor(F2Function, 'F2Function', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(F2Supplier, 'F2Supplier', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(F2Consumer, 'F2Consumer', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(KeycloakF2Message, 'KeycloakF2Message', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(KeycloakF2Query, 'KeycloakF2Query', interfaceMeta, undefined, [Query, KeycloakF2Message], undefined, undefined, []);
  setMetadataFor(KeycloakF2Command, 'KeycloakF2Command', interfaceMeta, undefined, [Command, KeycloakF2Message], undefined, undefined, []);
  setMetadataFor(KeycloakF2Result, 'KeycloakF2Result', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(Role_0, 'RoleModel', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleCompositesModel, 'RoleCompositesModel', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RolesCompositeModel, 'RolesCompositesModel', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleCompositeGetQuery, 'RoleCompositeGetQuery', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(RoleCompositeGetResult, 'RoleCompositeGetResult', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleCompositeObjType, 'RoleCompositeObjType', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(RoleGetByIdQuery, 'RoleGetByIdQuery', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleGetByIdResult, 'RoleGetByIdResult', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleGetByNameQuery, 'RoleGetByNameQuery', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleGetByNameResult, 'RoleGetByNameResult', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RolePageQuery, 'RolePageQuery', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RolePageResult, 'RolePageResult', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoleAddCompositesCommand, 'RoleAddCompositesCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(RoleAddedCompositesEvent, 'RoleAddedCompositesEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(RoleCreateCommand, 'RoleCreateCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(RoleCreatedEvent, 'RoleCreatedEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(RoleUpdateCommand, 'RoleUpdateCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(RoleUpdatedEvent, 'RoleUpdatedEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(GroupCreateCommand, 'GroupCreateCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(GroupCreatedEvent, 'GroupCreatedEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(GroupDisableCommand, 'GroupDisableCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(GroupDisabledEvent, 'GroupDisabledEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(GroupSetAttributesCommand, 'GroupSetAttributesCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(GroupSetAttributesEvent, 'GroupSetAttributesEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(GroupUpdateCommand, 'GroupUpdateCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(GroupUpdatedEvent, 'GroupUpdatedEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(UserCreateCommand, 'UserCreateCommand', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserCreatedEvent, 'UserCreatedCommand', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserDeleteCommand, 'UserDeleteCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserDeletedEvent, 'UserDeletedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserDisableCommand, 'UserDisableCommand', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserDisabledEvent, 'UserDisabledEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserEmailSendActionsCommand, 'UserEmailSendActionsCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserEmailSentActionsEvent, 'UserEmailSentActionsEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(UserJoinGroupCommand, 'UserJoinGroupCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserJoinedGroupEvent, 'UserJoinedGroupEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(UserRolesGrantCommand, 'UserRolesGrantCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserRolesGrantedEvent, 'UserRolesGrantedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserRolesRevokeCommand, 'UserRolesRevokeCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserRolesRevokedEvent, 'UserRolesRevokedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserRolesSetCommand, 'UserRolesSetCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserRolesSetEvent, 'UserRolesSetEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserSetAttributesCommand, 'UserSetAttributesCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserSetAttributesEvent, 'UserSetAttributesEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserUpdateEmailCommand, 'UserUpdateEmailCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserUpdatedEmailEvent, 'UserUpdatedEmailEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(UserUpdateCommand, 'UserUpdateCommand', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserUpdatedEvent, 'UserUpdatedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserUpdatePasswordCommand, 'UserUpdatePasswordCommand', classMeta, undefined, [KeycloakF2Command], undefined, undefined, []);
  setMetadataFor(UserUpdatedPasswordEvent, 'UserUpdatedPasswordEvent', classMeta, undefined, [KeycloakF2Result], undefined, undefined, []);
  setMetadataFor(UserGetByEmailQuery, 'UserGetByEmailQuery', classMeta, undefined, [KeycloakF2Query], undefined, undefined, []);
  setMetadataFor(UserGetByEmailQueryResult, 'UserGetByEmailResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGetByUsernameQuery, 'UserGetByUsernameQuery', classMeta, undefined, [KeycloakF2Query], undefined, undefined, []);
  setMetadataFor(UserGetByUsernameResult, 'UserGetByUsernameResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGetQuery, 'UserGetQuery', classMeta, undefined, [KeycloakF2Query], undefined, undefined, []);
  setMetadataFor(UserGetResult, 'UserGetResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGetGroupsQuery, 'UserGetGroupsQuery', classMeta, undefined, [KeycloakF2Query], undefined, undefined, []);
  setMetadataFor(UserGetGroupsResult, 'UserGetGroupsResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGetRolesQuery, 'UserGetRolesQuery', classMeta, undefined, [KeycloakF2Query], undefined, undefined, []);
  setMetadataFor(UserGetRolesResult, 'UserGetRolesResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserPageQuery, 'UserPageQuery', classMeta, undefined, [KeycloakF2Query], undefined, undefined, []);
  setMetadataFor(UserPageResult, 'UserPageResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGroup, 'UserGroup', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UserModel, 'UserModel', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientModel, 'ClientModel', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientGetByClientIdentifierQuery, 'ClientGetByClientIdentifierQuery', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientGetByClientIdentifierResult, 'ClientGetByClientIdentifierResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientGetQuery, 'ClientGetQuery', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientGetResult, 'ClientGetResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientGetSecretQuery, 'ClientGetSecretQuery', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientGetSecretResult, 'ClientGetSecretResult', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientGetServiceAccountQuery, 'ClientGetServiceAccountQuery', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientGetServiceAccountResult, 'ClientGetServiceAccountResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientPageQuery, 'ClientPageQuery', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientPageResult, 'ClientPageResult', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientCreateCommand, 'ClientCreateCommand', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientCreatedEvent, 'ClientCreatedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientDeleteCommand, 'ClientDeleteCommand', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientDeletedEvent, 'ClientDeletedEvent', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientGenerateSecretCommand, 'ClientGenerateSecretCommand', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientGeneratedSecretEvent, 'ClientGeneratedSecretEvent', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientRealmManagementRolesGrantCommand, 'ClientRealmManagementRolesGrantCommand', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientRealmManagementRolesGrantedEvent, 'ClientRealmManagementRolesGrantedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientServiceAccountRolesGrantCommand, 'ClientServiceAccountRolesGrantCommand', classMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(ClientServiceAccountRolesGrantedEvent, 'ClientServiceAccountRolesGrantedEvent', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(ClientUpdateUrisCommand, 'ClientUpdateUrisCommand', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ClientUpdatedUrisEvent, 'ClientUpdatedUrisEvent', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrganizationCreateCommandDTO, 'OrganizationCreateCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(OrganizationCreatedEventDTO, 'OrganizationCreatedEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationDeleteCommandDTO, 'OrganizationDeleteCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(OrganizationDeletedEventDTO, 'OrganizationDeletedEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationDisableCommandDTO, 'OrganizationDisableCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(OrganizationDisabledEventDTO, 'OrganizationDisabledEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationUpdateCommandDTO, 'OrganizationUpdateCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(OrganizationUpdatedResultDTO, 'OrganizationUpdatedResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationUploadLogoCommandDTO, 'OrganizationUploadLogoCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(OrganizationUploadedLogoEventDTO, 'OrganizationUploadedLogoEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationGetFromInseeQueryDTO, 'OrganizationGetFromInseeQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(OrganizationGetFromInseeResultDTO, 'OrganizationGetFromInseeResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationGetQueryDTO, 'OrganizationGetQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(OrganizationGetResultDTO, 'OrganizationGetResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationPageQueryDTO, 'OrganizationPageQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(OrganizationPageResultDTO, 'OrganizationPageResultDTO', interfaceMeta, undefined, [PageDTO], undefined, undefined, []);
  setMetadataFor(OrganizationRefListQueryDTO, 'OrganizationRefListQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(OrganizationRefListResultDTO, 'OrganizationRefListResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(OrganizationDTO, 'OrganizationDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrganizationRefDTO, 'OrganizationRefDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrganizationPolicies, 'OrganizationPolicies', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UserCreateCommandDTO, 'UserCreateCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserCreatedEventDTO, 'UserCreatedEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserDeleteCommandDTO, 'UserDeleteCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserDeletedEventDTO, 'UserDeletedEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserDisableCommandDTO, 'UserDisableCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserDisabledEventDTO, 'UserDisabledEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserResetPasswordCommandDTO, 'UserResetPasswordCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserResetPasswordEventDTO, 'UserResetPasswordEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserUpdateEmailCommandDTO, 'UserUpdateEmailCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserUpdatedEmailEventDTO, 'UserUpdatedEmailEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserUpdateCommandDTO, 'UserUpdateCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserUpdatedEventDTO, 'UserUpdatedEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserUpdatePasswordCommandDTO, 'UserUpdatePasswordCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserUpdatedPasswordEventDTO, 'UserUpdatedPasswordEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserUploadLogoCommandDTO, 'UserUploadLogoCommandDTO', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(UserUploadedLogoEventDTO, 'UserUploadedLogoEventDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserExistsByEmailQueryDTO, 'UserExistsByEmailQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(UserExistsByEmailResultDTO, 'UserExistsByEmailResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGetByEmailQueryDTO, 'UserGetByEmailQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(UserGetByEmailResultDTO, 'UserGetByEmailResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserGetQueryDTO, 'UserGetQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(UserGetResultDTO, 'UserGetResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserPageQueryDTO, 'UserPageQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(UserPageResultDTO, 'UserPageResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(UserDTO, 'UserDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(UserPolicies, 'UserPolicies', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmChaincodeQueries, 'SsmChaincodeQueries', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmQueryDTO, 'SsmQueryDTO', interfaceMeta, undefined, [Query], undefined, undefined, []);
  setMetadataFor(SsmItemResultDTO, 'SsmItemResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(SsmItemsResultDTO, 'SsmItemsResultDTO', interfaceMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(BlockDTO, 'BlockDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Block, 'Block', classMeta, undefined, [BlockDTO], undefined, undefined, []);
  setMetadataFor(EnvelopeType, 'EnvelopeType', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(IdentitiesInfoDTO, 'IdentitiesInfoDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(IdentitiesInfo, 'IdentitiesInfo', classMeta, undefined, [IdentitiesInfoDTO], undefined, undefined, []);
  setMetadataFor(TransactionDTO, 'TransactionDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Transaction, 'Transaction', classMeta, undefined, [TransactionDTO], undefined, undefined, []);
  setMetadataFor(SsmChaincodePropertiesDTO, 'SsmChaincodePropertiesDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ChaincodeSsmConfig, 'SsmChaincodeConfig', classMeta, undefined, [SsmChaincodePropertiesDTO], undefined, undefined, []);
  setMetadataFor(AgentDTO, 'AgentDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_20, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Agent, 'Agent', classMeta, undefined, [AgentDTO], undefined, undefined, []);
  setMetadataFor(ChaincodeDTO, 'ChaincodeDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Chaincode, 'Chaincode', classMeta, undefined, [ChaincodeDTO], undefined, undefined, []);
  setMetadataFor(SsmDTO, 'SsmDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Ssm, 'Ssm', classMeta, undefined, [SsmDTO], undefined, undefined, []);
  setMetadataFor(WithPrivate, 'WithPrivate', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmContextDTO, 'SsmContextDTO', interfaceMeta, undefined, [WithPrivate], undefined, undefined, []);
  setMetadataFor(SsmContext, 'SsmContext', classMeta, undefined, [SsmContextDTO], undefined, undefined, []);
  setMetadataFor(SsmGrantDTO, 'SsmGrantDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmGrant, 'SsmGrant', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CreditDTO, 'CreditDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Credit, 'Credit', classMeta, undefined, [CreditDTO], undefined, undefined, []);
  setMetadataFor(SsmSessionDTO, 'SsmSessionDTO', interfaceMeta, undefined, [WithPrivate], undefined, undefined, []);
  setMetadataFor(SsmSession, 'SsmSession', classMeta, undefined, [SsmSessionDTO], undefined, undefined, []);
  setMetadataFor(SsmSessionStateDTO, 'SsmSessionStateDTO', interfaceMeta, undefined, [SsmSessionDTO, WithPrivate], undefined, undefined, []);
  setMetadataFor(SsmSessionState, 'SsmSessionState', classMeta, undefined, [SsmSessionStateDTO], undefined, undefined, []);
  setMetadataFor(SsmSessionStateLogDTO, 'SsmSessionStateLogDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmSessionStateLog, 'SsmSessionStateLog', classMeta, undefined, [SsmSessionStateLogDTO], undefined, undefined, []);
  setMetadataFor(SsmTransitionDTO, 'SsmTransitionDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmTransition, 'SsmTransition', classMeta, undefined, [SsmTransitionDTO], undefined, undefined, []);
  setMetadataFor(ChaincodeUriDTO, 'ChaincodeUriDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_21, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ChaincodeUri, 'ChaincodeUri', classMeta, undefined, [ChaincodeUriDTO], undefined, undefined, []);
  setMetadataFor(SsmUriDTO, 'SsmUriDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_22, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmUri, 'SsmUri', classMeta, undefined, [SsmUriDTO], undefined, undefined, []);
  setMetadataFor(SsmGetAdminQuery, 'SsmGetAdminQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmGetAdminResult, 'SsmGetAdminResult', classMeta, undefined, [SsmItemResultDTO], undefined, undefined, []);
  setMetadataFor(SsmGetQuery, 'SsmGetQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmGetResult, 'SsmGetResult', classMeta, undefined, [SsmItemResultDTO], undefined, undefined, []);
  setMetadataFor(SsmGetSessionLogsQuery, 'SsmGetSessionLogsQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmGetSessionLogsQueryResult, 'SsmGetSessionLogsQueryResult', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SsmGetSessionQuery, 'SsmGetSessionQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmGetSessionResult, 'SsmGetSessionResult', classMeta, undefined, [SsmItemResultDTO], undefined, undefined, []);
  setMetadataFor(SsmGetTransactionQuery, 'SsmGetTransactionQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmGetTransactionQueryResult, 'SsmGetTransactionQueryResult', classMeta, undefined, [SsmItemResultDTO], undefined, undefined, []);
  setMetadataFor(SsmGetUserQuery, 'SsmGetUserQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmGetUserResult, 'SsmGetUserResult', classMeta, undefined, [SsmItemResultDTO], undefined, undefined, []);
  setMetadataFor(SsmListAdminQuery, 'SsmListAdminQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmListAdminResult, 'SsmListAdminResult', classMeta, undefined, [SsmItemsResultDTO], undefined, undefined, []);
  setMetadataFor(SsmListSessionQuery, 'SsmListSessionQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmListSessionResult, 'SsmListSessionResult', classMeta, undefined, [SsmItemsResultDTO], undefined, undefined, []);
  setMetadataFor(SsmListSsmQuery, 'SsmListSsmQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmListSsmResult, 'SsmListSsmResult', classMeta, undefined, [SsmItemsResultDTO], undefined, undefined, []);
  setMetadataFor(SsmListUserQuery, 'SsmListUserQuery', classMeta, undefined, [SsmQueryDTO], undefined, undefined, []);
  setMetadataFor(SsmListUserResult, 'SsmListUserResult', classMeta, undefined, [SsmItemsResultDTO], undefined, undefined, []);
  setMetadataFor(Automate, 'Automate', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_23, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_5, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(S2Automate, 'S2Automate', classMeta, undefined, [Automate], undefined, {0: $serializer_getInstance_3}, []);
  setMetadataFor(S2InitCommand, 'S2InitCommand', interfaceMeta, undefined, [Command], undefined, undefined, []);
  setMetadataFor(WithId, 'WithId', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2Command, 'S2Command', interfaceMeta, undefined, [Command, WithId], undefined, undefined, []);
  setMetadataFor(S2Error, 'S2Error', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2ErrorBase, 'S2ErrorBase', classMeta, undefined, [S2Error], undefined, undefined, []);
  setMetadataFor(S2Event, 'S2Event', interfaceMeta, undefined, [Event, WithId], undefined, undefined, []);
  setMetadataFor(S2EventSuccess, 'S2EventSuccess', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(S2EventError, 'S2EventError', classMeta, undefined, [Event], undefined, undefined, []);
  setMetadataFor(S2Role, 'S2Role', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2State, 'S2State', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2SubMachine, 'S2SubMachine', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2InitTransition, 'S2InitTransition', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_24, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_6, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(S2Transition, 'S2Transition', classMeta, undefined, undefined, undefined, {0: $serializer_getInstance_4}, []);
  setMetadataFor(Companion_25, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_7, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(S2TransitionValue, 'S2TransitionValue', classMeta, undefined, undefined, undefined, {0: $serializer_getInstance_5}, []);
  setMetadataFor(Companion_26, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_8, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(S2RoleValue, 'S2RoleValue', classMeta, undefined, undefined, undefined, {0: $serializer_getInstance_6}, []);
  setMetadataFor(Companion_27, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_9, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(S2StateValue, 'S2StateValue', classMeta, undefined, undefined, undefined, {0: $serializer_getInstance_7}, []);
  setMetadataFor(S2AutomateBuilder, 'S2AutomateBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2SourcingAutomateBuilder, 'S2SourcingAutomateBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2InitTransitionBuilder, 'S2InitTransitionBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2TransitionBuilder, 'S2TransitionBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(S2SelfTransitionBuilder, 'S2SelfTransitionBuilder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(WithS2Id, 'WithS2Id', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(WithS2State, 'WithS2State', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(WithS2IdAndStatus, 'WithS2IdAndStatus', interfaceMeta, undefined, [WithS2Id, WithS2State], undefined, undefined, []);
  setMetadataFor(Decide, 'Decide', interfaceMeta, undefined, [F2Function], undefined, undefined, []);
  function parseString$default(string, base, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      base = 10;
    return $handler == null ? this.n16(string, base) : $handler(string, base);
  }
  function tryFromFloat$default(float, exactRequired, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      exactRequired = false;
    return $handler == null ? this.q16(float, exactRequired) : $handler(float, exactRequired);
  }
  function tryFromDouble$default(double, exactRequired, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      exactRequired = false;
    return $handler == null ? this.s16(double, exactRequired) : $handler(double, exactRequired);
  }
  setMetadataFor(Creator, 'Creator', interfaceMeta, undefined, undefined, undefined, undefined, []);
  function plus_0(other) {
    return this.v16().x16(other);
  }
  function minus(other) {
    return this.v16().z16(other);
  }
  function times(other) {
    return this.v16().b17(other);
  }
  function div(other) {
    return this.v16().d17(other);
  }
  function plus_1(int) {
    return this.v16().x16(this.u16().p16(int));
  }
  function times_0(int) {
    return this.v16().b17(this.u16().p16(int));
  }
  function minus_0(int) {
    return this.v16().z16(this.u16().p16(int));
  }
  function div_0(int) {
    return this.v16().d17(this.u16().p16(int));
  }
  function rem(int) {
    return this.v16().j17(this.u16().p16(int));
  }
  setMetadataFor(CommonBigNumberOperations, 'CommonBigNumberOperations', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SignificantDecider, 'SignificantDecider', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(Companion_28, 'Companion', objectMeta, undefined, [Creator], undefined, undefined, []);
  setMetadataFor(ScaleOps, 'ScaleOps', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(BigDecimal, 'BigDecimal', classMeta, undefined, [CommonBigNumberOperations], undefined, undefined, []);
  setMetadataFor(Companion_29, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DecimalMode, 'DecimalMode', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RoundingMode, 'RoundingMode', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(Companion_30, 'Companion', objectMeta, undefined, [Creator], undefined, undefined, []);
  setMetadataFor(QuotientAndRemainder, 'QuotientAndRemainder', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(BigInteger, 'BigInteger', classMeta, undefined, [CommonBigNumberOperations], undefined, undefined, []);
  setMetadataFor(Sign, 'Sign', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(Platform, 'Platform', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(Sextuple, 'Sextuple', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Quadruple, 'Quadruple', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SignedUIntArray, 'SignedUIntArray', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(BigInteger32Arithmetic, 'BigInteger32Arithmetic', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SignedULongArray, 'SignedULongArray', classMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(BigInteger63Arithmetic, 'BigInteger63Arithmetic', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RuntimePlatform, 'RuntimePlatform', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Roles, 'Roles', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Role_1, 'Role', classMeta, Enum, [Enum, S2Role], undefined, undefined, []);
  setMetadataFor(ExceptionCodes, 'ExceptionCodes', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(GeoLocationDTO, 'GeoLocationDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RedirectableRoutes, 'RedirectableRoutes', objectMeta, undefined, undefined, undefined, undefined, []);
  function s2Id() {
    return this.id;
  }
  setMetadataFor(S2SourcingEvent, 'S2SourcingEvent', interfaceMeta, undefined, [Event, WithId, WithS2Id], undefined, undefined, []);
  setMetadataFor(Code, 'Code', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceDTO, 'EvidenceDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeList, 'EvidenceTypeList', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceType, 'EvidenceType', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(Companion_31, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_10, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(CoreLocationLocation, 'CoreLocationLocation', classMeta, undefined, undefined, undefined, {0: $serializer_getInstance_8}, []);
  setMetadataFor(Companion_32, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor($serializer_11, '$serializer', objectMeta, undefined, [GeneratedSerializer], undefined, undefined, []);
  setMetadataFor(PeriodOfTime, 'PeriodOfTime', classMeta, undefined, undefined, undefined, {0: $serializer_getInstance_9}, []);
  setMetadataFor(InformationConcept, 'InformationConcept', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(SupportedValueDTO, 'SupportedValueDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitDTO, 'DataUnitDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitInitCommand, 'DataUnitInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(DataUnitCommand, 'DataUnitCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  setMetadataFor(DataUnitEvent, 'DataUnitEvent', interfaceMeta, undefined, [Event, WithS2Id], undefined, undefined, []);
  setMetadataFor(DataUnitCreatedEventDTO, 'DataUnitCreatedEventDTO', interfaceMeta, undefined, [DataUnitEvent], undefined, undefined, []);
  setMetadataFor(DataUnitType, 'DataUnitType', classMeta, Enum, undefined, undefined, undefined, []);
  setMetadataFor(InformationConceptInitCommand, 'InformationConceptInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(InformationConceptCommand, 'InformationConceptCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  setMetadataFor(InformationConceptEvent, 'InformationConceptEvent', interfaceMeta, undefined, [Event, WithS2Id], undefined, undefined, []);
  setMetadataFor(InformationConceptCreateCommandDTO, 'InformationConceptCreateCommandDTO', interfaceMeta, undefined, [InformationConceptInitCommand], undefined, undefined, []);
  setMetadataFor(InformationConceptCreatedEventDTO, 'InformationConceptCreatedEventDTO', interfaceMeta, undefined, [InformationConceptEvent], undefined, undefined, []);
  setMetadataFor(EvidenceTypeInitCommand, 'EvidenceTypeInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(EvidenceTypeCommand, 'EvidenceTypeCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  setMetadataFor(EvidenceTypeEvent, 'EvidenceTypeEvent', interfaceMeta, undefined, [Event, WithS2Id], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListInitCommand, 'EvidenceTypeListInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListCommand, 'EvidenceTypeListCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  function s2Id_0() {
    return this.id;
  }
  setMetadataFor(EvidenceTypeListEvent, 'EvidenceTypeListEvent', interfaceMeta, undefined, [Event, WithS2Id, WithId], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListCreateCommandDTO, 'EvidenceTypeListCreateCommandDTO', interfaceMeta, undefined, [EvidenceTypeListInitCommand], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListCreatedEventDTO, 'EvidenceTypeListCreatedEventDTO', interfaceMeta, undefined, [EvidenceTypeListEvent], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListUpdateCommandDTO, 'EvidenceTypeListUpdateCommandDTO', interfaceMeta, undefined, [EvidenceTypeListCommand], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListUpdatedEventDTO, 'EvidenceTypeListUpdatedEventDTO', interfaceMeta, undefined, [EvidenceTypeListEvent], undefined, undefined, []);
  setMetadataFor(EvidenceTypeCreateCommandDTO, 'EvidenceTypeCreateCommandDTO', interfaceMeta, undefined, [EvidenceTypeInitCommand], undefined, undefined, []);
  setMetadataFor(EvidenceTypeCreatedEventDTO, 'EvidenceTypeCreatedEventDTO', interfaceMeta, undefined, [EvidenceTypeEvent], undefined, undefined, []);
  setMetadataFor(RequirementInitCommand, 'RequirementInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(RequirementCommand, 'RequirementCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  function s2Id_1() {
    return this.id;
  }
  setMetadataFor(RequirementEvent, 'RequirementEvent', interfaceMeta, undefined, [Event, WithS2Id, WithId], undefined, undefined, []);
  setMetadataFor(RequirementAddRequirementsCommandDTO, 'RequirementAddRequirementsCommandDTO', interfaceMeta, undefined, [RequirementCommand], undefined, undefined, []);
  setMetadataFor(RequirementAddedRequirementsEventDTO, 'RequirementAddedRequirementsEventDTO', interfaceMeta, undefined, [RequirementEvent], undefined, undefined, []);
  setMetadataFor(RequirementCreatedEventDTO, 'RequirementCreatedEventDTO', interfaceMeta, undefined, [RequirementEvent], undefined, undefined, []);
  setMetadataFor(RequirementUpdateCommandDTO, 'RequirementUpdateCommandDTO', interfaceMeta, undefined, [RequirementCommand], undefined, undefined, []);
  setMetadataFor(RequirementUpdatedEventDTO, 'RequirementUpdatedEventDTO', interfaceMeta, undefined, [RequirementEvent], undefined, undefined, []);
  setMetadataFor(FileAskQuestionQueryDTO, 'FileAskQuestionQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FileAskQuestionResultDTO, 'FileAskQuestionResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ChatMessageDTO, 'FileAskMessageDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ChatMetadataDTO, 'FileAskMetadataDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FilePathDTO, 'FilePathDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationInitCommand, 'CertificationInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(CertificationCommand, 'CertificationCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  function s2Id_2() {
    return this.id;
  }
  setMetadataFor(CertificationEvent, 'CertificationEvent', interfaceMeta, undefined, [Event, WithS2Id, WithId], undefined, undefined, []);
  setMetadataFor(CertificationAddedEvidenceEventDTO, 'CertificationAddedEvidenceEventDTO', interfaceMeta, undefined, [CertificationEvent], undefined, undefined, []);
  setMetadataFor(CertificationAddRequirementsCommandDTO, 'CertificationAddRequirementsCommandDTO', interfaceMeta, undefined, [CertificationCommand], undefined, undefined, []);
  setMetadataFor(CertificationAddedRequirementsEventDTO, 'CertificationAddedRequirementsEventDTO', interfaceMeta, undefined, [CertificationEvent], undefined, undefined, []);
  setMetadataFor(CertificationAddValuesCommandDTO, 'CertificationAddValuesCommandDTO', interfaceMeta, undefined, [CertificationCommand], undefined, undefined, []);
  setMetadataFor(CertificationAddedValuesEventDTO, 'CertificationAddedValuesEventDTO', interfaceMeta, undefined, [CertificationEvent], undefined, undefined, []);
  setMetadataFor(CertificationCreateCommandDTO, 'CertificationCreateCommandDTO', interfaceMeta, undefined, [CertificationInitCommand], undefined, undefined, []);
  setMetadataFor(CertificationCreatedEventDTO, 'CertificationCreatedEventDTO', interfaceMeta, undefined, [CertificationEvent], undefined, undefined, []);
  setMetadataFor(CertificationRemoveEvidenceCommandDTO, 'CertificationRemoveEvidenceCommandDTO', interfaceMeta, undefined, [CertificationCommand], undefined, undefined, []);
  setMetadataFor(CertificationRemovedEvidenceEventDTO, 'CertificationRemovedEvidenceEventDTO', interfaceMeta, undefined, [CertificationEvent], undefined, undefined, []);
  setMetadataFor(CertificationRemoveRequirementsCommandDTO, 'CertificationRemoveRequirementsCommandDTO', interfaceMeta, undefined, [CertificationCommand], undefined, undefined, []);
  setMetadataFor(CertificationRemovedRequirementsEventDTO, 'CertificationRemovedRequirementsEventDTO', interfaceMeta, undefined, [CertificationEvent], undefined, undefined, []);
  setMetadataFor(CertificationDTO, 'CertificationDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceDTO_0, 'EvidenceDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(GetEvidenceTypeListsQueryDTO, 'GetEvidenceTypeListsQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(GetEvidenceTypeListsQueryResultDTO, 'GetEvidenceTypeListsQueryResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeDTO, 'EvidenceTypeDTO', interfaceMeta, undefined, [EvidenceType], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListChoicesDTO, 'EvidenceTypeListChoicesDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListDTO, 'EvidenceTypeListDTO', interfaceMeta, undefined, [EvidenceTypeList], undefined, undefined, []);
  setMetadataFor(DataUnitCreateCommandDTO, 'DataUnitCreateCommandDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitCreatedEventDTO_0, 'DataUnitCreatedEventDTO', interfaceMeta, undefined, [DataUnitCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(DataUnitDTO_0, 'DataUnitDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitTypeValues, 'DataUnitTypeValues', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitGetByIdentifierQueryDTO, 'DataUnitGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitGetByIdentifierResultDTO, 'DataUnitGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitGetQueryDTO, 'DataUnitGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(DataUnitGetResultDTO, 'DataUnitGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(InformationConceptCreateCommandDTO_0, 'InformationConceptCreateCommandDTO', interfaceMeta, undefined, [InformationConceptCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(InformationConceptCreatedEventDTO_0, 'InformationConceptCreatedEventDTO', interfaceMeta, undefined, [InformationConceptCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(InformationConceptDTO, 'InformationConceptDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequestInformationConceptDTO, 'RequestInformationConceptDTO', interfaceMeta, undefined, [InformationConcept], undefined, undefined, []);
  setMetadataFor(GetInformationConceptsQueryDTO, 'GetInformationConceptsQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(GetInformationConceptsQueryResultDTO, 'GetInformationConceptsQueryResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(InformationConceptGetByIdentifierQueryDTO, 'InformationConceptGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(InformationConceptGetByIdentifierResultDTO, 'InformationConceptGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(InformationConceptGetQueryDTO, 'InformationConceptGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(InformationConceptGetResultDTO, 'InformationConceptGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationAddEvidenceCommandDTO, 'CertificationAddEvidenceCommandDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationAddedEvidenceEventDTO_0, 'CertificationAddedEvidenceEventDTO', interfaceMeta, undefined, [CertificationAddedEvidenceEventDTO], undefined, undefined, []);
  setMetadataFor(CertificationAddRequirementsCommandDTO_0, 'CertificationAddRequirementsCommandDTO', interfaceMeta, undefined, [CertificationAddRequirementsCommandDTO], undefined, undefined, []);
  setMetadataFor(CertificationAddedRequirementsEventDTO_0, 'CertificationAddedRequirementsEventDTO', interfaceMeta, undefined, [CertificationAddedRequirementsEventDTO], undefined, undefined, []);
  setMetadataFor(CertificationAddValuesCommandDTO_0, 'CertificationAddValuesCommandDTO', interfaceMeta, undefined, [CertificationAddValuesCommandDTO], undefined, undefined, []);
  setMetadataFor(CertificationAddedValuesEventDTO_0, 'CertificationAddedValuesEventDTO', interfaceMeta, undefined, [CertificationAddedValuesEventDTO], undefined, undefined, []);
  setMetadataFor(RequestCreateCommandDTO, 'CertificationCreateCommandDTO', interfaceMeta, undefined, [CertificationCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(RequestCreatedEventDTO, 'CertificationCreatedEventDTO', interfaceMeta, undefined, [CertificationCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(RequestRemoveEvidenceCommandDTO, 'CertificationRemoveEvidenceCommandDTO', interfaceMeta, undefined, [CertificationRemoveEvidenceCommandDTO], undefined, undefined, []);
  setMetadataFor(RequestRemovedEvidenceEventDTO, 'CertificationRemovedEvidenceEventDTO', interfaceMeta, undefined, [CertificationRemovedEvidenceEventDTO], undefined, undefined, []);
  setMetadataFor(RequestRemoveRequirementsCommandDTO, 'CertificationRemoveRequirementsCommandDTO', interfaceMeta, undefined, [CertificationRemoveRequirementsCommandDTO], undefined, undefined, []);
  setMetadataFor(RequestRemovedRequirementsEventDTO, 'CertificationRemovedRequirementsEventDTO', interfaceMeta, undefined, [CertificationRemovedRequirementsEventDTO], undefined, undefined, []);
  setMetadataFor(CertificationDTO_0, 'CertificationDTO', interfaceMeta, undefined, [CertificationDTO], undefined, undefined, []);
  setMetadataFor(EvidenceDTO_1, 'EvidenceDTO', interfaceMeta, undefined, [EvidenceDTO_0], undefined, undefined, []);
  setMetadataFor(CertificationDownloadEvidenceQueryDTO, 'CertificationDownloadEvidenceQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationGetByIdentifierQueryDTO, 'CertificationGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationGetByIdentifierResultDTO, 'CertificationGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationGetQueryDTO, 'CertificationGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(CertificationGetResultDTO, 'CertificationGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListCreateCommandDTO_0, 'EvidenceTypeListCreateCommandDTO', interfaceMeta, undefined, [EvidenceTypeListCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListCreatedEventDTO_0, 'EvidenceTypeListCreatedEventDTO', interfaceMeta, undefined, [EvidenceTypeListCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListUpdateCommandDTO_0, 'EvidenceTypeListUpdateCommandDTO', interfaceMeta, undefined, [EvidenceTypeListUpdateCommandDTO], undefined, undefined, []);
  setMetadataFor(EvidenceTypeListUpdatedEventDTO_0, 'EvidenceTypeListUpdatedEventDTO', interfaceMeta, undefined, [EvidenceTypeListUpdatedEventDTO], undefined, undefined, []);
  setMetadataFor(EvidenceTypeCreateCommandDTO_0, 'EvidenceTypeCreateCommandDTO', interfaceMeta, undefined, [EvidenceTypeCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(EvidenceTypeCreatedEventDTO_0, 'EvidenceTypeCreatedEventDTO', interfaceMeta, undefined, [EvidenceTypeCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(EvidenceTypeDTO_0, 'EvidenceTypeDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListDTO_0, 'EvidenceTypeListDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeGetByIdentifierQueryDTO, 'EvidenceTypeGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeGetByIdentifierResultDTO, 'EvidenceTypeGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeGetQueryDTO, 'EvidenceTypeGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeGetResultDTO, 'EvidenceTypeGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListGetByIdentifierQueryDTO, 'EvidenceTypeListGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListGetByIdentifierResultDTO, 'EvidenceTypeListGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListGetQueryDTO, 'EvidenceTypeListGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(EvidenceTypeListGetResultDTO, 'EvidenceTypeListGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FrameworkInitCommand, 'FrameworkInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(FrameworkCommand, 'FrameworkCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  function s2Id_3() {
    return this.id;
  }
  setMetadataFor(FrameworkEvent, 'FrameworkEvent', interfaceMeta, undefined, [Event, WithS2Id, WithId], undefined, undefined, []);
  setMetadataFor(FrameworkCreateCommandDTO, 'FrameworkCreateCommandDTO', interfaceMeta, undefined, [FrameworkInitCommand], undefined, undefined, []);
  setMetadataFor(FrameworkCreatedEventDTO, 'FrameworkCreatedEventDTO', interfaceMeta, undefined, [FrameworkEvent], undefined, undefined, []);
  setMetadataFor(FrameworkDTO, 'FrameworkDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FrameworkCreateCommandDTO_0, 'FrameworkCreateCommandDTO', interfaceMeta, undefined, [FrameworkCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(FrameworkCreatedEventDTO_0, 'FrameworkCreatedEventDTO', interfaceMeta, undefined, [FrameworkCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(FrameworkDTO_0, 'FrameworkDTO', interfaceMeta, undefined, [FrameworkDTO], undefined, undefined, []);
  setMetadataFor(FrameworkGetByIdentifierQueryDTO, 'FrameworkGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FrameworkGetByIdentifierResultDTO, 'FrameworkGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FrameworkGetQueryDTO, 'FrameworkGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(FrameworkGetResultDTO, 'FrameworkGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementCreateCommandDTO, 'RequirementCreateCommandDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(ConstraintCreateCommandDTO, 'ConstraintCreateCommandDTO', interfaceMeta, undefined, [RequirementCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(ConstraintCreatedEventDTO, 'ConstraintCreatedEventDTO', interfaceMeta, undefined, [RequirementCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(CriterionCreateCommandDTO, 'CriterionCreateCommandDTO', interfaceMeta, undefined, [RequirementCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(CriterionCreatedEventDTO, 'CriterionCreatedEventDTO', interfaceMeta, undefined, [RequirementCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(InformationRequirementCreateCommandDTO, 'InformationRequirementCreateCommandDTO', interfaceMeta, undefined, [RequirementCreateCommandDTO], undefined, undefined, []);
  setMetadataFor(InformationRequirementCreatedEventDTO, 'InformationRequirementCreatedEventDTO', interfaceMeta, undefined, [RequirementCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(RequirementAddRequirementsCommandDTO_0, 'RequirementAddRequirementsCommandDTO', interfaceMeta, undefined, [RequirementAddRequirementsCommandDTO], undefined, undefined, []);
  setMetadataFor(RequirementAddedRequirementsEventDTO_0, 'RequirementAddedRequirementsEventDTO', interfaceMeta, undefined, [RequirementAddedRequirementsEventDTO], undefined, undefined, []);
  setMetadataFor(RequirementCreatedEventDTO_0, 'RequirementCreatedEventDTO', interfaceMeta, undefined, [RequirementCreatedEventDTO], undefined, undefined, []);
  setMetadataFor(RequirementUpdateCommandDTO_0, 'RequirementUpdateCommandDTO', interfaceMeta, undefined, [RequirementUpdateCommandDTO], undefined, undefined, []);
  setMetadataFor(RequirementUpdatedEventDTO_0, 'RequirementUpdatedEventDTO', interfaceMeta, undefined, [RequirementUpdatedEventDTO], undefined, undefined, []);
  setMetadataFor(RequirementDTO, 'RequirementDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementGetByIdentifierQueryDTO, 'RequirementGetByIdentifierQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementGetByIdentifierResultDTO, 'RequirementGetByIdentifierResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementGetQueryDTO, 'RequirementGetQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementGetResultDTO, 'RequirementGetResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementListChildrenByTypeQueryDTO, 'RequirementListChildrenByTypeQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementListChildrenByTypeResultDTO, 'RequirementListChildrenByTypeResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementListQueryDTO, 'RequirementListQueryDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(RequirementListResultDTO, 'RequirementListResultDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetPoolInitCommand, 'AssetPoolInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(AssetPoolCommand, 'AssetPoolCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  setMetadataFor(AssetPoolEvent, 'AssetPoolEvent', interfaceMeta, undefined, [S2SourcingEvent], undefined, undefined, []);
  setMetadataFor(AssetTransactionInitCommand, 'AssetTransactionInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(AssetTransactionCommand, 'AssetTransactionCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  setMetadataFor(AssetTransactionEvent, 'AssetTransactionEvent', interfaceMeta, undefined, [S2SourcingEvent], undefined, undefined, []);
  setMetadataFor(Companion_33, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetTransactionState, 'AssetTransactionState', classMeta, Enum, [Enum, S2State], undefined, {0: Companion_getInstance_33}, []);
  setMetadataFor(AssetPoolCloseCommandDTO, 'AssetPoolCloseCommandDTO', interfaceMeta, undefined, [AssetPoolCommand], undefined, undefined, []);
  setMetadataFor(AssetPoolHoldCommandDTO, 'AssetPoolHoldCommandDTO', interfaceMeta, undefined, [AssetPoolCommand], undefined, undefined, []);
  setMetadataFor(AssetPoolResumeCommandDTO, 'AssetPoolResumeCommandDTO', interfaceMeta, undefined, [AssetPoolCommand], undefined, undefined, []);
  setMetadataFor(AssetPoolStats, 'AssetPoolStats', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderInitCommand, 'OrderInitCommand', interfaceMeta, undefined, [S2InitCommand], undefined, undefined, []);
  setMetadataFor(OrderCommand, 'OrderCommand', interfaceMeta, undefined, [S2Command], undefined, undefined, []);
  setMetadataFor(OrderEvent, 'OrderEvent', interfaceMeta, undefined, [S2SourcingEvent], undefined, undefined, []);
  setMetadataFor(Companion_34, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderState, 'OrderState', classMeta, Enum, [Enum, S2State], undefined, {0: Companion_getInstance_34}, []);
  setMetadataFor(OrderCancelCommandDTO, 'OrderCancelCommandDTO', interfaceMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(OrderCancelCommand, 'OrderCancelCommand', classMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(Companion_35, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderCanceledEvent, 'OrderCanceledEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(OrderCompleteCommand, 'OrderCompleteCommand', classMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(Companion_36, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderCompletedEvent, 'OrderCompletedEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(OrderDeleteCommandDTO, 'OrderDeleteCommandDTO', interfaceMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(OrderDeleteCommand, 'OrderDeleteCommand', classMeta, undefined, [OrderDeleteCommandDTO], undefined, undefined, []);
  setMetadataFor(Companion_37, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderDeletedEvent, 'OrderDeletedEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(OrderPendCommand, 'OrderPendCommand', classMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(Companion_38, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderPendedEvent, 'OrderPendedEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(OrderPlaceCommand, 'OrderPlaceCommand', classMeta, undefined, [OrderInitCommand], undefined, undefined, []);
  setMetadataFor(Companion_39, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderPlacedEvent, 'OrderPlacedEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(OrderSubmitCommandDTO, 'OrderSubmitCommandDTO', interfaceMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(OrderSubmitCommand, 'OrderSubmitCommand', classMeta, undefined, [OrderSubmitCommandDTO], undefined, undefined, []);
  setMetadataFor(Companion_40, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderSubmittedEvent, 'OrderSubmittedEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(OrderUpdateCommandDTO, 'OrderUpdateCommandDTO', interfaceMeta, undefined, [OrderCommand], undefined, undefined, []);
  setMetadataFor(OrderUpdateCommand, 'OrderUpdateCommand', classMeta, undefined, [OrderUpdateCommandDTO], undefined, undefined, []);
  setMetadataFor(Companion_41, 'Companion', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderUpdatedEvent, 'OrderUpdatedEvent', classMeta, undefined, [OrderEvent], undefined, undefined, []);
  setMetadataFor(AssetOrderCancelCommandDTO, 'AssetOrderCancelCommandDTO', interfaceMeta, undefined, [OrderCancelCommandDTO], undefined, undefined, []);
  setMetadataFor(AssetOrderCanceledEventDTO, 'AssetOrderCanceledEventDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetOrderCompleteCommandDTO, 'AssetOrderCompleteCommandDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetOrderCompletedEventDTO, 'AssetOrderCompletedEventDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetOrderDeleteCommandDTO, 'AssetOrderDeleteCommandDTO', interfaceMeta, undefined, [OrderDeleteCommandDTO], undefined, undefined, []);
  setMetadataFor(AssetOrderDeletedEventDTO, 'AssetOrderDeletedEventDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetOrderSubmitCommandDTO, 'AssetOrderSubmitCommandDTO', interfaceMeta, undefined, [OrderSubmitCommandDTO], undefined, undefined, []);
  setMetadataFor(AssetOrderSubmittedEventDTO, 'AssetOrderSubmittedEventDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(AssetOrderUpdateCommandDTO, 'AssetOrderUpdateCommandDTO', interfaceMeta, undefined, [OrderUpdateCommandDTO], undefined, undefined, []);
  setMetadataFor(AssetOrderUpdatedEventDTO, 'AssetOrderUpdatedEventDTO', interfaceMeta, undefined, undefined, undefined, undefined, []);
  function s2State() {
    return valueOf_1(this.status);
  }
  setMetadataFor(OrderDTO, 'OrderDTO', interfaceMeta, undefined, [WithS2State], undefined, undefined, []);
  setMetadataFor(AssetPolicies, 'AssetPolicies', objectMeta, undefined, undefined, undefined, undefined, []);
  setMetadataFor(OrderStatusValues, 'OrderStatusValues', objectMeta, undefined, undefined, undefined, undefined, []);
  //endregion
  function toList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4[0]);
      default:
        return toMutableList(_this__u8e3s4);
    }
  }
  function withIndex(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
  }
  function get_indices(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex(_this__u8e3s4));
  }
  function indexOf(_this__u8e3s4, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this__u8e3s4[index] == null) {
            return index;
          }
        }
         while (inductionVariable <= last);
    } else {
      var inductionVariable_0 = 0;
      var last_0 = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_0(element, _this__u8e3s4[index_0])) {
            return index_0;
          }
        }
         while (inductionVariable_0 <= last_0);
    }
    return -1;
  }
  function single(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this__u8e3s4[0];
        break;
      default:
        throw IllegalArgumentException_init_$Create$('Array has more than one element.');
    }
    return tmp;
  }
  function toMutableList(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
  }
  function get_lastIndex(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function contains(_this__u8e3s4, element) {
    return indexOf_0(_this__u8e3s4, element) >= 0;
  }
  function contains_0(_this__u8e3s4, element) {
    return indexOf_1(_this__u8e3s4, element) >= 0;
  }
  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function contains_1(_this__u8e3s4, element) {
    return indexOf(_this__u8e3s4, element) >= 0;
  }
  function indexOf_0(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element.equals(_this__u8e3s4[index])) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function indexOf_1(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element === _this__u8e3s4[index]) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.a(prefix);
    var count = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count = count + 1 | 0;
      if (count > 1) {
        buffer.a(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.a(truncated);
    }
    buffer.a(postfix);
    return buffer;
  }
  function zip(_this__u8e3s4, other) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.zip' call
    var tmp$ret$0;
    // Inline function 'kotlin.comparisons.minOf' call
    var tmp0_minOf = _this__u8e3s4.length;
    var tmp1_minOf = other.length;
    tmp$ret$0 = Math.min(tmp0_minOf, tmp1_minOf);
    var size = tmp$ret$0;
    var list = ArrayList_init_$Create$_0(size);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$1;
        // Inline function 'kotlin.collections.zip.<anonymous>' call
        var tmp2__anonymous__z9zvc9 = _this__u8e3s4[i];
        var tmp3__anonymous__ufb84q = other[i];
        tmp$ret$1 = to(tmp2__anonymous__z9zvc9, tmp3__anonymous__ufb84q);
        list.e(tmp$ret$1);
      }
       while (inductionVariable < size);
    tmp$ret$2 = list;
    return tmp$ret$2;
  }
  function withIndex$lambda($this_withIndex) {
    return function () {
      return arrayIterator($this_withIndex);
    };
  }
  function plus_2(_this__u8e3s4, elements) {
    if (isInterface(elements, Collection)) {
      var result = ArrayList_init_$Create$_0(_this__u8e3s4.f() + elements.f() | 0);
      result.g(_this__u8e3s4);
      result.g(elements);
      return result;
    } else {
      var result_0 = ArrayList_init_$Create$_1(_this__u8e3s4);
      addAll(result_0, elements);
      return result_0;
    }
  }
  function plus_3(_this__u8e3s4, element) {
    var result = ArrayList_init_$Create$_0(_this__u8e3s4.f() + 1 | 0);
    result.g(_this__u8e3s4);
    result.e(element);
    return result;
  }
  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_0(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function toHashSet(_this__u8e3s4) {
    return toCollection(_this__u8e3s4, HashSet_init_$Create$_0(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
  }
  function toBooleanArray(_this__u8e3s4) {
    var result = booleanArray(_this__u8e3s4.f());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function first(_this__u8e3s4) {
    if (_this__u8e3s4.k())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(0);
  }
  function toCollection(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      destination.e(item);
    }
    return destination;
  }
  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.a(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    $l$loop: while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.a(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.a(truncated);
    }
    buffer.a(postfix);
    return buffer;
  }
  function single_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List))
      return single_1(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.h();
      if (!iterator.i())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var single = iterator.j();
      if (iterator.i())
        throw IllegalArgumentException_init_$Create$('Collection has more than one element.');
      return single;
    }
  }
  function single_1(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.f();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this__u8e3s4.l(0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$('List has more than one element.');
    }
    return tmp;
  }
  function until(_this__u8e3s4, to) {
    if (to <= IntCompanionObject_getInstance().MIN_VALUE)
      return Companion_getInstance_2().m_1;
    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
  }
  function downTo(_this__u8e3s4, to) {
    return Companion_getInstance_3().n(_this__u8e3s4, to, -1);
  }
  function coerceAtLeast(_this__u8e3s4, minimumValue) {
    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
  }
  function coerceAtMost(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
  }
  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this__u8e3s4 < minimumValue)
      return minimumValue;
    if (_this__u8e3s4 > maximumValue)
      return maximumValue;
    return _this__u8e3s4;
  }
  function asIterable(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Iterable' call
    tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    return tmp$ret$0;
  }
  function _no_name_provided__qut3iv($this_asIterable) {
    this.o_1 = $this_asIterable;
  }
  _no_name_provided__qut3iv.prototype.h = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.sequences.asIterable.<anonymous>' call
    tmp$ret$0 = this.o_1.h();
    return tmp$ret$0;
  };
  function reversed(_this__u8e3s4) {
    return StringBuilder_init_$Create$(_this__u8e3s4).q();
  }
  function slice(_this__u8e3s4, indices) {
    if (indices.k()) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      return tmp$ret$0;
    }
    var tmp$ret$1;
    // Inline function 'kotlin.collections.copyOfRange' call
    var tmp0_copyOfRange = indices.u();
    var tmp1_copyOfRange = indices.v() + 1 | 0;
    tmp$ret$1 = _ULongArray___init__impl__twm1l3(copyOfRange(_ULongArray___get_storage__impl__28e64j(_this__u8e3s4), tmp0_copyOfRange, tmp1_copyOfRange));
    return asList_0(tmp$ret$1);
  }
  function toULongArray(_this__u8e3s4) {
    var result = _ULongArray___init__impl__twm1l3_0(_this__u8e3s4.f());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.h();
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j().w_1;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      ULongArray__set_impl_z19mvh(result, tmp1, element);
    }
    return result;
  }
  function AbstractCollection$toString$lambda(this$0) {
    return function (it) {
      return it === this$0 ? '(this Collection)' : toString_2(it);
    };
  }
  function AbstractCollection() {
  }
  AbstractCollection.prototype.x = function (element) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.h();
      while (tmp0_iterator.i()) {
        var element_0 = tmp0_iterator.j();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractCollection.contains.<anonymous>' call
        tmp$ret$1 = equals_0(element_0, element);
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.y = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractCollection.containsAll.<anonymous>' call
        tmp$ret$1 = this.x(element);
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.k = function () {
    return this.f() === 0;
  };
  AbstractCollection.prototype.toString = function () {
    return joinToString$default_0(this, ', ', '[', ']', 0, null, AbstractCollection$toString$lambda(this), 24, null);
  };
  AbstractCollection.prototype.toArray = function () {
    return copyToArrayImpl(this);
  };
  function IteratorImpl($outer) {
    this.a1_1 = $outer;
    this.z_1 = 0;
  }
  IteratorImpl.prototype.i = function () {
    return this.z_1 < this.a1_1.f();
  };
  IteratorImpl.prototype.j = function () {
    if (!this.i())
      throw NoSuchElementException_init_$Create$();
    var tmp0_this = this;
    var tmp1 = tmp0_this.z_1;
    tmp0_this.z_1 = tmp1 + 1 | 0;
    return this.a1_1.l(tmp1);
  };
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.b1 = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.c1 = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.d1 = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  Companion.prototype.e1 = function (c) {
    var hashCode_0 = 1;
    var tmp0_iterator = c.h();
    while (tmp0_iterator.i()) {
      var e = tmp0_iterator.j();
      var tmp = imul(31, hashCode_0);
      var tmp1_safe_receiver = e;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode(tmp1_safe_receiver);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  };
  Companion.prototype.f1 = function (c, other) {
    if (!(c.f() === other.f()))
      return false;
    var otherIterator = other.h();
    var tmp0_iterator = c.h();
    while (tmp0_iterator.i()) {
      var elem = tmp0_iterator.j();
      var elemOther = otherIterator.j();
      if (!equals_0(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AbstractList() {
    Companion_getInstance();
    AbstractCollection.call(this);
  }
  AbstractList.prototype.h = function () {
    return new IteratorImpl(this);
  };
  AbstractList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    return Companion_getInstance().f1(this, other);
  };
  AbstractList.prototype.hashCode = function () {
    return Companion_getInstance().e1(this);
  };
  function AbstractMap$keys$1$iterator$1($entryIterator) {
    this.g1_1 = $entryIterator;
  }
  AbstractMap$keys$1$iterator$1.prototype.i = function () {
    return this.g1_1.i();
  };
  AbstractMap$keys$1$iterator$1.prototype.j = function () {
    return this.g1_1.j().h1();
  };
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_2(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_firstOrNull = $this.i1();
      var tmp0_iterator = tmp0_firstOrNull.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$0;
        // Inline function 'kotlin.collections.AbstractMap.implFindEntry.<anonymous>' call
        tmp$ret$0 = equals_0(element.h1(), key);
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.j1 = function (e) {
    var tmp$ret$1;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Companion.entryHashCode.<anonymous>' call
    var tmp2_safe_receiver = e.h1();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
    var tmp0_safe_receiver = e.k1();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    tmp$ret$0 = tmp ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  Companion_0.prototype.l1 = function (e) {
    var tmp$ret$1;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Companion.entryToString.<anonymous>' call
    tmp$ret$0 = toString_2(e.h1()) + '=' + toString_2(e.k1());
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  Companion_0.prototype.m1 = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    return equals_0(e.h1(), other.h1()) ? equals_0(e.k1(), other.k1()) : false;
  };
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function AbstractMap$keys$1(this$0) {
    this.n1_1 = this$0;
    AbstractSet.call(this);
  }
  AbstractMap$keys$1.prototype.o1 = function (element) {
    return this.n1_1.r1(element);
  };
  AbstractMap$keys$1.prototype.x = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.o1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$keys$1.prototype.h = function () {
    var entryIterator = this.n1_1.i1().h();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMap$keys$1.prototype.f = function () {
    return this.n1_1.f();
  };
  function AbstractMap$toString$lambda(this$0) {
    return function (it) {
      return this$0.s1(it);
    };
  }
  function AbstractMap() {
    Companion_getInstance_0();
    this.p1_1 = null;
    this.q1_1 = null;
  }
  AbstractMap.prototype.r1 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  AbstractMap.prototype.t1 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.h1();
    var value = entry.k1();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.get' call
    tmp$ret$0 = (isInterface(this, Map) ? this : THROW_CCE()).u1(key);
    var ourValue = tmp$ret$0;
    if (!equals_0(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.containsKey' call
      tmp$ret$1 = (isInterface(this, Map) ? this : THROW_CCE()).r1(key);
      tmp = !tmp$ret$1;
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  };
  AbstractMap.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map) : false))
      return false;
    if (!(this.f() === other.f()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = other.i1();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractMap.equals.<anonymous>' call
        tmp$ret$1 = this.t1(element);
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.u1 = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k1();
  };
  AbstractMap.prototype.hashCode = function () {
    return hashCode(this.i1());
  };
  AbstractMap.prototype.k = function () {
    return this.f() === 0;
  };
  AbstractMap.prototype.f = function () {
    return this.i1().f();
  };
  AbstractMap.prototype.v1 = function () {
    if (this.p1_1 == null) {
      var tmp = this;
      tmp.p1_1 = new AbstractMap$keys$1(this);
    }
    return ensureNotNull(this.p1_1);
  };
  AbstractMap.prototype.toString = function () {
    var tmp = this.i1();
    return joinToString$default_0(tmp, ', ', '{', '}', 0, null, AbstractMap$toString$lambda(this), 24, null);
  };
  AbstractMap.prototype.s1 = function (entry) {
    return toString(this, entry.h1()) + '=' + toString(this, entry.k1());
  };
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.w1 = function (c) {
    var hashCode_0 = 0;
    var tmp0_iterator = c.h();
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      var tmp = hashCode_0;
      var tmp1_safe_receiver = element;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode(tmp1_safe_receiver);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  };
  Companion_1.prototype.x1 = function (c, other) {
    if (!(c.f() === other.f()))
      return false;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.containsAll' call
    tmp$ret$0 = c.y(other);
    return tmp$ret$0;
  };
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  AbstractSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().x1(this, other);
  };
  AbstractSet.prototype.hashCode = function () {
    return Companion_getInstance_1().w1(this);
  };
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function emptyList() {
    return EmptyList_getInstance();
  }
  function get_lastIndex_0(_this__u8e3s4) {
    return _this__u8e3s4.f() - 1 | 0;
  }
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  EmptyIterator.prototype.i = function () {
    return false;
  };
  EmptyIterator.prototype.j = function () {
    throw NoSuchElementException_init_$Create$();
  };
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function EmptyList() {
    EmptyList_instance = this;
    this.y1_1 = new Long(-1478467534, -1720727600);
  }
  EmptyList.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List) : false) {
      tmp = other.k();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyList.prototype.hashCode = function () {
    return 1;
  };
  EmptyList.prototype.toString = function () {
    return '[]';
  };
  EmptyList.prototype.f = function () {
    return 0;
  };
  EmptyList.prototype.k = function () {
    return true;
  };
  EmptyList.prototype.z1 = function (elements) {
    return elements.k();
  };
  EmptyList.prototype.y = function (elements) {
    return this.z1(elements);
  };
  EmptyList.prototype.l = function (index) {
    throw IndexOutOfBoundsException_init_$Create$("Empty list doesn't contain element at index " + index + '.');
  };
  EmptyList.prototype.h = function () {
    return EmptyIterator_getInstance();
  };
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function arrayListOf(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function asCollection(_this__u8e3s4) {
    return new ArrayAsCollection(_this__u8e3s4, false);
  }
  function ArrayAsCollection(values, isVarargs) {
    this.a2_1 = values;
    this.b2_1 = isVarargs;
  }
  ArrayAsCollection.prototype.f = function () {
    return this.a2_1.length;
  };
  ArrayAsCollection.prototype.k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isEmpty' call
    var tmp0_isEmpty = this.a2_1;
    tmp$ret$0 = tmp0_isEmpty.length === 0;
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.c2 = function (element) {
    return contains_1(this.a2_1, element);
  };
  ArrayAsCollection.prototype.d2 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.ArrayAsCollection.containsAll.<anonymous>' call
        tmp$ret$1 = this.c2(element);
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.y = function (elements) {
    return this.d2(elements);
  };
  ArrayAsCollection.prototype.h = function () {
    return arrayIterator(this.a2_1);
  };
  function IndexedValue(index, value) {
    this.e2_1 = index;
    this.f2_1 = value;
  }
  IndexedValue.prototype.toString = function () {
    return 'IndexedValue(index=' + this.e2_1 + ', value=' + this.f2_1 + ')';
  };
  IndexedValue.prototype.hashCode = function () {
    var result = this.e2_1;
    result = imul(result, 31) + (this.f2_1 == null ? 0 : hashCode(this.f2_1)) | 0;
    return result;
  };
  IndexedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.e2_1 === tmp0_other_with_cast.e2_1))
      return false;
    if (!equals_0(this.f2_1, tmp0_other_with_cast.f2_1))
      return false;
    return true;
  };
  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.f();
    } else {
      tmp = default_0;
    }
    return tmp;
  }
  function IndexingIterable(iteratorFactory) {
    this.g2_1 = iteratorFactory;
  }
  IndexingIterable.prototype.h = function () {
    return new IndexingIterator(this.g2_1());
  };
  function IndexingIterator(iterator) {
    this.h2_1 = iterator;
    this.i2_1 = 0;
  }
  IndexingIterator.prototype.i = function () {
    return this.h2_1.i();
  };
  IndexingIterator.prototype.j = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.i2_1;
    tmp0_this.i2_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.h2_1.j());
  };
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map) ? tmp : THROW_CCE();
  }
  function toMap(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.f();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.h().j();
          }

          tmp = mapOf(tmp_0);
          break;
        default:
          tmp = toMap_0(_this__u8e3s4, LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.f())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyMap(toMap_0(_this__u8e3s4, LinkedHashMap_init_$Create$()));
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this.j2_1 = new Long(-888910638, 1920087921);
  }
  EmptyMap.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map) : false) {
      tmp = other.k();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyMap.prototype.hashCode = function () {
    return 0;
  };
  EmptyMap.prototype.toString = function () {
    return '{}';
  };
  EmptyMap.prototype.f = function () {
    return 0;
  };
  EmptyMap.prototype.k = function () {
    return true;
  };
  EmptyMap.prototype.k2 = function (key) {
    return false;
  };
  EmptyMap.prototype.r1 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    return this.k2((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.l2 = function (key) {
    return null;
  };
  EmptyMap.prototype.u1 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    return this.l2((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.i1 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.v1 = function () {
    return EmptySet_getInstance();
  };
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_0(_this__u8e3s4, destination) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.toMap.<anonymous>' call
    putAll_0(destination, _this__u8e3s4);
    tmp$ret$0 = destination;
    return tmp$ret$0;
  }
  function optimizeReadOnlyMap(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.f();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp$ret$0;
        // Inline function 'kotlin.collections.toSingletonMapOrSelf' call
        tmp$ret$0 = _this__u8e3s4;

        tmp = tmp$ret$0;
        break;
      default:
        tmp = _this__u8e3s4;
        break;
    }
    return tmp;
  }
  function putAll(_this__u8e3s4, pairs) {
    var indexedObject = pairs;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.o2();
      var value = tmp1_loop_parameter.p2();
      _this__u8e3s4.q2(key, value);
    }
  }
  function putAll_0(_this__u8e3s4, pairs) {
    var tmp0_iterator = pairs.h();
    while (tmp0_iterator.i()) {
      var tmp1_loop_parameter = tmp0_iterator.j();
      var key = tmp1_loop_parameter.o2();
      var value = tmp1_loop_parameter.p2();
      _this__u8e3s4.q2(key, value);
    }
  }
  function hashMapOf(pairs) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = HashMap_init_$Create$_1(mapCapacity(pairs.length));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.hashMapOf.<anonymous>' call
    putAll(tmp0_apply, pairs);
    tmp$ret$0 = tmp0_apply;
    return tmp$ret$0;
  }
  function addAll(_this__u8e3s4, elements) {
    var tmp0_subject = elements;
    if (isInterface(tmp0_subject, Collection))
      return _this__u8e3s4.g(elements);
    else {
      var result = false;
      var tmp1_iterator = elements.h();
      while (tmp1_iterator.i()) {
        var item = tmp1_iterator.j();
        if (_this__u8e3s4.e(item))
          result = true;
      }
      return result;
    }
  }
  function IntIterator() {
  }
  IntIterator.prototype.j = function () {
    return this.r2();
  };
  function EmptySet() {
    EmptySet_instance = this;
    this.s2_1 = new Long(1993859828, 793161749);
  }
  EmptySet.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.k();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptySet.prototype.hashCode = function () {
    return 0;
  };
  EmptySet.prototype.toString = function () {
    return '[]';
  };
  EmptySet.prototype.f = function () {
    return 0;
  };
  EmptySet.prototype.k = function () {
    return true;
  };
  EmptySet.prototype.z1 = function (elements) {
    return elements.k();
  };
  EmptySet.prototype.y = function (elements) {
    return this.z1(elements);
  };
  EmptySet.prototype.h = function () {
    return EmptyIterator_getInstance();
  };
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function Continuation() {
  }
  function startCoroutine(_this__u8e3s4, receiver, completion) {
    var tmp$ret$1;
    // Inline function 'kotlin.coroutines.resume' call
    var tmp0_resume = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
    var tmp$ret$0;
    // Inline function 'kotlin.Companion.success' call
    var tmp0_success = Companion_getInstance_4();
    tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
    tmp0_resume.u2(tmp$ret$0);
    tmp$ret$1 = Unit_getInstance();
  }
  function Key() {
    Key_instance = this;
  }
  var Key_instance;
  function Key_getInstance() {
    if (Key_instance == null)
      new Key();
    return Key_instance;
  }
  function ContinuationInterceptor() {
  }
  function Element() {
  }
  function CoroutineContext$plus$lambda(acc, element) {
    var removed = acc.c3(element.h1());
    var tmp;
    if (removed === EmptyCoroutineContext_getInstance()) {
      tmp = element;
    } else {
      var interceptor = removed.x2(Key_getInstance());
      var tmp_0;
      if (interceptor == null) {
        tmp_0 = new CombinedContext(removed, element);
      } else {
        var left = removed.c3(Key_getInstance());
        tmp_0 = left === EmptyCoroutineContext_getInstance() ? new CombinedContext(element, interceptor) : new CombinedContext(new CombinedContext(left, element), interceptor);
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function CoroutineContext() {
  }
  function EmptyCoroutineContext() {
    EmptyCoroutineContext_instance = this;
    this.f3_1 = new Long(0, 0);
  }
  EmptyCoroutineContext.prototype.x2 = function (key) {
    return null;
  };
  EmptyCoroutineContext.prototype.d3 = function (initial, operation) {
    return initial;
  };
  EmptyCoroutineContext.prototype.e3 = function (context) {
    return context;
  };
  EmptyCoroutineContext.prototype.c3 = function (key) {
    return this;
  };
  EmptyCoroutineContext.prototype.hashCode = function () {
    return 0;
  };
  EmptyCoroutineContext.prototype.toString = function () {
    return 'EmptyCoroutineContext';
  };
  var EmptyCoroutineContext_instance;
  function EmptyCoroutineContext_getInstance() {
    if (EmptyCoroutineContext_instance == null)
      new EmptyCoroutineContext();
    return EmptyCoroutineContext_instance;
  }
  function size($this) {
    var cur = $this;
    var size = 2;
    while (true) {
      var tmp = cur.g3_1;
      var tmp0_elvis_lhs = tmp instanceof CombinedContext ? tmp : null;
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        return size;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      cur = tmp_0;
      var tmp1 = size;
      size = tmp1 + 1 | 0;
    }
  }
  function contains_2($this, element) {
    return equals_0($this.x2(element.h1()), element);
  }
  function containsAll($this, context) {
    var cur = context;
    while (true) {
      if (!contains_2($this, cur.h3_1))
        return false;
      var next = cur.g3_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return contains_2($this, isInterface(next, Element) ? next : THROW_CCE());
      }
    }
  }
  function CombinedContext$toString$lambda(acc, element) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.text.isEmpty' call
    tmp$ret$0 = charSequenceLength(acc) === 0;
    if (tmp$ret$0) {
      tmp = toString_3(element);
    } else {
      tmp = acc + ', ' + element;
    }
    return tmp;
  }
  function CombinedContext(left, element) {
    this.g3_1 = left;
    this.h3_1 = element;
  }
  CombinedContext.prototype.x2 = function (key) {
    var cur = this;
    while (true) {
      var tmp0_safe_receiver = cur.h3_1.x2(key);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        return tmp0_safe_receiver;
      }
      var next = cur.g3_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return next.x2(key);
      }
    }
  };
  CombinedContext.prototype.d3 = function (initial, operation) {
    return operation(this.g3_1.d3(initial, operation), this.h3_1);
  };
  CombinedContext.prototype.c3 = function (key) {
    var tmp0_safe_receiver = this.h3_1.x2(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return this.g3_1;
    }
    var newLeft = this.g3_1.c3(key);
    return newLeft === this.g3_1 ? this : newLeft === EmptyCoroutineContext_getInstance() ? this.h3_1 : new CombinedContext(newLeft, this.h3_1);
  };
  CombinedContext.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (other instanceof CombinedContext) {
        tmp_1 = size(other) === size(this);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = containsAll(other, this);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  CombinedContext.prototype.hashCode = function () {
    return hashCode(this.g3_1) + hashCode(this.h3_1) | 0;
  };
  CombinedContext.prototype.toString = function () {
    return '[' + this.d3('', CombinedContext$toString$lambda) + ']';
  };
  function AbstractCoroutineContextKey(baseKey, safeCast) {
    this.y2_1 = safeCast;
    var tmp = this;
    var tmp_0;
    if (baseKey instanceof AbstractCoroutineContextKey) {
      tmp_0 = baseKey.z2_1;
    } else {
      tmp_0 = baseKey;
    }
    tmp.z2_1 = tmp_0;
  }
  AbstractCoroutineContextKey.prototype.a3 = function (element) {
    return this.y2_1(element);
  };
  AbstractCoroutineContextKey.prototype.b3 = function (key) {
    return key === this ? true : this.z2_1 === key;
  };
  function AbstractCoroutineContextElement(key) {
    this.i3_1 = key;
  }
  AbstractCoroutineContextElement.prototype.h1 = function () {
    return this.i3_1;
  };
  function get_COROUTINE_SUSPENDED() {
    return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
  }
  var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  var CoroutineSingletons_UNDECIDED_instance;
  var CoroutineSingletons_RESUMED_instance;
  var CoroutineSingletons_entriesInitialized;
  function CoroutineSingletons_initEntries() {
    if (CoroutineSingletons_entriesInitialized)
      return Unit_getInstance();
    CoroutineSingletons_entriesInitialized = true;
    CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
    CoroutineSingletons_UNDECIDED_instance = new CoroutineSingletons('UNDECIDED', 1);
    CoroutineSingletons_RESUMED_instance = new CoroutineSingletons('RESUMED', 2);
  }
  function CoroutineSingletons(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
    CoroutineSingletons_initEntries();
    return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
  }
  function getProgressionLastElement(start, end, step) {
    var tmp;
    if (step > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
    } else if (step < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod = a % b | 0;
    return mod >= 0 ? mod : mod + b | 0;
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.m_1 = new IntRange(1, 0);
  }
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_2();
    IntProgression.call(this, start, endInclusive, 1);
  }
  IntRange.prototype.u = function () {
    return this.m3_1;
  };
  IntRange.prototype.v = function () {
    return this.n3_1;
  };
  IntRange.prototype.k = function () {
    return this.m3_1 > this.n3_1;
  };
  IntRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.k() ? other.k() : false) ? true : this.m3_1 === other.m3_1 ? this.n3_1 === other.n3_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntRange.prototype.hashCode = function () {
    return this.k() ? -1 : imul(31, this.m3_1) + this.n3_1 | 0;
  };
  IntRange.prototype.toString = function () {
    return '' + this.m3_1 + '..' + this.n3_1;
  };
  function IntProgressionIterator(first, last, step) {
    IntIterator.call(this);
    this.p3_1 = step;
    this.q3_1 = last;
    this.r3_1 = this.p3_1 > 0 ? first <= last : first >= last;
    this.s3_1 = this.r3_1 ? first : this.q3_1;
  }
  IntProgressionIterator.prototype.i = function () {
    return this.r3_1;
  };
  IntProgressionIterator.prototype.r2 = function () {
    var value = this.s3_1;
    if (value === this.q3_1) {
      if (!this.r3_1)
        throw NoSuchElementException_init_$Create$();
      this.r3_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.s3_1 = tmp0_this.s3_1 + this.p3_1 | 0;
    }
    return value;
  };
  function Companion_3() {
    Companion_instance_3 = this;
  }
  Companion_3.prototype.n = function (rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  };
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function IntProgression(start, endInclusive, step) {
    Companion_getInstance_3();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().MIN_VALUE)
      throw IllegalArgumentException_init_$Create$('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.m3_1 = start;
    this.n3_1 = getProgressionLastElement(start, endInclusive, step);
    this.o3_1 = step;
  }
  IntProgression.prototype.h = function () {
    return new IntProgressionIterator(this.m3_1, this.n3_1, this.o3_1);
  };
  IntProgression.prototype.k = function () {
    return this.o3_1 > 0 ? this.m3_1 > this.n3_1 : this.m3_1 < this.n3_1;
  };
  IntProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.k() ? other.k() : false) ? true : (this.m3_1 === other.m3_1 ? this.n3_1 === other.n3_1 : false) ? this.o3_1 === other.o3_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntProgression.prototype.hashCode = function () {
    return this.k() ? -1 : imul(31, imul(31, this.m3_1) + this.n3_1 | 0) + this.o3_1 | 0;
  };
  IntProgression.prototype.toString = function () {
    return this.o3_1 > 0 ? '' + this.m3_1 + '..' + this.n3_1 + ' step ' + this.o3_1 : '' + this.m3_1 + ' downTo ' + this.n3_1 + ' step ' + (-this.o3_1 | 0);
  };
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.a(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.a(element);
      } else {
        if (element instanceof Char) {
          _this__u8e3s4.u3(element.t3_1);
        } else {
          _this__u8e3s4.a(toString_2(element));
        }
      }
    }
  }
  function equals(_this__u8e3s4, other, ignoreCase) {
    if (equals_0(new Char(_this__u8e3s4), new Char(other)))
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this__u8e3s4);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (equals_0(new Char(thisUpper), new Char(otherUpper))) {
      tmp = true;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.text.lowercaseChar' call
      var tmp$ret$2;
      // Inline function 'kotlin.text.lowercase' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = toString_1(thisUpper);
      tmp$ret$0 = tmp0_asDynamic;
      var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
      tmp$ret$1 = tmp1_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      var tmp_0 = new Char(tmp$ret$3);
      var tmp$ret$7;
      // Inline function 'kotlin.text.lowercaseChar' call
      var tmp$ret$6;
      // Inline function 'kotlin.text.lowercase' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp2_asDynamic = toString_1(otherUpper);
      tmp$ret$4 = tmp2_asDynamic;
      var tmp3_unsafeCast = tmp$ret$4.toLowerCase();
      tmp$ret$5 = tmp3_unsafeCast;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = charSequenceGet(tmp$ret$6, 0);
      tmp = equals_0(tmp_0, new Char(tmp$ret$7));
    }
    return tmp;
  }
  function toLongOrNull(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_0(new Char(firstChar), new Char(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        Companion_getInstance_9();
        limit = new Long(0, -2147483648);
      } else if (equals_0(new Char(firstChar), new Char(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        Companion_getInstance_9();
        limit = (new Long(-1, 2147483647)).x3();
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      Companion_getInstance_9();
      limit = (new Long(-1, 2147483647)).x3();
    }
    var tmp$ret$0;
    // Inline function 'kotlin.Long.div' call
    Companion_getInstance_9();
    var tmp0_div = (new Long(-1, 2147483647)).x3();
    tmp$ret$0 = tmp0_div.y3(new Long(36, 0));
    var limitForMaxRadix = tmp$ret$0;
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result.z3(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            var tmp$ret$1;
            // Inline function 'kotlin.Long.div' call
            tmp$ret$1 = limit.y3(toLong_0(radix));
            limitBeforeMul = tmp$ret$1;
            if (result.z3(limitBeforeMul) < 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$2;
        // Inline function 'kotlin.Long.times' call
        var tmp1_times = result;
        tmp$ret$2 = tmp1_times.a4(toLong_0(radix));
        result = tmp$ret$2;
        var tmp = result;
        var tmp$ret$3;
        // Inline function 'kotlin.Long.plus' call
        tmp$ret$3 = limit.b4(toLong_0(digit));
        if (tmp.z3(tmp$ret$3) < 0)
          return null;
        var tmp$ret$4;
        // Inline function 'kotlin.Long.minus' call
        var tmp2_minus = result;
        tmp$ret$4 = tmp2_minus.c4(toLong_0(digit));
        result = tmp$ret$4;
      }
       while (inductionVariable < length);
    return isNegative ? result : result.x3();
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$("Invalid number format: '" + input + "'");
  }
  function indexOf_2(_this__u8e3s4, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      // Inline function 'kotlin.charArrayOf' call
      tmp$ret$0 = charArrayOf([char]);
      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp1_nativeIndexOf = _this__u8e3s4;
      var tmp$ret$2;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = toString_1(char);
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp1_nativeIndexOf;
      tmp$ret$2 = tmp$ret$1.indexOf(tmp0_nativeIndexOf, startIndex);
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function indexOf$default(_this__u8e3s4, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_2(_this__u8e3s4, char, startIndex, ignoreCase);
  }
  function contains_3(_this__u8e3s4, char, ignoreCase) {
    return indexOf$default(_this__u8e3s4, char, 0, ignoreCase, 2, null) >= 0;
  }
  function contains$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return contains_3(_this__u8e3s4, char, ignoreCase);
  }
  function get_lastIndex_1(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) - 1 | 0;
  }
  function split(_this__u8e3s4, delimiters, ignoreCase, limit) {
    if (delimiters.length === 1) {
      var delimiter = delimiters[0];
      var tmp$ret$0;
      // Inline function 'kotlin.text.isEmpty' call
      tmp$ret$0 = charSequenceLength(delimiter) === 0;
      if (!tmp$ret$0) {
        return split_1(_this__u8e3s4, delimiter, ignoreCase, limit);
      }
    }
    var tmp$ret$3;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = asIterable(rangesDelimitedBy$default(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null));
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      var tmp$ret$1;
      // Inline function 'kotlin.text.split.<anonymous>' call
      tmp$ret$1 = substring_0(_this__u8e3s4, item);
      tmp0_mapTo.e(tmp$ret$1);
    }
    tmp$ret$2 = tmp0_mapTo;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  }
  function split$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return split(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function split_0(_this__u8e3s4, delimiters, ignoreCase, limit) {
    if (delimiters.length === 1) {
      return split_1(_this__u8e3s4, toString_1(delimiters[0]), ignoreCase, limit);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = asIterable(rangesDelimitedBy$default_0(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null));
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      var tmp$ret$0;
      // Inline function 'kotlin.text.split.<anonymous>' call
      tmp$ret$0 = substring_0(_this__u8e3s4, item);
      tmp0_mapTo.e(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function split$default_0(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return split_0(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function substring(_this__u8e3s4, range) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = range.u();
    var tmp1_substring = range.v() + 1 | 0;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0.substring(tmp0_substring, tmp1_substring);
    return tmp$ret$1;
  }
  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp$ret$2;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp1_nativeIndexOf = _this__u8e3s4;
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = toString_1(char);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp1_nativeIndexOf;
      tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, startIndex);
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last = get_lastIndex_1(_this__u8e3s4);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          // Inline function 'kotlin.collections.any' call
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_0 = indexedObject.length;
          while (inductionVariable_0 < last_0) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$3;
            // Inline function 'kotlin.text.indexOfAny.<anonymous>' call
            tmp$ret$3 = equals(element, charAtIndex, ignoreCase);
            if (tmp$ret$3) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (!(index === last));
    return -1;
  }
  function split_1(_this__u8e3s4, delimiter, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var currentOffset = 0;
    var nextIndex = indexOf_3(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    if (nextIndex === -1 ? true : limit === 1) {
      return listOf_0(toString_3(_this__u8e3s4));
    }
    var isLimited = limit > 0;
    var result = ArrayList_init_$Create$_0(isLimited ? coerceAtMost(limit, 10) : 10);
    $l$loop: do {
      var tmp$ret$0;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = currentOffset;
      var tmp1_substring = nextIndex;
      tmp$ret$0 = toString_3(charSequenceSubSequence(_this__u8e3s4, tmp0_substring, tmp1_substring));
      result.e(tmp$ret$0);
      currentOffset = nextIndex + delimiter.length | 0;
      if (isLimited ? result.f() === (limit - 1 | 0) : false)
        break $l$loop;
      nextIndex = indexOf_3(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    }
     while (!(nextIndex === -1));
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp2_substring = currentOffset;
    var tmp3_substring = charSequenceLength(_this__u8e3s4);
    tmp$ret$1 = toString_3(charSequenceSubSequence(_this__u8e3s4, tmp2_substring, tmp3_substring));
    result.e(tmp$ret$1);
    return result;
  }
  function substring_0(_this__u8e3s4, range) {
    return toString_3(charSequenceSubSequence(_this__u8e3s4, range.u(), range.v() + 1 | 0));
  }
  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimitersList, ignoreCase));
  }
  function rangesDelimitedBy$default(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function rangesDelimitedBy_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda_0(delimiters, ignoreCase));
  }
  function rangesDelimitedBy$default_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function requireNonNegativeLimit(limit) {
    var tmp0_require = limit >= 0;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.text.requireNonNegativeLimit.<anonymous>' call
      tmp$ret$0 = 'Limit must be non-negative, but was ' + limit;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    return tmp;
  }
  function indexOf_3(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp_1 = charSequenceLength(_this__u8e3s4);
      tmp = indexOf$default_1(_this__u8e3s4, string, startIndex, tmp_1, ignoreCase, false, 16, null);
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = _this__u8e3s4;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_nativeIndexOf;
      tmp$ret$1 = tmp$ret$0.indexOf(string, startIndex);
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function indexOf$default_0(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_3(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function calcNext($this) {
    if ($this.f4_1 < 0) {
      $this.d4_1 = 0;
      $this.g4_1 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this.i4_1.l4_1 > 0) {
        var tmp0_this = $this;
        tmp0_this.h4_1 = tmp0_this.h4_1 + 1 | 0;
        tmp_0 = tmp0_this.h4_1 >= $this.i4_1.l4_1;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        tmp = $this.f4_1 > charSequenceLength($this.i4_1.j4_1);
      }
      if (tmp) {
        $this.g4_1 = numberRangeToNumber($this.e4_1, get_lastIndex_1($this.i4_1.j4_1));
        $this.f4_1 = -1;
      } else {
        var match = $this.i4_1.m4_1($this.i4_1.j4_1, $this.f4_1);
        if (match == null) {
          $this.g4_1 = numberRangeToNumber($this.e4_1, get_lastIndex_1($this.i4_1.j4_1));
          $this.f4_1 = -1;
        } else {
          var tmp1_container = match;
          var index = tmp1_container.o2();
          var length = tmp1_container.p2();
          $this.g4_1 = until($this.e4_1, index);
          $this.e4_1 = index + length | 0;
          $this.f4_1 = $this.e4_1 + (length === 0 ? 1 : 0) | 0;
        }
      }
      $this.d4_1 = 1;
    }
  }
  function DelimitedRangesSequence$iterator$1(this$0) {
    this.i4_1 = this$0;
    this.d4_1 = -1;
    this.e4_1 = coerceIn(this$0.k4_1, 0, charSequenceLength(this$0.j4_1));
    this.f4_1 = this.e4_1;
    this.g4_1 = null;
    this.h4_1 = 0;
  }
  DelimitedRangesSequence$iterator$1.prototype.j = function () {
    if (this.d4_1 === -1) {
      calcNext(this);
    }
    if (this.d4_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.g4_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.g4_1 = null;
    this.d4_1 = -1;
    return result;
  };
  DelimitedRangesSequence$iterator$1.prototype.i = function () {
    if (this.d4_1 === -1) {
      calcNext(this);
    }
    return this.d4_1 === 1;
  };
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this.j4_1 = input;
    this.k4_1 = startIndex;
    this.l4_1 = limit;
    this.m4_1 = getNextMatch;
  }
  DelimitedRangesSequence.prototype.h = function () {
    return new DelimitedRangesSequence$iterator$1(this);
  };
  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
    if (!ignoreCase ? strings.f() === 1 : false) {
      var string = single_0(strings);
      var tmp;
      if (!last) {
        tmp = indexOf$default_0(_this__u8e3s4, string, startIndex, false, 4, null);
      } else {
        tmp = lastIndexOf$default(_this__u8e3s4, string, startIndex, false, 4, null);
      }
      var index = tmp;
      return index < 0 ? null : to(index, string);
    }
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_1(_this__u8e3s4)), 0);
    if (typeof _this__u8e3s4 === 'string') {
      var inductionVariable = indices.m3_1;
      var last_0 = indices.n3_1;
      var step = indices.o3_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          var tmp$ret$1;
          $l$block: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var tmp0_iterator = strings.h();
            while (tmp0_iterator.i()) {
              var element = tmp0_iterator.j();
              var tmp$ret$0;
              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
              tmp$ret$0 = regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase);
              if (tmp$ret$0) {
                tmp$ret$1 = element;
                break $l$block;
              }
            }
            tmp$ret$1 = null;
          }
          var matchingString = tmp$ret$1;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_0));
    } else {
      var inductionVariable_0 = indices.m3_1;
      var last_1 = indices.n3_1;
      var step_0 = indices.o3_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          var tmp$ret$3;
          $l$block_0: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var tmp0_iterator_0 = strings.h();
            while (tmp0_iterator_0.i()) {
              var element_0 = tmp0_iterator_0.j();
              var tmp$ret$2;
              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
              tmp$ret$2 = regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase);
              if (tmp$ret$2) {
                tmp$ret$3 = element_0;
                break $l$block_0;
              }
            }
            tmp$ret$3 = null;
          }
          var matchingString_0 = tmp$ret$3;
          if (!(matchingString_0 == null))
            return to(index_1, matchingString_0);
        }
         while (!(index_1 === last_1));
    }
    return null;
  }
  function indexOf_4(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_1(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this__u8e3s4 === 'string') {
      tmp = typeof other === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var inductionVariable = indices.m3_1;
      var last_0 = indices.n3_1;
      var step = indices.o3_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_0));
    } else {
      var inductionVariable_0 = indices.m3_1;
      var last_1 = indices.n3_1;
      var step_0 = indices.o3_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
            return index_0;
        }
         while (!(index_0 === last_1));
    }
    return -1;
  }
  function indexOf$default_1(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      last = false;
    return indexOf_4(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last);
  }
  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_4(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeLastIndexOf' call
      var tmp0_nativeLastIndexOf = _this__u8e3s4;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_nativeLastIndexOf;
      tmp$ret$1 = tmp$ret$0.lastIndexOf(string, startIndex);
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function lastIndexOf$default(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = get_lastIndex_1(_this__u8e3s4);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function get_indices_0(_this__u8e3s4) {
    return numberRangeToNumber(0, charSequenceLength(_this__u8e3s4) - 1 | 0);
  }
  function rangesDelimitedBy$lambda($delimitersList, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
        tmp$ret$0 = to(tmp0_safe_receiver.m2_1, tmp0_safe_receiver.n2_1.length);
        tmp$ret$1 = tmp$ret$0;
        tmp = tmp$ret$1;
      }
      return tmp;
    };
  }
  function rangesDelimitedBy$lambda_0($delimiters, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      var tmp0_let = indexOfAny($this$$receiver, $delimiters, currentIndex, $ignoreCase);
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_let < 0 ? null : to(tmp0_let, 1);
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  var LazyThreadSafetyMode_SYNCHRONIZED_instance;
  var LazyThreadSafetyMode_PUBLICATION_instance;
  var LazyThreadSafetyMode_NONE_instance;
  var LazyThreadSafetyMode_entriesInitialized;
  function LazyThreadSafetyMode_initEntries() {
    if (LazyThreadSafetyMode_entriesInitialized)
      return Unit_getInstance();
    LazyThreadSafetyMode_entriesInitialized = true;
    LazyThreadSafetyMode_SYNCHRONIZED_instance = new LazyThreadSafetyMode('SYNCHRONIZED', 0);
    LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
    LazyThreadSafetyMode_NONE_instance = new LazyThreadSafetyMode('NONE', 2);
  }
  function LazyThreadSafetyMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function UnsafeLazyImpl(initializer) {
    this.n4_1 = initializer;
    this.o4_1 = UNINITIALIZED_VALUE_getInstance();
  }
  UnsafeLazyImpl.prototype.k1 = function () {
    if (this.o4_1 === UNINITIALIZED_VALUE_getInstance()) {
      this.o4_1 = ensureNotNull(this.n4_1)();
      this.n4_1 = null;
    }
    var tmp = this.o4_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  UnsafeLazyImpl.prototype.p4 = function () {
    return !(this.o4_1 === UNINITIALIZED_VALUE_getInstance());
  };
  UnsafeLazyImpl.prototype.toString = function () {
    return this.p4() ? toString_2(this.k1()) : 'Lazy value not initialized yet.';
  };
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function LazyThreadSafetyMode_PUBLICATION_getInstance() {
    LazyThreadSafetyMode_initEntries();
    return LazyThreadSafetyMode_PUBLICATION_instance;
  }
  function _Result___init__impl__xyqfz8(value) {
    return value;
  }
  function _Result___get_value__impl__bjfvqg($this) {
    return $this;
  }
  function _Result___get_isFailure__impl__jpiriv($this) {
    var tmp = _Result___get_value__impl__bjfvqg($this);
    return tmp instanceof Failure;
  }
  function Result__exceptionOrNull_impl_p6xea9($this) {
    var tmp0_subject = _Result___get_value__impl__bjfvqg($this);
    var tmp;
    if (tmp0_subject instanceof Failure) {
      tmp = _Result___get_value__impl__bjfvqg($this).q4_1;
    } else {
      tmp = null;
    }
    return tmp;
  }
  function Companion_4() {
    Companion_instance_4 = this;
  }
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function Failure(exception) {
    this.q4_1 = exception;
  }
  Failure.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Failure) {
      tmp = equals_0(this.q4_1, other.q4_1);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Failure.prototype.hashCode = function () {
    return hashCode(this.q4_1);
  };
  Failure.prototype.toString = function () {
    return 'Failure(' + this.q4_1 + ')';
  };
  function createFailure(exception) {
    return new Failure(exception);
  }
  function NotImplementedError(message) {
    Error_init_$Init$(message, this);
    captureStack(this, NotImplementedError);
  }
  function Pair(first, second) {
    this.m2_1 = first;
    this.n2_1 = second;
  }
  Pair.prototype.toString = function () {
    return '(' + this.m2_1 + ', ' + this.n2_1 + ')';
  };
  Pair.prototype.o2 = function () {
    return this.m2_1;
  };
  Pair.prototype.p2 = function () {
    return this.n2_1;
  };
  Pair.prototype.hashCode = function () {
    var result = this.m2_1 == null ? 0 : hashCode(this.m2_1);
    result = imul(result, 31) + (this.n2_1 == null ? 0 : hashCode(this.n2_1)) | 0;
    return result;
  };
  Pair.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_0(this.m2_1, tmp0_other_with_cast.m2_1))
      return false;
    if (!equals_0(this.n2_1, tmp0_other_with_cast.n2_1))
      return false;
    return true;
  };
  function to(_this__u8e3s4, that) {
    return new Pair(_this__u8e3s4, that);
  }
  function Triple(first, second, third) {
    this.t4_1 = first;
    this.u4_1 = second;
    this.v4_1 = third;
  }
  Triple.prototype.toString = function () {
    return '(' + this.t4_1 + ', ' + this.u4_1 + ', ' + this.v4_1 + ')';
  };
  Triple.prototype.o2 = function () {
    return this.t4_1;
  };
  Triple.prototype.p2 = function () {
    return this.u4_1;
  };
  Triple.prototype.w4 = function () {
    return this.v4_1;
  };
  Triple.prototype.hashCode = function () {
    var result = this.t4_1 == null ? 0 : hashCode(this.t4_1);
    result = imul(result, 31) + (this.u4_1 == null ? 0 : hashCode(this.u4_1)) | 0;
    result = imul(result, 31) + (this.v4_1 == null ? 0 : hashCode(this.v4_1)) | 0;
    return result;
  };
  Triple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_0(this.t4_1, tmp0_other_with_cast.t4_1))
      return false;
    if (!equals_0(this.u4_1, tmp0_other_with_cast.u4_1))
      return false;
    if (!equals_0(this.v4_1, tmp0_other_with_cast.v4_1))
      return false;
    return true;
  };
  function _UByte___get_data__impl__jof9qr($this) {
    return $this;
  }
  function UByte() {
  }
  function _UInt___init__impl__l7qpdl(data) {
    return data;
  }
  function _UInt___get_data__impl__f0vqqw($this) {
    return $this;
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.x4_1 = _UInt___init__impl__l7qpdl(0);
    this.y4_1 = _UInt___init__impl__l7qpdl(-1);
    this.z4_1 = 4;
    this.a5_1 = 32;
  }
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function UInt__compareTo_impl_yacclj($this, other) {
    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__compareTo_impl_yacclj_0($this, other) {
    var tmp = $this.b5_1;
    return UInt__compareTo_impl_yacclj(tmp, other instanceof UInt ? other.b5_1 : THROW_CCE());
  }
  function UInt__toString_impl_dbgl21($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw($this)).c5(new Long(-1, 0));
    return tmp$ret$0.toString();
  }
  function UInt__hashCode_impl_z2mhuw($this) {
    return $this;
  }
  function UInt__equals_impl_ffdoxg($this, other) {
    if (!(other instanceof UInt))
      return false;
    var tmp0_other_with_cast = other instanceof UInt ? other.b5_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_5();
    this.b5_1 = data;
  }
  UInt.prototype.d5 = function (other) {
    return UInt__compareTo_impl_yacclj(this.b5_1, other);
  };
  UInt.prototype.e5 = function (other) {
    return UInt__compareTo_impl_yacclj_0(this, other);
  };
  UInt.prototype.toString = function () {
    return UInt__toString_impl_dbgl21(this.b5_1);
  };
  UInt.prototype.hashCode = function () {
    return UInt__hashCode_impl_z2mhuw(this.b5_1);
  };
  UInt.prototype.equals = function (other) {
    return UInt__equals_impl_ffdoxg(this.b5_1, other);
  };
  function _UIntArray___init__impl__ghjpc6(storage) {
    return storage;
  }
  function _UIntArray___get_storage__impl__92a0v0($this) {
    return $this;
  }
  function _UIntArray___init__impl__ghjpc6_0(size) {
    var tmp = _UIntArray___init__impl__ghjpc6(new Int32Array(size));
    return tmp;
  }
  function UIntArray__get_impl_gp5kza($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    var tmp0_toUInt = _UIntArray___get_storage__impl__92a0v0($this)[index];
    tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
    return tmp$ret$0;
  }
  function UIntArray__set_impl_7f2zu2($this, index, value) {
    var tmp = _UIntArray___get_storage__impl__92a0v0($this);
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toInt' call
    tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
    tmp[index] = tmp$ret$0;
  }
  function _UIntArray___get_size__impl__r6l8ci($this) {
    return _UIntArray___get_storage__impl__92a0v0($this).length;
  }
  function UIntArray__iterator_impl_tkdv7k($this) {
    return new Iterator(_UIntArray___get_storage__impl__92a0v0($this));
  }
  function Iterator(array) {
    this.f5_1 = array;
    this.g5_1 = 0;
  }
  Iterator.prototype.i = function () {
    return this.g5_1 < this.f5_1.length;
  };
  Iterator.prototype.h5 = function () {
    var tmp;
    if (this.g5_1 < this.f5_1.length) {
      var tmp$ret$0;
      // Inline function 'kotlin.toUInt' call
      var tmp0_this = this;
      var tmp1 = tmp0_this.g5_1;
      tmp0_this.g5_1 = tmp1 + 1 | 0;
      var tmp0_toUInt = this.f5_1[tmp1];
      tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
      tmp = tmp$ret$0;
    } else {
      throw NoSuchElementException_init_$Create$_0(this.g5_1.toString());
    }
    return tmp;
  };
  Iterator.prototype.j = function () {
    return new UInt(this.h5());
  };
  function UIntArray__containsAll_impl_414g22($this, elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = isInterface(elements, Collection) ? elements : THROW_CCE();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$2;
        // Inline function 'kotlin.UIntArray.containsAll.<anonymous>' call
        var tmp_0;
        if (element instanceof UInt) {
          var tmp_1 = _UIntArray___get_storage__impl__92a0v0($this);
          var tmp$ret$1;
          // Inline function 'kotlin.UInt.toInt' call
          var tmp0_toInt = element.b5_1;
          tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
          tmp_0 = contains_0(tmp_1, tmp$ret$1);
        } else {
          tmp_0 = false;
        }
        tmp$ret$2 = tmp_0;
        if (!tmp$ret$2) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  function UIntArray__containsAll_impl_414g22_0($this, elements) {
    return UIntArray__containsAll_impl_414g22($this.i5_1, elements);
  }
  function UIntArray__isEmpty_impl_vd8j4n($this) {
    return _UIntArray___get_storage__impl__92a0v0($this).length === 0;
  }
  function UIntArray__toString_impl_3zy802($this) {
    return 'UIntArray(storage=' + toString_3($this) + ')';
  }
  function UIntArray__hashCode_impl_hr7ost($this) {
    return hashCode($this);
  }
  function UIntArray__equals_impl_flcmof($this, other) {
    if (!(other instanceof UIntArray))
      return false;
    var tmp0_other_with_cast = other instanceof UIntArray ? other.i5_1 : THROW_CCE();
    if (!equals_0($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function UIntArray(storage) {
    this.i5_1 = storage;
  }
  UIntArray.prototype.f = function () {
    return _UIntArray___get_size__impl__r6l8ci(this.i5_1);
  };
  UIntArray.prototype.h = function () {
    return UIntArray__iterator_impl_tkdv7k(this.i5_1);
  };
  UIntArray.prototype.j5 = function (elements) {
    return UIntArray__containsAll_impl_414g22(this.i5_1, elements);
  };
  UIntArray.prototype.y = function (elements) {
    return UIntArray__containsAll_impl_414g22_0(this, elements);
  };
  UIntArray.prototype.k = function () {
    return UIntArray__isEmpty_impl_vd8j4n(this.i5_1);
  };
  UIntArray.prototype.toString = function () {
    return UIntArray__toString_impl_3zy802(this.i5_1);
  };
  UIntArray.prototype.hashCode = function () {
    return UIntArray__hashCode_impl_hr7ost(this.i5_1);
  };
  UIntArray.prototype.equals = function (other) {
    return UIntArray__equals_impl_flcmof(this.i5_1, other);
  };
  function _ULong___init__impl__c78o9k(data) {
    return data;
  }
  function _ULong___get_data__impl__fggpzb($this) {
    return $this;
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.k5_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.l5_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.m5_1 = 8;
    this.n5_1 = 64;
  }
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function ULong__compareTo_impl_38i7tu($this, other) {
    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
  }
  function ULong__compareTo_impl_38i7tu_0($this, other) {
    var tmp = $this.w_1;
    return ULong__compareTo_impl_38i7tu(tmp, other instanceof ULong ? other.w_1 : THROW_CCE());
  }
  function ULong__toString_impl_f9au7k($this) {
    return ulongToString(_ULong___get_data__impl__fggpzb($this));
  }
  function ULong__hashCode_impl_6hv2lb($this) {
    return $this.hashCode();
  }
  function ULong__equals_impl_o0gnyb($this, other) {
    if (!(other instanceof ULong))
      return false;
    var tmp0_other_with_cast = other instanceof ULong ? other.w_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_6();
    this.w_1 = data;
  }
  ULong.prototype.o5 = function (other) {
    return ULong__compareTo_impl_38i7tu(this.w_1, other);
  };
  ULong.prototype.e5 = function (other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  };
  ULong.prototype.toString = function () {
    return ULong__toString_impl_f9au7k(this.w_1);
  };
  ULong.prototype.hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.w_1);
  };
  ULong.prototype.equals = function (other) {
    return ULong__equals_impl_o0gnyb(this.w_1, other);
  };
  function _ULongArray___init__impl__twm1l3(storage) {
    return storage;
  }
  function _ULongArray___get_storage__impl__28e64j($this) {
    return $this;
  }
  function _ULongArray___init__impl__twm1l3_0(size) {
    var tmp = _ULongArray___init__impl__twm1l3(longArray(size));
    return tmp;
  }
  function ULongArray__get_impl_pr71q9($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    var tmp0_toULong = _ULongArray___get_storage__impl__28e64j($this)[index];
    tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
    return tmp$ret$0;
  }
  function ULongArray__set_impl_z19mvh($this, index, value) {
    var tmp = _ULongArray___get_storage__impl__28e64j($this);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
    tmp[index] = tmp$ret$0;
  }
  function _ULongArray___get_size__impl__ju6dtr($this) {
    return _ULongArray___get_storage__impl__28e64j($this).length;
  }
  function ULongArray__iterator_impl_cq4d2h($this) {
    return new Iterator_0(_ULongArray___get_storage__impl__28e64j($this));
  }
  function Iterator_0(array) {
    this.p5_1 = array;
    this.q5_1 = 0;
  }
  Iterator_0.prototype.i = function () {
    return this.q5_1 < this.p5_1.length;
  };
  Iterator_0.prototype.r5 = function () {
    var tmp;
    if (this.q5_1 < this.p5_1.length) {
      var tmp$ret$0;
      // Inline function 'kotlin.toULong' call
      var tmp0_this = this;
      var tmp1 = tmp0_this.q5_1;
      tmp0_this.q5_1 = tmp1 + 1 | 0;
      var tmp0_toULong = this.p5_1[tmp1];
      tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
      tmp = tmp$ret$0;
    } else {
      throw NoSuchElementException_init_$Create$_0(this.q5_1.toString());
    }
    return tmp;
  };
  Iterator_0.prototype.j = function () {
    return new ULong(this.r5());
  };
  function ULongArray__contains_impl_v9bgai($this, element) {
    var tmp = isObject(new ULong(element)) ? new ULong(element) : THROW_CCE();
    if (!(tmp instanceof ULong))
      return false;
    var tmp_0 = _ULongArray___get_storage__impl__28e64j($this);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(element);
    return contains(tmp_0, tmp$ret$0);
  }
  function ULongArray__containsAll_impl_xx8ztf($this, elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = isInterface(elements, Collection) ? elements : THROW_CCE();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$2;
        // Inline function 'kotlin.ULongArray.containsAll.<anonymous>' call
        var tmp_0;
        if (element instanceof ULong) {
          var tmp_1 = _ULongArray___get_storage__impl__28e64j($this);
          var tmp$ret$1;
          // Inline function 'kotlin.ULong.toLong' call
          var tmp0_toLong = element.w_1;
          tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
          tmp_0 = contains(tmp_1, tmp$ret$1);
        } else {
          tmp_0 = false;
        }
        tmp$ret$2 = tmp_0;
        if (!tmp$ret$2) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  function ULongArray__containsAll_impl_xx8ztf_0($this, elements) {
    return ULongArray__containsAll_impl_xx8ztf($this.s5_1, elements);
  }
  function ULongArray__isEmpty_impl_c3yngu($this) {
    return _ULongArray___get_storage__impl__28e64j($this).length === 0;
  }
  function ULongArray__toString_impl_wqk1p5($this) {
    return 'ULongArray(storage=' + toString_3($this) + ')';
  }
  function ULongArray__hashCode_impl_aze4wa($this) {
    return hashCode($this);
  }
  function ULongArray__equals_impl_vwitwa($this, other) {
    if (!(other instanceof ULongArray))
      return false;
    var tmp0_other_with_cast = other instanceof ULongArray ? other.s5_1 : THROW_CCE();
    if (!equals_0($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULongArray(storage) {
    this.s5_1 = storage;
  }
  ULongArray.prototype.f = function () {
    return _ULongArray___get_size__impl__ju6dtr(this.s5_1);
  };
  ULongArray.prototype.h = function () {
    return ULongArray__iterator_impl_cq4d2h(this.s5_1);
  };
  ULongArray.prototype.t5 = function (elements) {
    return ULongArray__containsAll_impl_xx8ztf(this.s5_1, elements);
  };
  ULongArray.prototype.y = function (elements) {
    return ULongArray__containsAll_impl_xx8ztf_0(this, elements);
  };
  ULongArray.prototype.k = function () {
    return ULongArray__isEmpty_impl_c3yngu(this.s5_1);
  };
  ULongArray.prototype.toString = function () {
    return ULongArray__toString_impl_wqk1p5(this.s5_1);
  };
  ULongArray.prototype.hashCode = function () {
    return ULongArray__hashCode_impl_aze4wa(this.s5_1);
  };
  ULongArray.prototype.equals = function (other) {
    return ULongArray__equals_impl_vwitwa(this.s5_1, other);
  };
  function _UShort___init__impl__jigrne(data) {
    return data;
  }
  function _UShort___get_data__impl__g0245($this) {
    return $this;
  }
  function UShort() {
  }
  function toString_0(_this__u8e3s4, radix) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(_this__u8e3s4);
    return ulongToString_0(tmp$ret$0, checkRadix(radix));
  }
  function uintCompare(v1, v2) {
    return compareTo(v1 ^ IntCompanionObject_getInstance().MIN_VALUE, v2 ^ IntCompanionObject_getInstance().MIN_VALUE);
  }
  function uintDivide(v1, v2) {
    var tmp$ret$2;
    // Inline function 'kotlin.toUInt' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw(v1)).c5(new Long(-1, 0));
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$1 = toLong_0(_UInt___get_data__impl__f0vqqw(v2)).c5(new Long(-1, 0));
    var tmp0_toUInt = tmp.y3(tmp$ret$1);
    tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
    return tmp$ret$2;
  }
  function uintRemainder(v1, v2) {
    var tmp$ret$2;
    // Inline function 'kotlin.toUInt' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$0 = toLong_0(_UInt___get_data__impl__f0vqqw(v1)).c5(new Long(-1, 0));
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$1 = toLong_0(_UInt___get_data__impl__f0vqqw(v2)).c5(new Long(-1, 0));
    var tmp0_toUInt = tmp.v5(tmp$ret$1);
    tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
    return tmp$ret$2;
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_9();
    var tmp = v1.w5(new Long(0, -2147483648));
    Companion_getInstance_9();
    return tmp.z3(v2.w5(new Long(0, -2147483648)));
  }
  function ulongDivide(v1, v2) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(v1);
    var dividend = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$1 = _ULong___get_data__impl__fggpzb(v2);
    var divisor = tmp$ret$1;
    if (divisor.z3(new Long(0, 0)) < 0) {
      var tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.compareTo' call
      tmp$ret$2 = ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2));
      if (tmp$ret$2 < 0) {
        tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
      }
      return tmp;
    }
    if (dividend.z3(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.y3(divisor));
    }
    var quotient = dividend.x5(1).y3(divisor).y5(1);
    var rem = dividend.c4(quotient.a4(divisor));
    var tmp$ret$4;
    // Inline function 'kotlin.Long.plus' call
    var tmp_0;
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.compareTo' call
    var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
    var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
    tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
    if (tmp$ret$3 >= 0) {
      tmp_0 = 1;
    } else {
      tmp_0 = 0;
    }
    var tmp2_plus = tmp_0;
    tmp$ret$4 = quotient.b4(toLong_0(tmp2_plus));
    return _ULong___init__impl__c78o9k(tmp$ret$4);
  }
  function ulongRemainder(v1, v2) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(v1);
    var dividend = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$1 = _ULong___get_data__impl__fggpzb(v2);
    var divisor = tmp$ret$1;
    if (divisor.z3(new Long(0, 0)) < 0) {
      var tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.compareTo' call
      tmp$ret$2 = ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2));
      if (tmp$ret$2 < 0) {
        tmp = v1;
      } else {
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.minus' call
        tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(v1).c4(_ULong___get_data__impl__fggpzb(v2)));
        tmp = tmp$ret$3;
      }
      return tmp;
    }
    if (dividend.z3(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.v5(divisor));
    }
    var quotient = dividend.x5(1).y3(divisor).y5(1);
    var rem = dividend.c4(quotient.a4(divisor));
    var tmp_0;
    var tmp$ret$4;
    // Inline function 'kotlin.ULong.compareTo' call
    var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
    var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
    tmp$ret$4 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
    if (tmp$ret$4 >= 0) {
      tmp_0 = divisor;
    } else {
      tmp_0 = new Long(0, 0);
    }
    return _ULong___init__impl__c78o9k(rem.c4(tmp_0));
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.z3(new Long(0, 0)) >= 0)
      return toString_4(v, base);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.div' call
    var tmp0_div = v.x5(1);
    tmp$ret$0 = tmp0_div.y3(toLong_0(base));
    var quotient = tmp$ret$0.y5(1);
    var tmp$ret$1;
    // Inline function 'kotlin.Long.times' call
    var tmp1_times = quotient;
    tmp$ret$1 = tmp1_times.a4(toLong_0(base));
    var rem = v.c4(tmp$ret$1);
    if (rem.z3(toLong_0(base)) >= 0) {
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      var tmp2_minus = rem;
      tmp$ret$2 = tmp2_minus.c4(toLong_0(base));
      rem = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.Long.plus' call
      var tmp3_plus = quotient;
      tmp$ret$3 = tmp3_plus.b4(new Long(1, 0));
      quotient = tmp$ret$3;
    }
    return toString_4(quotient, base) + toString_4(rem, base);
  }
  function CharSequence() {
  }
  function Number_0() {
  }
  function Unit() {
    Unit_instance = this;
  }
  Unit.prototype.toString = function () {
    return 'kotlin.Unit';
  };
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function IntCompanionObject() {
    IntCompanionObject_instance = this;
    this.MIN_VALUE = -2147483648;
    this.MAX_VALUE = 2147483647;
    this.SIZE_BYTES = 4;
    this.SIZE_BITS = 32;
  }
  IntCompanionObject.prototype.c6 = function () {
    return this.MIN_VALUE;
  };
  IntCompanionObject.prototype.d6 = function () {
    return this.MAX_VALUE;
  };
  IntCompanionObject.prototype.e6 = function () {
    return this.SIZE_BYTES;
  };
  IntCompanionObject.prototype.f6 = function () {
    return this.SIZE_BITS;
  };
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject() {
    FloatCompanionObject_instance = this;
    this.MIN_VALUE = 1.4E-45;
    this.MAX_VALUE = 3.4028235E38;
    this.POSITIVE_INFINITY = Infinity;
    this.NEGATIVE_INFINITY = -Infinity;
    this.NaN = NaN;
    this.SIZE_BYTES = 4;
    this.SIZE_BITS = 32;
  }
  FloatCompanionObject.prototype.c6 = function () {
    return this.MIN_VALUE;
  };
  FloatCompanionObject.prototype.d6 = function () {
    return this.MAX_VALUE;
  };
  FloatCompanionObject.prototype.g6 = function () {
    return this.POSITIVE_INFINITY;
  };
  FloatCompanionObject.prototype.h6 = function () {
    return this.NEGATIVE_INFINITY;
  };
  FloatCompanionObject.prototype.i6 = function () {
    return this.NaN;
  };
  FloatCompanionObject.prototype.e6 = function () {
    return this.SIZE_BYTES;
  };
  FloatCompanionObject.prototype.f6 = function () {
    return this.SIZE_BITS;
  };
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject() {
    DoubleCompanionObject_instance = this;
    this.MIN_VALUE = 4.9E-324;
    this.MAX_VALUE = 1.7976931348623157E308;
    this.POSITIVE_INFINITY = Infinity;
    this.NEGATIVE_INFINITY = -Infinity;
    this.NaN = NaN;
    this.SIZE_BYTES = 8;
    this.SIZE_BITS = 64;
  }
  DoubleCompanionObject.prototype.c6 = function () {
    return this.MIN_VALUE;
  };
  DoubleCompanionObject.prototype.d6 = function () {
    return this.MAX_VALUE;
  };
  DoubleCompanionObject.prototype.g6 = function () {
    return this.POSITIVE_INFINITY;
  };
  DoubleCompanionObject.prototype.h6 = function () {
    return this.NEGATIVE_INFINITY;
  };
  DoubleCompanionObject.prototype.i6 = function () {
    return this.NaN;
  };
  DoubleCompanionObject.prototype.e6 = function () {
    return this.SIZE_BYTES;
  };
  DoubleCompanionObject.prototype.f6 = function () {
    return this.SIZE_BITS;
  };
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function listOf_0(element) {
    return arrayListOf([element]);
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }
    return index;
  }
  function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().d1(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().d1(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (isView(destination) ? isView(source) : false) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = source;
      var subrange = tmp$ret$0.subarray(startIndex, endIndex);
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = destination;
      tmp$ret$1.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function mapOf(pair) {
    return hashMapOf([pair]);
  }
  function copyToArray(collection) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = collection;
    if (tmp$ret$0.toArray !== undefined) {
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = collection;
      var tmp0_unsafeCast = tmp$ret$1.toArray();
      tmp$ret$2 = tmp0_unsafeCast;
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = copyToArrayImpl(collection);
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_unsafeCast;
      tmp$ret$4 = tmp$ret$3;
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function copyToArrayImpl(collection) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    var array = tmp$ret$0;
    var iterator = collection.h();
    while (iterator.i()) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = array;
      tmp$ret$1.push(iterator.j());
    }
    return array;
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  AbstractMutableCollection.prototype.g = function (elements) {
    this.j6();
    var modified = false;
    var tmp0_iterator = elements.h();
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      if (this.e(element))
        modified = true;
    }
    return modified;
  };
  AbstractMutableCollection.prototype.toJSON = function () {
    return this.toArray();
  };
  AbstractMutableCollection.prototype.j6 = function () {
  };
  function IteratorImpl_0($outer) {
    this.m6_1 = $outer;
    this.k6_1 = 0;
    this.l6_1 = -1;
  }
  IteratorImpl_0.prototype.i = function () {
    return this.k6_1 < this.m6_1.f();
  };
  IteratorImpl_0.prototype.j = function () {
    if (!this.i())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp0_this = this;
    var tmp1 = tmp0_this.k6_1;
    tmp0_this.k6_1 = tmp1 + 1 | 0;
    tmp.l6_1 = tmp1;
    return this.m6_1.l(this.l6_1);
  };
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this.n6_1 = 0;
  }
  AbstractMutableList.prototype.e = function (element) {
    this.j6();
    this.o6(this.f(), element);
    return true;
  };
  AbstractMutableList.prototype.h = function () {
    return new IteratorImpl_0(this);
  };
  AbstractMutableList.prototype.x = function (element) {
    return this.p6(element) >= 0;
  };
  AbstractMutableList.prototype.p6 = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex_0(this);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_0(this.l(index), element)) {
          return index;
        }
      }
       while (!(index === last));
    return -1;
  };
  AbstractMutableList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    return Companion_getInstance().f1(this, other);
  };
  AbstractMutableList.prototype.hashCode = function () {
    return Companion_getInstance().e1(this);
  };
  function AbstractMutableMap$keys$1$iterator$1($entryIterator) {
    this.q6_1 = $entryIterator;
  }
  AbstractMutableMap$keys$1$iterator$1.prototype.i = function () {
    return this.q6_1.i();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.j = function () {
    return this.q6_1.j().h1();
  };
  function SimpleEntry(key, value) {
    this.r6_1 = key;
    this.s6_1 = value;
  }
  SimpleEntry.prototype.h1 = function () {
    return this.r6_1;
  };
  SimpleEntry.prototype.k1 = function () {
    return this.s6_1;
  };
  SimpleEntry.prototype.t6 = function (newValue) {
    var oldValue = this.s6_1;
    this.s6_1 = newValue;
    return oldValue;
  };
  SimpleEntry.prototype.hashCode = function () {
    return Companion_getInstance_0().j1(this);
  };
  SimpleEntry.prototype.toString = function () {
    return Companion_getInstance_0().l1(this);
  };
  SimpleEntry.prototype.equals = function (other) {
    return Companion_getInstance_0().m1(this, other);
  };
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  AbstractEntrySet.prototype.x = function (element) {
    return this.u6(element);
  };
  function AbstractMutableMap$keys$1(this$0) {
    this.v6_1 = this$0;
    AbstractMutableSet.call(this);
  }
  AbstractMutableMap$keys$1.prototype.w6 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  AbstractMutableMap$keys$1.prototype.e = function (element) {
    return this.w6((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.o1 = function (element) {
    return this.v6_1.r1(element);
  };
  AbstractMutableMap$keys$1.prototype.x = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.o1((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.h = function () {
    var entryIterator = this.v6_1.i1().h();
    return new AbstractMutableMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$keys$1.prototype.f = function () {
    return this.v6_1.f();
  };
  AbstractMutableMap$keys$1.prototype.j6 = function () {
    return this.v6_1.j6();
  };
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.z6_1 = null;
    this.a7_1 = null;
  }
  AbstractMutableMap.prototype.v1 = function () {
    if (this.z6_1 == null) {
      var tmp = this;
      tmp.z6_1 = new AbstractMutableMap$keys$1(this);
    }
    return ensureNotNull(this.z6_1);
  };
  AbstractMutableMap.prototype.j6 = function () {
  };
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  AbstractMutableSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().x1(this, other);
  };
  AbstractMutableSet.prototype.hashCode = function () {
    return Companion_getInstance_1().w1(this);
  };
  function ArrayList_init_$Init$($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp$ret$0 = copyToArray(elements);
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, Object.create(ArrayList.prototype));
  }
  function rangeCheck($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.rangeCheck.<anonymous>' call
    Companion_getInstance().b1(index, $this.f());
    tmp$ret$0 = index;
    return tmp$ret$0;
  }
  function insertionRangeCheck($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.insertionRangeCheck.<anonymous>' call
    Companion_getInstance().c1(index, $this.f());
    tmp$ret$0 = index;
    return tmp$ret$0;
  }
  function ArrayList(array) {
    AbstractMutableList.call(this);
    this.c_1 = array;
    this.d_1 = false;
  }
  ArrayList.prototype.f = function () {
    return this.c_1.length;
  };
  ArrayList.prototype.l = function (index) {
    var tmp = this.c_1[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.e = function (element) {
    this.j6();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = this.c_1;
    tmp$ret$0 = tmp0_asDynamic;
    tmp$ret$0.push(element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.n6_1;
    tmp0_this.n6_1 = tmp1 + 1 | 0;
    return true;
  };
  ArrayList.prototype.o6 = function (index, element) {
    this.j6();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = this.c_1;
    tmp$ret$0 = tmp0_asDynamic;
    tmp$ret$0.splice(insertionRangeCheck(this, index), 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.n6_1;
    tmp0_this.n6_1 = tmp1 + 1 | 0;
  };
  ArrayList.prototype.g = function (elements) {
    this.j6();
    if (elements.k())
      return false;
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.plus' call
    var tmp0_plus = tmp0_this.c_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp$ret$0 = copyToArray(elements);
    var tmp1_plus = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_plus;
    tmp$ret$2 = tmp$ret$1.concat(tmp1_plus);
    tmp.c_1 = tmp$ret$2;
    var tmp1_this = this;
    var tmp2 = tmp1_this.n6_1;
    tmp1_this.n6_1 = tmp2 + 1 | 0;
    return true;
  };
  ArrayList.prototype.p6 = function (element) {
    return indexOf(this.c_1, element);
  };
  ArrayList.prototype.toString = function () {
    return arrayToString(this.c_1);
  };
  ArrayList.prototype.b7 = function () {
    return [].slice.call(this.c_1);
  };
  ArrayList.prototype.toArray = function () {
    return this.b7();
  };
  ArrayList.prototype.j6 = function () {
    if (this.d_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function HashCode() {
    HashCode_instance = this;
  }
  HashCode.prototype.c7 = function (value1, value2) {
    return equals_0(value1, value2);
  };
  HashCode.prototype.d7 = function (value) {
    var tmp0_safe_receiver = value;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EntrySet($outer) {
    this.e7_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet.prototype.f7 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet.prototype.e = function (element) {
    return this.f7((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet.prototype.u6 = function (element) {
    return this.e7_1.t1(element);
  };
  EntrySet.prototype.h = function () {
    return this.e7_1.k7_1.h();
  };
  EntrySet.prototype.f = function () {
    return this.e7_1.f();
  };
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this.k7_1 = internalMap;
    $this.l7_1 = internalMap.n7();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    // Inline function 'kotlin.require' call
    var tmp0_require = initialCapacity >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.HashMap.<init>.<anonymous>' call
      tmp$ret$0 = 'Negative initial capacity: ' + initialCapacity;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = loadFactor >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.HashMap.<init>.<anonymous>' call
      tmp$ret$1 = 'Non-positive load factor: ' + loadFactor;
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString_3(message_0));
    }
    return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, Object.create(HashMap.prototype));
  }
  HashMap.prototype.r1 = function (key) {
    return this.k7_1.o1(key);
  };
  HashMap.prototype.i1 = function () {
    if (this.m7_1 == null) {
      this.m7_1 = this.o7();
    }
    return ensureNotNull(this.m7_1);
  };
  HashMap.prototype.o7 = function () {
    return new EntrySet(this);
  };
  HashMap.prototype.u1 = function (key) {
    return this.k7_1.u1(key);
  };
  HashMap.prototype.q2 = function (key, value) {
    return this.k7_1.q2(key, value);
  };
  HashMap.prototype.f = function () {
    return this.k7_1.f();
  };
  function HashMap() {
    this.m7_1 = null;
  }
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.p7_1 = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_0(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.p7_1 = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_1(initialCapacity, $this) {
    HashSet_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_0(initialCapacity) {
    return HashSet_init_$Init$_1(initialCapacity, Object.create(HashSet.prototype));
  }
  HashSet.prototype.e = function (element) {
    var old = this.p7_1.q2(element, this);
    return old == null;
  };
  HashSet.prototype.x = function (element) {
    return this.p7_1.r1(element);
  };
  HashSet.prototype.k = function () {
    return this.p7_1.k();
  };
  HashSet.prototype.h = function () {
    return this.p7_1.v1().h();
  };
  HashSet.prototype.f = function () {
    return this.p7_1.f();
  };
  function HashSet() {
  }
  function computeNext($this) {
    if ($this.t7_1 != null ? $this.u7_1 : false) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = $this.t7_1;
      tmp$ret$0 = tmp0_unsafeCast;
      var chainSize = tmp$ret$0.length;
      var tmp0_this = $this;
      tmp0_this.v7_1 = tmp0_this.v7_1 + 1 | 0;
      if (tmp0_this.v7_1 < chainSize)
        return 0;
    }
    var tmp1_this = $this;
    tmp1_this.s7_1 = tmp1_this.s7_1 + 1 | 0;
    if (tmp1_this.s7_1 < $this.r7_1.length) {
      $this.t7_1 = $this.x7_1.z7_1[$this.r7_1[$this.s7_1]];
      var tmp = $this;
      var tmp_0 = $this.t7_1;
      tmp.u7_1 = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this.v7_1 = 0;
      return 0;
    } else {
      $this.t7_1 = null;
      return 1;
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this.y7_1.d7(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this.y7_1.c7(entry.h1(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      return findEntryInChain(chain, $this, key);
    }
  }
  function findEntryInChain(_this__u8e3s4, $this, key) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'kotlin.collections.InternalHashCodeMap.findEntryInChain.<anonymous>' call
        tmp$ret$0 = $this.y7_1.c7(element.h1(), key);
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function getChainOrEntryOrNull($this, hashCode) {
    var chainOrEntry = $this.z7_1[hashCode];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function InternalHashCodeMap$iterator$1(this$0) {
    this.x7_1 = this$0;
    this.q7_1 = -1;
    this.r7_1 = Object.keys(this$0.z7_1);
    this.s7_1 = -1;
    this.t7_1 = null;
    this.u7_1 = false;
    this.v7_1 = -1;
    this.w7_1 = null;
  }
  InternalHashCodeMap$iterator$1.prototype.i = function () {
    if (this.q7_1 === -1)
      this.q7_1 = computeNext(this);
    return this.q7_1 === 0;
  };
  InternalHashCodeMap$iterator$1.prototype.j = function () {
    if (!this.i())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this.u7_1) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = this.t7_1;
      tmp$ret$0 = tmp0_unsafeCast;
      tmp = tmp$ret$0[this.v7_1];
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = this.t7_1;
      tmp$ret$1 = tmp1_unsafeCast;
      tmp = tmp$ret$1;
    }
    var lastEntry = tmp;
    this.w7_1 = lastEntry;
    this.q7_1 = -1;
    return lastEntry;
  };
  function InternalHashCodeMap(equality) {
    this.y7_1 = equality;
    this.z7_1 = this.b8();
    this.a8_1 = 0;
  }
  InternalHashCodeMap.prototype.n7 = function () {
    return this.y7_1;
  };
  InternalHashCodeMap.prototype.f = function () {
    return this.a8_1;
  };
  InternalHashCodeMap.prototype.q2 = function (key, value) {
    var hashCode = this.y7_1.d7(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode);
    if (chainOrEntry == null) {
      this.z7_1[hashCode] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this.y7_1.c7(entry.h1(), key)) {
          return entry.t6(value);
        } else {
          var tmp$ret$2;
          // Inline function 'kotlin.arrayOf' call
          var tmp0_arrayOf = [entry, new SimpleEntry(key, value)];
          var tmp$ret$1;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$0 = tmp0_arrayOf;
          tmp$ret$1 = tmp$ret$0;
          tmp$ret$2 = tmp$ret$1;
          this.z7_1[hashCode] = tmp$ret$2;
          var tmp0_this = this;
          var tmp1 = tmp0_this.a8_1;
          tmp0_this.a8_1 = tmp1 + 1 | 0;
          return null;
        }
      } else {
        var chain = chainOrEntry;
        var entry_0 = findEntryInChain(chain, this, key);
        if (!(entry_0 == null)) {
          return entry_0.t6(value);
        }
        var tmp$ret$3;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$3 = chain;
        tmp$ret$3.push(new SimpleEntry(key, value));
      }
    }
    var tmp2_this = this;
    var tmp3 = tmp2_this.a8_1;
    tmp2_this.a8_1 = tmp3 + 1 | 0;
    return null;
  };
  InternalHashCodeMap.prototype.o1 = function (key) {
    return !(getEntry(this, key) == null);
  };
  InternalHashCodeMap.prototype.u1 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k1();
  };
  InternalHashCodeMap.prototype.h = function () {
    return new InternalHashCodeMap$iterator$1(this);
  };
  function InternalMap() {
  }
  function EntryIterator($outer) {
    this.e8_1 = $outer;
    this.c8_1 = null;
    this.d8_1 = null;
    this.d8_1 = this.e8_1.p8_1.m8_1;
  }
  EntryIterator.prototype.i = function () {
    return !(this.d8_1 === null);
  };
  EntryIterator.prototype.j = function () {
    if (!this.i())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this.d8_1);
    this.c8_1 = current;
    var tmp = this;
    var tmp$ret$1;
    // Inline function 'kotlin.takeIf' call
    var tmp0_takeIf = current.s8_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp_0;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.EntryIterator.next.<anonymous>' call
    tmp$ret$0 = !(tmp0_takeIf === this.e8_1.p8_1.m8_1);
    if (tmp$ret$0) {
      tmp_0 = tmp0_takeIf;
    } else {
      tmp_0 = null;
    }
    tmp$ret$1 = tmp_0;
    tmp.d8_1 = tmp$ret$1;
    return current;
  };
  function ChainEntry($outer, key, value) {
    this.u8_1 = $outer;
    SimpleEntry.call(this, key, value);
    this.s8_1 = null;
    this.t8_1 = null;
  }
  ChainEntry.prototype.t6 = function (newValue) {
    this.u8_1.j6();
    return SimpleEntry.prototype.t6.call(this, newValue);
  };
  function EntrySet_0($outer) {
    this.p8_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet_0.prototype.f7 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet_0.prototype.e = function (element) {
    return this.f7((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet_0.prototype.u6 = function (element) {
    return this.p8_1.t1(element);
  };
  EntrySet_0.prototype.h = function () {
    return new EntryIterator(this);
  };
  EntrySet_0.prototype.f = function () {
    return this.p8_1.f();
  };
  EntrySet_0.prototype.j6 = function () {
    return this.p8_1.j6();
  };
  function addToEnd(_this__u8e3s4, $this) {
    // Inline function 'kotlin.check' call
    var tmp0_check = _this__u8e3s4.s8_1 == null ? _this__u8e3s4.t8_1 == null : false;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_check) {
      var tmp$ret$0;
      // Inline function 'kotlin.check.<anonymous>' call
      tmp$ret$0 = 'Check failed.';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$_0(toString_3(message));
    }
    var _head = $this.m8_1;
    if (_head == null) {
      $this.m8_1 = _this__u8e3s4;
      _this__u8e3s4.s8_1 = _this__u8e3s4;
      _this__u8e3s4.t8_1 = _this__u8e3s4;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.checkNotNull' call
      var tmp1_checkNotNull = _head.t8_1;
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      $l$block: {
        // Inline function 'kotlin.checkNotNull' call
        // Inline function 'kotlin.contracts.contract' call
        if (tmp1_checkNotNull == null) {
          var tmp$ret$1;
          // Inline function 'kotlin.checkNotNull.<anonymous>' call
          tmp$ret$1 = 'Required value was null.';
          var message_0 = tmp$ret$1;
          throw IllegalStateException_init_$Create$_0(toString_3(message_0));
        } else {
          tmp$ret$2 = tmp1_checkNotNull;
          break $l$block;
        }
      }
      tmp$ret$3 = tmp$ret$2;
      var _tail = tmp$ret$3;
      _this__u8e3s4.t8_1 = _tail;
      _this__u8e3s4.s8_1 = _head;
      _head.t8_1 = _this__u8e3s4;
      _tail.s8_1 = _this__u8e3s4;
    }
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.n8_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this.n8_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, Object.create(LinkedHashMap.prototype));
  }
  LinkedHashMap.prototype.r1 = function (key) {
    return this.n8_1.r1(key);
  };
  LinkedHashMap.prototype.o7 = function () {
    return new EntrySet_0(this);
  };
  LinkedHashMap.prototype.u1 = function (key) {
    var tmp0_safe_receiver = this.n8_1.u1(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k1();
  };
  LinkedHashMap.prototype.q2 = function (key, value) {
    this.j6();
    var old = this.n8_1.u1(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this.n8_1.q2(key, newEntry);
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.t6(value);
    }
  };
  LinkedHashMap.prototype.f = function () {
    return this.n8_1.f();
  };
  LinkedHashMap.prototype.j6 = function () {
    if (this.o8_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    this.m8_1 = null;
    this.o8_1 = false;
  }
  function get_output() {
    init_properties_console_kt_6h8hpf();
    return output;
  }
  var output;
  function BaseOutput() {
  }
  BaseOutput.prototype.v8 = function () {
    this.w8('\n');
  };
  BaseOutput.prototype.x8 = function (message) {
    this.w8(message);
    this.v8();
  };
  function NodeJsOutput(outputStream) {
    BaseOutput.call(this);
    this.y8_1 = outputStream;
  }
  NodeJsOutput.prototype.w8 = function (message) {
    var tmp$ret$0;
    // Inline function 'kotlin.io.String' call
    tmp$ret$0 = String(message);
    var messageString = tmp$ret$0;
    this.y8_1.write(messageString);
  };
  function BufferedOutputToConsoleLog() {
    BufferedOutput.call(this);
  }
  BufferedOutputToConsoleLog.prototype.w8 = function (message) {
    var tmp$ret$0;
    // Inline function 'kotlin.io.String' call
    tmp$ret$0 = String(message);
    var s = tmp$ret$0;
    var tmp$ret$2;
    // Inline function 'kotlin.text.nativeLastIndexOf' call
    var tmp0_nativeLastIndexOf = s;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_nativeLastIndexOf;
    tmp$ret$2 = tmp$ret$1.lastIndexOf('\n', 0);
    var i = tmp$ret$2;
    if (i >= 0) {
      var tmp0_this = this;
      var tmp = tmp0_this;
      var tmp_0 = tmp0_this.a9_1;
      var tmp$ret$4;
      // Inline function 'kotlin.text.substring' call
      var tmp1_substring = s;
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_substring;
      tmp$ret$4 = tmp$ret$3.substring(0, i);
      tmp.a9_1 = tmp_0 + tmp$ret$4;
      this.b9();
      var tmp$ret$6;
      // Inline function 'kotlin.text.substring' call
      var tmp2_substring = s;
      var tmp3_substring = i + 1 | 0;
      var tmp$ret$5;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$5 = tmp2_substring;
      tmp$ret$6 = tmp$ret$5.substring(tmp3_substring);
      s = tmp$ret$6;
    }
    var tmp1_this = this;
    tmp1_this.a9_1 = tmp1_this.a9_1 + s;
  };
  BufferedOutputToConsoleLog.prototype.b9 = function () {
    console.log(this.a9_1);
    this.a9_1 = '';
  };
  function BufferedOutput() {
    BaseOutput.call(this);
    this.a9_1 = '';
  }
  BufferedOutput.prototype.w8 = function (message) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.a9_1;
    var tmp$ret$0;
    // Inline function 'kotlin.io.String' call
    tmp$ret$0 = String(message);
    tmp.a9_1 = tmp_0 + tmp$ret$0;
  };
  function println(message) {
    init_properties_console_kt_6h8hpf();
    get_output().x8(message);
  }
  var properties_initialized_console_kt_gll9dl;
  function init_properties_console_kt_6h8hpf() {
    if (properties_initialized_console_kt_gll9dl) {
    } else {
      properties_initialized_console_kt_gll9dl = true;
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.io.output.<anonymous>' call
      var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
      tmp$ret$0 = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();
      tmp$ret$1 = tmp$ret$0;
      output = tmp$ret$1;
    }
  }
  function CancellationException_init_$Init$(message, cause, $this) {
    IllegalStateException_init_$Init$_1(message, cause, $this);
    CancellationException.call($this);
    return $this;
  }
  function CancellationException() {
    captureStack(this, CancellationException);
  }
  function abs(n) {
    return n.z3(new Long(0, 0)) < 0 ? n.x3() : n;
  }
  function abs_0(n) {
    return n < 0 ? -n | 0 | 0 : n;
  }
  function isNaN_0(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function KClass() {
  }
  function KClassImpl(jClass) {
    this.d9_1 = jClass;
  }
  KClassImpl.prototype.e9 = function () {
    return this.d9_1;
  };
  KClassImpl.prototype.equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_0(this.e9(), other.e9());
    } else {
      tmp = false;
    }
    return tmp;
  };
  KClassImpl.prototype.hashCode = function () {
    var tmp0_safe_receiver = this.c9();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  KClassImpl.prototype.toString = function () {
    return 'class ' + this.c9();
  };
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this.g9_1 = givenSimpleName;
    this.h9_1 = isInstanceFunction;
  }
  PrimitiveKClassImpl.prototype.equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return KClassImpl.prototype.equals.call(this, other) ? this.g9_1 === other.g9_1 : false;
  };
  PrimitiveKClassImpl.prototype.c9 = function () {
    return this.g9_1;
  };
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this.j9_1 = 'Nothing';
  }
  NothingKClassImpl.prototype.c9 = function () {
    return this.j9_1;
  };
  NothingKClassImpl.prototype.e9 = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  NothingKClassImpl.prototype.equals = function (other) {
    return other === this;
  };
  NothingKClassImpl.prototype.hashCode = function () {
    return 0;
  };
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  ErrorKClass.prototype.c9 = function () {
    throw IllegalStateException_init_$Create$_0('Unknown simpleName for ErrorKClass');
  };
  ErrorKClass.prototype.equals = function (other) {
    return other === this;
  };
  ErrorKClass.prototype.hashCode = function () {
    return 0;
  };
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = jClass;
    var tmp0_safe_receiver = tmp$ret$0.$metadata$;
    var tmp0_unsafeCast = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
    tmp$ret$1 = tmp0_unsafeCast;
    tmp.l9_1 = tmp$ret$1;
  }
  SimpleKClassImpl.prototype.c9 = function () {
    return this.l9_1;
  };
  function KProperty1() {
  }
  function get_functionClasses() {
    init_properties_primitives_kt_rm1w5q();
    return functionClasses;
  }
  var functionClasses;
  function PrimitiveClasses$anyClass$lambda(it) {
    return isObject(it);
  }
  function PrimitiveClasses$numberClass$lambda(it) {
    return isNumber(it);
  }
  function PrimitiveClasses$booleanClass$lambda(it) {
    return !(it == null) ? typeof it === 'boolean' : false;
  }
  function PrimitiveClasses$byteClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$shortClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$intClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$floatClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$doubleClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$arrayClass$lambda(it) {
    return !(it == null) ? isArray(it) : false;
  }
  function PrimitiveClasses$stringClass$lambda(it) {
    return !(it == null) ? typeof it === 'string' : false;
  }
  function PrimitiveClasses$throwableClass$lambda(it) {
    return it instanceof Error;
  }
  function PrimitiveClasses$booleanArrayClass$lambda(it) {
    return !(it == null) ? isBooleanArray(it) : false;
  }
  function PrimitiveClasses$charArrayClass$lambda(it) {
    return !(it == null) ? isCharArray(it) : false;
  }
  function PrimitiveClasses$byteArrayClass$lambda(it) {
    return !(it == null) ? isByteArray(it) : false;
  }
  function PrimitiveClasses$shortArrayClass$lambda(it) {
    return !(it == null) ? isShortArray(it) : false;
  }
  function PrimitiveClasses$intArrayClass$lambda(it) {
    return !(it == null) ? isIntArray(it) : false;
  }
  function PrimitiveClasses$longArrayClass$lambda(it) {
    return !(it == null) ? isLongArray(it) : false;
  }
  function PrimitiveClasses$floatArrayClass$lambda(it) {
    return !(it == null) ? isFloatArray(it) : false;
  }
  function PrimitiveClasses$doubleArrayClass$lambda(it) {
    return !(it == null) ? isDoubleArray(it) : false;
  }
  function PrimitiveClasses$functionClass$lambda($arity) {
    return function (it) {
      var tmp;
      if (typeof it === 'function') {
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = it;
        tmp = tmp$ret$0.length === $arity;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function PrimitiveClasses() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = Object;
    tmp$ret$0 = tmp0_unsafeCast;
    var tmp_0 = tmp$ret$0;
    tmp.anyClass = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda);
    var tmp_1 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_0 = Number;
    tmp$ret$1 = tmp0_unsafeCast_0;
    var tmp_2 = tmp$ret$1;
    tmp_1.numberClass = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda);
    this.nothingClass = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_1 = Boolean;
    tmp$ret$2 = tmp0_unsafeCast_1;
    var tmp_4 = tmp$ret$2;
    tmp_3.booleanClass = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda);
    var tmp_5 = this;
    var tmp$ret$3;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_2 = Number;
    tmp$ret$3 = tmp0_unsafeCast_2;
    var tmp_6 = tmp$ret$3;
    tmp_5.byteClass = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda);
    var tmp_7 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_3 = Number;
    tmp$ret$4 = tmp0_unsafeCast_3;
    var tmp_8 = tmp$ret$4;
    tmp_7.shortClass = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda);
    var tmp_9 = this;
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_4 = Number;
    tmp$ret$5 = tmp0_unsafeCast_4;
    var tmp_10 = tmp$ret$5;
    tmp_9.intClass = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda);
    var tmp_11 = this;
    var tmp$ret$6;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_5 = Number;
    tmp$ret$6 = tmp0_unsafeCast_5;
    var tmp_12 = tmp$ret$6;
    tmp_11.floatClass = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda);
    var tmp_13 = this;
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_6 = Number;
    tmp$ret$7 = tmp0_unsafeCast_6;
    var tmp_14 = tmp$ret$7;
    tmp_13.doubleClass = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda);
    var tmp_15 = this;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_7 = Array;
    tmp$ret$8 = tmp0_unsafeCast_7;
    var tmp_16 = tmp$ret$8;
    tmp_15.arrayClass = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda);
    var tmp_17 = this;
    var tmp$ret$9;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_8 = String;
    tmp$ret$9 = tmp0_unsafeCast_8;
    var tmp_18 = tmp$ret$9;
    tmp_17.stringClass = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda);
    var tmp_19 = this;
    var tmp$ret$10;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_9 = Error;
    tmp$ret$10 = tmp0_unsafeCast_9;
    var tmp_20 = tmp$ret$10;
    tmp_19.throwableClass = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda);
    var tmp_21 = this;
    var tmp$ret$11;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_10 = Array;
    tmp$ret$11 = tmp0_unsafeCast_10;
    var tmp_22 = tmp$ret$11;
    tmp_21.booleanArrayClass = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda);
    var tmp_23 = this;
    var tmp$ret$12;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_11 = Uint16Array;
    tmp$ret$12 = tmp0_unsafeCast_11;
    var tmp_24 = tmp$ret$12;
    tmp_23.charArrayClass = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda);
    var tmp_25 = this;
    var tmp$ret$13;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_12 = Int8Array;
    tmp$ret$13 = tmp0_unsafeCast_12;
    var tmp_26 = tmp$ret$13;
    tmp_25.byteArrayClass = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda);
    var tmp_27 = this;
    var tmp$ret$14;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_13 = Int16Array;
    tmp$ret$14 = tmp0_unsafeCast_13;
    var tmp_28 = tmp$ret$14;
    tmp_27.shortArrayClass = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda);
    var tmp_29 = this;
    var tmp$ret$15;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_14 = Int32Array;
    tmp$ret$15 = tmp0_unsafeCast_14;
    var tmp_30 = tmp$ret$15;
    tmp_29.intArrayClass = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda);
    var tmp_31 = this;
    var tmp$ret$16;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_15 = Array;
    tmp$ret$16 = tmp0_unsafeCast_15;
    var tmp_32 = tmp$ret$16;
    tmp_31.longArrayClass = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda);
    var tmp_33 = this;
    var tmp$ret$17;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_16 = Float32Array;
    tmp$ret$17 = tmp0_unsafeCast_16;
    var tmp_34 = tmp$ret$17;
    tmp_33.floatArrayClass = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda);
    var tmp_35 = this;
    var tmp$ret$18;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_17 = Float64Array;
    tmp$ret$18 = tmp0_unsafeCast_17;
    var tmp_36 = tmp$ret$18;
    tmp_35.doubleArrayClass = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda);
  }
  PrimitiveClasses.prototype.m9 = function () {
    return this.anyClass;
  };
  PrimitiveClasses.prototype.n9 = function () {
    return this.numberClass;
  };
  PrimitiveClasses.prototype.o9 = function () {
    return this.nothingClass;
  };
  PrimitiveClasses.prototype.p9 = function () {
    return this.booleanClass;
  };
  PrimitiveClasses.prototype.q9 = function () {
    return this.byteClass;
  };
  PrimitiveClasses.prototype.r9 = function () {
    return this.shortClass;
  };
  PrimitiveClasses.prototype.s9 = function () {
    return this.intClass;
  };
  PrimitiveClasses.prototype.t9 = function () {
    return this.floatClass;
  };
  PrimitiveClasses.prototype.u9 = function () {
    return this.doubleClass;
  };
  PrimitiveClasses.prototype.v9 = function () {
    return this.arrayClass;
  };
  PrimitiveClasses.prototype.w9 = function () {
    return this.stringClass;
  };
  PrimitiveClasses.prototype.x9 = function () {
    return this.throwableClass;
  };
  PrimitiveClasses.prototype.y9 = function () {
    return this.booleanArrayClass;
  };
  PrimitiveClasses.prototype.z9 = function () {
    return this.charArrayClass;
  };
  PrimitiveClasses.prototype.aa = function () {
    return this.byteArrayClass;
  };
  PrimitiveClasses.prototype.ba = function () {
    return this.shortArrayClass;
  };
  PrimitiveClasses.prototype.ca = function () {
    return this.intArrayClass;
  };
  PrimitiveClasses.prototype.da = function () {
    return this.longArrayClass;
  };
  PrimitiveClasses.prototype.ea = function () {
    return this.floatArrayClass;
  };
  PrimitiveClasses.prototype.fa = function () {
    return this.doubleArrayClass;
  };
  PrimitiveClasses.prototype.functionClass = function (arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$3;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'kotlin.reflect.js.internal.PrimitiveClasses.functionClass.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = Function;
      tmp$ret$0 = tmp0_unsafeCast;
      var tmp_0 = tmp$ret$0;
      var tmp_1 = 'Function' + arity;
      var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp1_asDynamic = get_functionClasses();
      tmp$ret$1 = tmp1_asDynamic;
      tmp$ret$1[arity] = result;
      tmp$ret$2 = result;
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses();
    return PrimitiveClasses_instance;
  }
  var properties_initialized_primitives_kt_jle18u;
  function init_properties_primitives_kt_rm1w5q() {
    if (properties_initialized_primitives_kt_jle18u) {
    } else {
      properties_initialized_primitives_kt_jle18u = true;
      var tmp$ret$0;
      // Inline function 'kotlin.arrayOfNulls' call
      tmp$ret$0 = fillArrayVal(Array(0), null);
      functionClasses = tmp$ret$0;
    }
  }
  function getKClass(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = jClass;
      tmp$ret$1 = tmp$ret$0;
      tmp = getKClassM(tmp$ret$1);
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = jClass;
      tmp$ret$3 = tmp$ret$2;
      tmp = getKClass1(tmp$ret$3);
    }
    return tmp;
  }
  function getKClassM(jClasses) {
    var tmp0_subject = jClasses.length;
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = getKClass1(jClasses[0]);
        break;
      case 0:
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = NothingKClassImpl_getInstance();
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = tmp0_unsafeCast;
        tmp$ret$1 = tmp$ret$0;

        tmp = tmp$ret$1;
        break;
      default:
        var tmp$ret$3;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = new ErrorKClass();
        var tmp$ret$2;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$2 = tmp1_unsafeCast;
        tmp$ret$3 = tmp$ret$2;

        tmp = tmp$ret$3;
        break;
    }
    return tmp;
  }
  function getKClass1(jClass) {
    if (jClass === String) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = PrimitiveClasses_getInstance().stringClass;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    }
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = jClass;
    var metadata = tmp$ret$2.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression(e) {
    var tmp$ret$3;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_subject = typeof e;
    var tmp;
    switch (tmp0_subject) {
      case 'string':
        tmp = PrimitiveClasses_getInstance().stringClass;
        break;
      case 'number':
        var tmp_0;
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        var tmp0_asDynamic = jsBitwiseOr(e, 0);
        tmp$ret$0 = tmp0_asDynamic;

        if (tmp$ret$0 === e) {
          tmp_0 = PrimitiveClasses_getInstance().intClass;
        } else {
          tmp_0 = PrimitiveClasses_getInstance().doubleClass;
        }

        tmp = tmp_0;
        break;
      case 'boolean':
        tmp = PrimitiveClasses_getInstance().booleanClass;
        break;
      case 'function':
        var tmp_1 = PrimitiveClasses_getInstance();
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = e;

        tmp = tmp_1.functionClass(tmp$ret$1.length);
        break;
      default:
        var tmp_2;
        if (isBooleanArray(e)) {
          tmp_2 = PrimitiveClasses_getInstance().booleanArrayClass;
        } else {
          if (isCharArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().charArrayClass;
          } else {
            if (isByteArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().byteArrayClass;
            } else {
              if (isShortArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().shortArrayClass;
              } else {
                if (isIntArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().intArrayClass;
                } else {
                  if (isLongArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().longArrayClass;
                  } else {
                    if (isFloatArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().floatArrayClass;
                    } else {
                      if (isDoubleArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance().doubleArrayClass;
                      } else {
                        if (isInterface(e, KClass)) {
                          tmp_2 = getKClass(KClass);
                        } else {
                          if (isArray(e)) {
                            tmp_2 = PrimitiveClasses_getInstance().arrayClass;
                          } else {
                            var constructor = Object.getPrototypeOf(e).constructor;
                            var tmp_3;
                            if (constructor === Object) {
                              tmp_3 = PrimitiveClasses_getInstance().anyClass;
                            } else if (constructor === Error) {
                              tmp_3 = PrimitiveClasses_getInstance().throwableClass;
                            } else {
                              var jsClass = constructor;
                              tmp_3 = getKClass1(jsClass);
                            }
                            tmp_2 = tmp_3;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        tmp = tmp_2;
        break;
    }
    var tmp1_unsafeCast = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = tmp1_unsafeCast;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  }
  function StringBuilder_init_$Init$(content, $this) {
    StringBuilder.call($this, toString_3(content));
    return $this;
  }
  function StringBuilder_init_$Create$(content) {
    return StringBuilder_init_$Init$(content, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_0($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_0() {
    return StringBuilder_init_$Init$_0(Object.create(StringBuilder.prototype));
  }
  function StringBuilder(content) {
    this.p_1 = !(content === undefined) ? content : '';
  }
  StringBuilder.prototype.z5 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = this.p_1;
    tmp$ret$0 = tmp0_asDynamic;
    return tmp$ret$0.length;
  };
  StringBuilder.prototype.a6 = function (index) {
    var tmp$ret$0;
    // Inline function 'kotlin.text.getOrElse' call
    var tmp0_getOrElse = this.p_1;
    var tmp;
    if (index >= 0 ? index <= get_lastIndex_1(tmp0_getOrElse) : false) {
      tmp = charSequenceGet(tmp0_getOrElse, index);
    } else {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', length: ' + this.z5() + '}');
    }
    tmp$ret$0 = tmp;
    return tmp$ret$0;
  };
  StringBuilder.prototype.b6 = function (startIndex, endIndex) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = this.p_1;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_substring;
    tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    return tmp$ret$1;
  };
  StringBuilder.prototype.u3 = function (value) {
    var tmp0_this = this;
    tmp0_this.p_1 = tmp0_this.p_1 + new Char(value);
    return this;
  };
  StringBuilder.prototype.a = function (value) {
    var tmp0_this = this;
    tmp0_this.p_1 = tmp0_this.p_1 + toString_2(value);
    return this;
  };
  StringBuilder.prototype.q = function () {
    var reversed = '';
    var index = this.p_1.length - 1 | 0;
    while (index >= 0) {
      var tmp = this.p_1;
      var tmp0 = index;
      index = tmp0 - 1 | 0;
      var low = charSequenceGet(tmp, tmp0);
      if (isLowSurrogate(low) ? index >= 0 : false) {
        var tmp_0 = this.p_1;
        var tmp1 = index;
        index = tmp1 - 1 | 0;
        var high = charSequenceGet(tmp_0, tmp1);
        if (isHighSurrogate(high)) {
          reversed = reversed + new Char(high) + new Char(low);
        } else {
          reversed = reversed + new Char(low) + new Char(high);
        }
      } else {
        reversed = reversed + new Char(low);
      }
    }
    this.p_1 = reversed;
    return this;
  };
  StringBuilder.prototype.ga = function (value) {
    var tmp0_this = this;
    tmp0_this.p_1 = tmp0_this.p_1 + toString_2(value);
    return this;
  };
  StringBuilder.prototype.ha = function (value) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.p_1;
    var tmp1_elvis_lhs = value;
    tmp.p_1 = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
    return this;
  };
  StringBuilder.prototype.toString = function () {
    return this.p_1;
  };
  function uppercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    // Inline function 'kotlin.text.uppercase' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = toString_1(_this__u8e3s4);
    tmp$ret$0 = tmp0_asDynamic;
    var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
    tmp$ret$1 = tmp1_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    var uppercase = tmp$ret$2;
    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
  }
  function isLowSurrogate(_this__u8e3s4) {
    Companion_getInstance_7();
    var containsLower = _Char___init__impl__6a9atx(56320);
    var tmp;
    Companion_getInstance_7();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(57343)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isHighSurrogate(_this__u8e3s4) {
    Companion_getInstance_7();
    var containsLower = _Char___init__impl__6a9atx(55296);
    var tmp;
    Companion_getInstance_7();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(56319)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isWhitespace(_this__u8e3s4) {
    return isWhitespaceImpl(_this__u8e3s4);
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$('radix ' + radix + ' was not in valid range 2..36');
    }
    return radix;
  }
  function toLong(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function digitOf(char, radix) {
    var tmp$ret$1;
    // Inline function 'kotlin.let' call
    var tmp0_let = (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.digitOf.<anonymous>' call
    tmp$ret$0 = tmp0_let >= radix ? -1 : tmp0_let;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function isBlank(_this__u8e3s4) {
    var tmp;
    if (charSequenceLength(_this__u8e3s4) === 0) {
      tmp = true;
    } else {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = get_indices_0(_this__u8e3s4);
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.k();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.m3_1;
        var last = tmp0_all.n3_1;
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.text.isBlank.<anonymous>' call
            tmp$ret$1 = isWhitespace(charSequenceGet(_this__u8e3s4, element));
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function _Char___init__impl__6a9atx(value) {
    return value;
  }
  function _get_value__a43j40($this) {
    return $this;
  }
  function _Char___init__impl__6a9atx_0(code) {
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
    var tmp = _Char___init__impl__6a9atx(tmp$ret$0);
    return tmp;
  }
  function Char__compareTo_impl_ypi4mb($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__compareTo_impl_ypi4mb_0($this, other) {
    var tmp = $this.t3_1;
    return Char__compareTo_impl_ypi4mb(tmp, other instanceof Char ? other.t3_1 : THROW_CCE());
  }
  function Char__minus_impl_a2frrh($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__minus_impl_a2frrh_0($this, other) {
    return numberToChar(_get_value__a43j40($this) - other | 0);
  }
  function Char__toInt_impl_vasixd($this) {
    return _get_value__a43j40($this);
  }
  function Char__equals_impl_x6719k($this, other) {
    if (!(other instanceof Char))
      return false;
    return _get_value__a43j40($this) === _get_value__a43j40(other.t3_1);
  }
  function Char__hashCode_impl_otmys($this) {
    return _get_value__a43j40($this);
  }
  function toString_1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = String.fromCharCode(_get_value__a43j40($this));
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.ia_1 = _Char___init__impl__6a9atx(0);
    this.ja_1 = _Char___init__impl__6a9atx(65535);
    this.ka_1 = _Char___init__impl__6a9atx(55296);
    this.la_1 = _Char___init__impl__6a9atx(56319);
    this.ma_1 = _Char___init__impl__6a9atx(56320);
    this.na_1 = _Char___init__impl__6a9atx(57343);
    this.oa_1 = _Char___init__impl__6a9atx(55296);
    this.pa_1 = _Char___init__impl__6a9atx(57343);
    this.qa_1 = 2;
    this.ra_1 = 16;
  }
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function Char(value) {
    Companion_getInstance_7();
    this.t3_1 = value;
  }
  Char.prototype.sa = function (other) {
    return Char__compareTo_impl_ypi4mb(this.t3_1, other);
  };
  Char.prototype.e5 = function (other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  };
  Char.prototype.equals = function (other) {
    return Char__equals_impl_x6719k(this.t3_1, other);
  };
  Char.prototype.hashCode = function () {
    return Char__hashCode_impl_otmys(this.t3_1);
  };
  Char.prototype.toString = function () {
    return toString_1(this.t3_1);
  };
  function List() {
  }
  function Set() {
  }
  function Entry() {
  }
  function Map() {
  }
  function MutableEntry() {
  }
  function Collection() {
  }
  function Companion_8() {
    Companion_instance_8 = this;
  }
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_8();
    this.j3_1 = name;
    this.k3_1 = ordinal;
  }
  Enum.prototype.ta = function () {
    return this.j3_1;
  };
  Enum.prototype.ua = function () {
    return this.k3_1;
  };
  Enum.prototype.l3 = function (other) {
    return compareTo(this.k3_1, other.k3_1);
  };
  Enum.prototype.e5 = function (other) {
    return this.l3(other instanceof Enum ? other : THROW_CCE());
  };
  Enum.prototype.equals = function (other) {
    return this === other;
  };
  Enum.prototype.hashCode = function () {
    return identityHashCode(this);
  };
  Enum.prototype.toString = function () {
    return this.j3_1;
  };
  function toString_2(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_3(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function implement(interfaces) {
    var maxSize = 1;
    var masks = [];
    var indexedObject = interfaces;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var i = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var currentSize = maxSize;
      var tmp1_elvis_lhs = i.prototype.$imask$;
      var imask = tmp1_elvis_lhs == null ? i.$imask$ : tmp1_elvis_lhs;
      if (!(imask == null)) {
        masks.push(imask);
        currentSize = imask.va_1.length;
      }
      var iid = i.$metadata$.iid;
      var tmp2_safe_receiver = iid;
      var tmp;
      if (tmp2_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$4;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$3;
        // Inline function 'kotlin.js.implement.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.arrayOf' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = [tmp2_safe_receiver];
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = new BitMask(tmp$ret$2);
        tmp$ret$4 = tmp$ret$3;
        tmp = tmp$ret$4;
      }
      var iidImask = tmp;
      if (!(iidImask == null)) {
        masks.push(iidImask);
        currentSize = Math.max(currentSize, iidImask.va_1.length);
      }
      if (currentSize > maxSize) {
        maxSize = currentSize;
      }
    }
    var tmp_0 = 0;
    var tmp_1 = maxSize;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$5;
      // Inline function 'kotlin.js.implement.<anonymous>' call
      tmp$ret$5 = masks.reduce(implement$lambda(tmp_3), 0);
      tmp_2[tmp_3] = tmp$ret$5;
      tmp_0 = tmp_0 + 1 | 0;
    }
    var resultIntArray = tmp_2;
    var tmp$ret$6;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$6 = [];
    var result = new BitMask(tmp$ret$6);
    result.va_1 = resultIntArray;
    return result;
  }
  function BitMask(activeBits) {
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.BitMask.intArray.<anonymous>' call
    var tmp_0;
    if (activeBits.length === 0) {
      tmp_0 = new Int32Array(0);
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = Math;
      tmp$ret$0 = tmp0_asDynamic;
      var max = tmp$ret$0.max.apply(null, activeBits);
      var intArray = new Int32Array((max >> 5) + 1 | 0);
      var indexedObject = activeBits;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var activeBit = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var numberIndex = activeBit >> 5;
        var positionInNumber = activeBit & 31;
        var numberWithSettledBit = 1 << positionInNumber;
        intArray[numberIndex] = intArray[numberIndex] | numberWithSettledBit;
      }
      tmp_0 = intArray;
    }
    tmp$ret$1 = tmp_0;
    tmp$ret$2 = tmp$ret$1;
    tmp.va_1 = tmp$ret$2;
  }
  BitMask.prototype.wa = function (possibleActiveBit) {
    var numberIndex = possibleActiveBit >> 5;
    if (numberIndex > this.va_1.length)
      return false;
    var positionInNumber = possibleActiveBit & 31;
    var numberWithSettledBit = 1 << positionInNumber;
    return !((this.va_1[numberIndex] & numberWithSettledBit) === 0);
  };
  function implement$lambda($tmp) {
    return function (acc, it) {
      return $tmp >= it.va_1.length ? acc : acc | it.va_1[$tmp];
    };
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last = array.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last));
    return array;
  }
  function arrayIterator(array) {
    return new arrayIterator$1(array);
  }
  function booleanArray(size) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = fillArrayVal(Array(size), false);
    tmp0_withType.$type$ = 'BooleanArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function longArray(size) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = fillArrayVal(Array(size), new Long(0, 0));
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function charArrayOf(arr) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = new Uint16Array(arr);
    tmp0_withType.$type$ = 'CharArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function longArrayOf(arr) {
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = arr;
    var tmp0_withType = tmp$ret$0.slice();
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$1;
    tmp$ret$2 = tmp1_unsafeCast;
    return tmp$ret$2;
  }
  function arrayIterator$1($array) {
    this.ya_1 = $array;
    this.xa_1 = 0;
  }
  arrayIterator$1.prototype.i = function () {
    return !(this.xa_1 === this.ya_1.length);
  };
  arrayIterator$1.prototype.j = function () {
    var tmp;
    if (!(this.xa_1 === this.ya_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.xa_1;
      tmp0_this.xa_1 = tmp1 + 1 | 0;
      tmp = this.ya_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.xa_1);
    }
    return tmp;
  };
  function get_buf() {
    init_properties_bitUtils_kt_cxtw9i();
    return buf;
  }
  var buf;
  function get_bufFloat64() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufFloat64;
  }
  var bufFloat64;
  var bufFloat32;
  function get_bufInt32() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufInt32;
  }
  var bufInt32;
  function get_lowIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return lowIndex;
  }
  var lowIndex;
  function get_highIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return highIndex;
  }
  var highIndex;
  function getNumberHashCode(obj) {
    init_properties_bitUtils_kt_cxtw9i();
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = jsBitwiseOr(obj, 0);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    if (tmp$ret$1 === obj) {
      return numberToInt(obj);
    }
    get_bufFloat64()[0] = obj;
    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
  }
  var properties_initialized_bitUtils_kt_i2bo3e;
  function init_properties_bitUtils_kt_cxtw9i() {
    if (properties_initialized_bitUtils_kt_i2bo3e) {
    } else {
      properties_initialized_bitUtils_kt_i2bo3e = true;
      buf = new ArrayBuffer(8);
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = new Float64Array(get_buf());
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      bufFloat64 = tmp$ret$1;
      var tmp$ret$1_0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast_0 = new Float32Array(get_buf());
      var tmp$ret$0_0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_0 = tmp0_unsafeCast_0;
      tmp$ret$1_0 = tmp$ret$0_0;
      bufFloat32 = tmp$ret$1_0;
      var tmp$ret$1_1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast_1 = new Int32Array(get_buf());
      var tmp$ret$0_1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_1 = tmp0_unsafeCast_1;
      tmp$ret$1_1 = tmp$ret$0_1;
      bufInt32 = tmp$ret$1_1;
      var tmp$ret$1_2;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0_2;
      // Inline function 'kotlin.js.lowIndex.<anonymous>' call
      get_bufFloat64()[0] = -1.0;
      tmp$ret$0_2 = !(get_bufInt32()[0] === 0) ? 1 : 0;
      tmp$ret$1_2 = tmp$ret$0_2;
      lowIndex = tmp$ret$1_2;
      highIndex = 1 - get_lowIndex() | 0;
    }
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$4;
      // Inline function 'kotlin.Char' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = a;
      var tmp0_unsafeCast = tmp$ret$0.charCodeAt(index);
      tmp$ret$1 = tmp0_unsafeCast;
      var tmp1_Char = tmp$ret$1;
      var tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.code' call
      Companion_getInstance_7();
      var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
      tmp$ret$2 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      if (tmp1_Char < tmp$ret$2) {
        tmp_0 = true;
      } else {
        var tmp$ret$3;
        // Inline function 'kotlin.code' call
        Companion_getInstance_7();
        var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
        tmp$ret$3 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
        tmp_0 = tmp1_Char > tmp$ret$3;
      }
      if (tmp_0) {
        throw IllegalArgumentException_init_$Create$('Invalid Char code: ' + tmp1_Char);
      }
      tmp$ret$4 = numberToChar(tmp1_Char);
      tmp = tmp$ret$4;
    } else {
      tmp = a.a6(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = a;
      var tmp0_unsafeCast = tmp$ret$0.length;
      tmp$ret$1 = tmp0_unsafeCast;
      tmp = tmp$ret$1;
    } else {
      tmp = a.z5();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = a;
      var tmp0_unsafeCast = tmp$ret$0.substring(startIndex, endIndex);
      tmp$ret$1 = tmp0_unsafeCast;
      tmp = tmp$ret$1;
    } else {
      tmp = a.b6(startIndex, endIndex);
    }
    return tmp;
  }
  function arrayToString(array) {
    return joinToString$default(array, ', ', '[', ']', 0, null, arrayToString$lambda, 24, null);
  }
  function contentEqualsInternal(_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var a = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = other;
    var b = tmp$ret$1;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_0(a[i], b[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function contentHashCodeInternal(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var a = tmp$ret$0;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode(a[i]) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function arrayToString$lambda(it) {
    return toString_3(it);
  }
  function compareTo(a, b) {
    var tmp0_subject = typeof a;
    var tmp;
    switch (tmp0_subject) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.za());
          } else {
            tmp_0 = primitiveCompareTo(a, b);
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:
        tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 1;
        var ia = tmp$ret$0 / a;
        var tmp_1;
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = 1;
        if (ia === tmp$ret$1 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            tmp_1 = 1;
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.e5(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    if (!jsIn('kotlinHashCodeValue$', obj)) {
      var hash = jsBitwiseOr(Math.random() * 4.294967296E9, 0);
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = obj['kotlinHashCodeValue$'];
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function toString_3(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = o.toString();
      tmp$ret$0 = tmp0_unsafeCast;
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function equals_0(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }
    if (obj2 == null) {
      return false;
    }
    if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }
    if (obj1 !== obj1) {
      return obj2 !== obj2;
    }
    if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$0 = 1;
          var tmp_1 = tmp$ret$0 / obj1;
          var tmp$ret$1;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$1 = 1;
          tmp_0 = tmp_1 === tmp$ret$1 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }
    return obj1 === obj2;
  }
  function hashCode(obj) {
    if (obj == null)
      return 0;
    var tmp0_subject = typeof obj;
    var tmp;
    switch (tmp0_subject) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        var tmp$ret$0;
        // Inline function 'kotlin.js.unsafeCast' call
        tmp$ret$0 = obj;

        if (tmp$ret$0) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = getStringHashCode(String(obj));
        break;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last = length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = str;
        var code = tmp$ret$0.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last));
    return hash;
  }
  function anyToString(o) {
    return Object.prototype.toString.call(o);
  }
  function boxIntrinsic(x) {
    throw IllegalStateException_init_$Create$_0('Should be lowered');
  }
  function unboxIntrinsic(x) {
    throw IllegalStateException_init_$Create$_0('Should be lowered');
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = instance;
      tmp$ret$0.stack = (new Error()).stack;
    }
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    if (!hasOwnPrototypeProperty(this_, 'message')) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp0_safe_receiver = cause;
          var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
          tmp_0 = tmp1_elvis_lhs == null ? undefined : tmp1_elvis_lhs;
        } else {
          tmp_0 = undefined;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }
    if (!hasOwnPrototypeProperty(this_, 'cause')) {
      this_.cause = cause;
    }
    this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function hasOwnPrototypeProperty(o, name) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = Object.getPrototypeOf(o).hasOwnProperty(name);
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('lateinit property ' + name + ' has not been initialized');
  }
  function THROW_ISE() {
    throw IllegalStateException_init_$Create$();
  }
  function lazy(initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function lazy_0(mode, initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function Companion_9() {
    Companion_instance_9 = this;
    this.ab_1 = new Long(0, -2147483648);
    this.bb_1 = new Long(-1, 2147483647);
    this.cb_1 = 8;
    this.db_1 = 64;
  }
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function Long(low, high) {
    Companion_getInstance_9();
    Number_0.call(this);
    this.v3_1 = low;
    this.w3_1 = high;
  }
  Long.prototype.z3 = function (other) {
    return compare(this, other);
  };
  Long.prototype.e5 = function (other) {
    return this.z3(other instanceof Long ? other : THROW_CCE());
  };
  Long.prototype.b4 = function (other) {
    return add(this, other);
  };
  Long.prototype.c4 = function (other) {
    return subtract(this, other);
  };
  Long.prototype.a4 = function (other) {
    return multiply(this, other);
  };
  Long.prototype.y3 = function (other) {
    return divide(this, other);
  };
  Long.prototype.v5 = function (other) {
    return modulo(this, other);
  };
  Long.prototype.eb = function () {
    return this.b4(new Long(1, 0));
  };
  Long.prototype.fb = function () {
    return this.c4(new Long(1, 0));
  };
  Long.prototype.x3 = function () {
    return this.gb().b4(new Long(1, 0));
  };
  Long.prototype.y5 = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  Long.prototype.x5 = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  Long.prototype.c5 = function (other) {
    return new Long(this.v3_1 & other.v3_1, this.w3_1 & other.w3_1);
  };
  Long.prototype.hb = function (other) {
    return new Long(this.v3_1 | other.v3_1, this.w3_1 | other.w3_1);
  };
  Long.prototype.w5 = function (other) {
    return new Long(this.v3_1 ^ other.v3_1, this.w3_1 ^ other.w3_1);
  };
  Long.prototype.gb = function () {
    return new Long(~this.v3_1, ~this.w3_1);
  };
  Long.prototype.u5 = function () {
    return this.v3_1;
  };
  Long.prototype.za = function () {
    return toNumber(this);
  };
  Long.prototype.valueOf = function () {
    return this.za();
  };
  Long.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Long.prototype.hashCode = function () {
    return hashCode_0(this);
  };
  Long.prototype.toString = function () {
    return toStringImpl(this, 10);
  };
  function get_ZERO() {
    init_properties_longjs_kt_ttk8rv();
    return ZERO;
  }
  var ZERO;
  function get_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return ONE;
  }
  var ONE;
  function get_NEG_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return NEG_ONE;
  }
  var NEG_ONE;
  function get_MAX_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MAX_VALUE;
  }
  var MAX_VALUE;
  function get_MIN_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MIN_VALUE;
  }
  var MIN_VALUE;
  function get_TWO_PWR_24_() {
    init_properties_longjs_kt_ttk8rv();
    return TWO_PWR_24_;
  }
  var TWO_PWR_24_;
  function compare(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (equalsLong(_this__u8e3s4, other)) {
      return 0;
    }
    var thisNeg = isNegative(_this__u8e3s4);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
  }
  function add(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    var a48 = _this__u8e3s4.w3_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.w3_1 & 65535;
    var a16 = _this__u8e3s4.v3_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.v3_1 & 65535;
    var b48 = other.w3_1 >>> 16 | 0;
    var b32 = other.w3_1 & 65535;
    var b16 = other.v3_1 >>> 16 | 0;
    var b00 = other.v3_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return add(_this__u8e3s4, other.x3());
  }
  function multiply(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    } else if (isZero(other)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this__u8e3s4), negate(other));
      } else {
        tmp = negate(multiply(negate(_this__u8e3s4), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this__u8e3s4, negate(other)));
    }
    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) ? lessThan(other, get_TWO_PWR_24_()) : false) {
      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
    }
    var a48 = _this__u8e3s4.w3_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.w3_1 & 65535;
    var a16 = _this__u8e3s4.v3_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.v3_1 & 65535;
    var b48 = other.w3_1 >>> 16 | 0;
    var b32 = other.w3_1 & 65535;
    var b16 = other.v3_1 >>> 16 | 0;
    var b00 = other.v3_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      if (equalsLong(other, get_ONE()) ? true : equalsLong(other, get_NEG_ONE())) {
        return get_MIN_VALUE();
      } else if (equalsLong(other, get_MIN_VALUE())) {
        return get_ONE();
      } else {
        var halfThis = shiftRight(_this__u8e3s4, 1);
        var approx = shiftLeft(halfThis.y3(other), 1);
        if (equalsLong(approx, get_ZERO())) {
          return isNegative(other) ? get_ONE() : get_NEG_ONE();
        } else {
          var rem = subtract(_this__u8e3s4, multiply(other, approx));
          return add(approx, rem.y3(other));
        }
      }
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this__u8e3s4).y3(negate(other));
      } else {
        tmp = negate(negate(_this__u8e3s4).y3(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this__u8e3s4.y3(negate(other)));
    }
    var res = get_ZERO();
    var rem_0 = _this__u8e3s4;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = Math.max(1.0, Math.floor(approxDouble));
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = get_ONE();
      }
      res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function modulo(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return subtract(_this__u8e3s4, multiply(_this__u8e3s4.y3(other), other));
  }
  function shiftLeft(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.v3_1 << numBits_0, _this__u8e3s4.w3_1 << numBits_0 | (_this__u8e3s4.v3_1 >>> (32 - numBits_0 | 0) | 0));
      } else {
        return new Long(0, _this__u8e3s4.v3_1 << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.v3_1 >>> numBits_0 | 0 | _this__u8e3s4.w3_1 << (32 - numBits_0 | 0), _this__u8e3s4.w3_1 >> numBits_0);
      } else {
        return new Long(_this__u8e3s4.w3_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.w3_1 >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.v3_1 >>> numBits_0 | 0 | _this__u8e3s4.w3_1 << (32 - numBits_0 | 0), _this__u8e3s4.w3_1 >>> numBits_0 | 0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this__u8e3s4.w3_1, 0);
        } else {
          tmp = new Long(_this__u8e3s4.w3_1 >>> (numBits_0 - 32 | 0) | 0, 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.w3_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
  }
  function equalsLong(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.w3_1 === other.w3_1 ? _this__u8e3s4.v3_1 === other.v3_1 : false;
  }
  function hashCode_0(l) {
    init_properties_longjs_kt_ttk8rv();
    return l.v3_1 ^ l.w3_1;
  }
  function toStringImpl(_this__u8e3s4, radix) {
    init_properties_longjs_kt_ttk8rv();
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('radix out of range: ' + radix);
    }
    if (isZero(_this__u8e3s4)) {
      return '0';
    }
    if (isNegative(_this__u8e3s4)) {
      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
        var radixLong = fromInt(radix);
        var div = _this__u8e3s4.y3(radixLong);
        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).u5();
        var tmp = toStringImpl(div, radix);
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = rem;
        var tmp0_unsafeCast = tmp$ret$0.toString(radix);
        tmp$ret$1 = tmp0_unsafeCast;
        return tmp + tmp$ret$1;
      } else {
        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
      }
    }
    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
    var rem_0 = _this__u8e3s4;
    var result = '';
    while (true) {
      var remDiv = rem_0.y3(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).u5();
      var tmp$ret$3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = intval;
      var tmp1_unsafeCast = tmp$ret$2.toString(radix);
      tmp$ret$3 = tmp1_unsafeCast;
      var digits = tmp$ret$3;
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits + result;
      } else {
        while (digits.length < digitsPerTime) {
          digits = '0' + digits;
        }
        result = digits + result;
      }
    }
  }
  function fromInt(value) {
    init_properties_longjs_kt_ttk8rv();
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.w3_1 < 0;
  }
  function isZero(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.w3_1 === 0 ? _this__u8e3s4.v3_1 === 0 : false;
  }
  function isOdd(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return (_this__u8e3s4.v3_1 & 1) === 1;
  }
  function negate(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.x3();
  }
  function lessThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) < 0;
  }
  function fromNumber(value) {
    init_properties_longjs_kt_ttk8rv();
    if (isNaN_0(value)) {
      return get_ZERO();
    } else if (value <= -9.223372036854776E18) {
      return get_MIN_VALUE();
    } else if (value + 1 >= 9.223372036854776E18) {
      return get_MAX_VALUE();
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      return new Long(jsBitwiseOr(value % twoPwr32, 0), jsBitwiseOr(value / twoPwr32, 0));
    }
  }
  function greaterThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) > 0;
  }
  function greaterThanOrEqual(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) >= 0;
  }
  function getLowBitsUnsigned(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.v3_1 >= 0 ? _this__u8e3s4.v3_1 : 4.294967296E9 + _this__u8e3s4.v3_1;
  }
  var properties_initialized_longjs_kt_5aju7t;
  function init_properties_longjs_kt_ttk8rv() {
    if (properties_initialized_longjs_kt_5aju7t) {
    } else {
      properties_initialized_longjs_kt_5aju7t = true;
      ZERO = fromInt(0);
      ONE = fromInt(1);
      NEG_ONE = fromInt(-1);
      MAX_VALUE = new Long(-1, 2147483647);
      MIN_VALUE = new Long(0, -2147483648);
      TWO_PWR_24_ = fromInt(16777216);
    }
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.u5();
    } else {
      tmp = doubleToInt(a);
    }
    return tmp;
  }
  function doubleToInt(a) {
    return a > 2.147483647E9 ? 2147483647 : a < -2.147483648E9 ? -2147483648 : jsBitwiseOr(a, 0);
  }
  function numberToDouble(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = +a;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function toShort(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = a << 16 >> 16;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      tmp = fromNumber(a);
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = numberToInt(a);
    tmp$ret$0 = _UShort___init__impl__jigrne(toShort(tmp0_toUShort));
    return _Char___init__impl__6a9atx_0(tmp$ret$0);
  }
  function toLong_0(a) {
    return fromInt(a);
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  function get_propertyRefClassMetadataCache() {
    init_properties_reflectRuntime_kt_yf9l8h();
    return propertyRefClassMetadataCache;
  }
  var propertyRefClassMetadataCache;
  function metadataObject() {
    init_properties_reflectRuntime_kt_yf9l8h();
    var undef = undefined;
    return classMeta(undef, undef, undef, undef);
  }
  function getPropertyCallableRef(name, paramCount, superType, getter, setter) {
    init_properties_reflectRuntime_kt_yf9l8h();
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = getPropertyRefClass(getter, getKPropMetadata(paramCount, setter), getInterfaceMaskFor(getter, superType));
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function getPropertyRefClass(obj, metadata, imask) {
    init_properties_reflectRuntime_kt_yf9l8h();
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    obj.$imask$ = imask;
    return obj;
  }
  function getKPropMetadata(paramCount, setter) {
    init_properties_reflectRuntime_kt_yf9l8h();
    return get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
  }
  function getInterfaceMaskFor(obj, superType) {
    init_properties_reflectRuntime_kt_yf9l8h();
    var tmp0_elvis_lhs = obj.$imask$;
    return tmp0_elvis_lhs == null ? implement([superType]) : tmp0_elvis_lhs;
  }
  var properties_initialized_reflectRuntime_kt_inkhwd;
  function init_properties_reflectRuntime_kt_yf9l8h() {
    if (properties_initialized_reflectRuntime_kt_inkhwd) {
    } else {
      properties_initialized_reflectRuntime_kt_inkhwd = true;
      var tmp$ret$11;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf = [metadataObject(), metadataObject()];
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_arrayOf;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      var tmp = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'kotlin.arrayOf' call
      var tmp1_arrayOf = [metadataObject(), metadataObject()];
      var tmp$ret$4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_arrayOf;
      tmp$ret$4 = tmp$ret$3;
      tmp$ret$5 = tmp$ret$4;
      var tmp_0 = tmp$ret$5;
      var tmp$ret$8;
      // Inline function 'kotlin.arrayOf' call
      var tmp2_arrayOf = [metadataObject(), metadataObject()];
      var tmp$ret$7;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$6;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$6 = tmp2_arrayOf;
      tmp$ret$7 = tmp$ret$6;
      tmp$ret$8 = tmp$ret$7;
      var tmp3_arrayOf = [tmp, tmp_0, tmp$ret$8];
      var tmp$ret$10;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$9;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$9 = tmp3_arrayOf;
      tmp$ret$10 = tmp$ret$9;
      tmp$ret$11 = tmp$ret$10;
      propertyRefClassMetadataCache = tmp$ret$11;
    }
  }
  function classMeta(name, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('class', name, associatedObjectKey, associatedObjects, suspendArity, null);
  }
  function createMetadata(kind, name, associatedObjectKey, associatedObjects, suspendArity, iid) {
    return {kind: kind, simpleName: name, associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, $kClass$: undefined, iid: iid};
  }
  function isArrayish(o) {
    return isJsArray(o) ? true : isView(o);
  }
  function isJsArray(obj) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = Array.isArray(obj);
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function setMetadataFor(ctor, name, metadataConstructor, parent, interfaces, associatedObjectKey, associatedObjects, suspendArity) {
    if (!(parent == null)) {
      ctor.prototype = Object.create(parent.prototype);
      ctor.prototype.constructor = ctor;
    }
    var metadata = metadataConstructor(name, associatedObjectKey, associatedObjects, suspendArity);
    ctor.$metadata$ = metadata;
    if (!(interfaces == null)) {
      var receiver = !(metadata.iid == null) ? ctor : ctor.prototype;
      receiver.$imask$ = implement(interfaces.slice());
    }
  }
  function isInterface(obj, iface) {
    var tmp;
    if (obj.$imask$ != null) {
      tmp = isInterfaceImpl(obj, iface.$metadata$.iid);
    } else {
      tmp = verySlowIsInterfaceImpl(obj, iface);
    }
    return tmp;
  }
  function isInterfaceImpl(obj, iface) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = obj.$imask$;
    tmp$ret$0 = tmp0_unsafeCast;
    var tmp0_elvis_lhs = tmp$ret$0;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var mask = tmp;
    return mask.wa(iface);
  }
  function verySlowIsInterfaceImpl(obj, iface) {
    var tmp0_elvis_lhs = searchForMetadata(obj);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var metadata = tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = metadata;
    var interfaces = tmp$ret$0.associatedObjectKey;
    var tmp_0;
    if (interfaces != null) {
      var tmp_1;
      if (interfaces.indexOf(iface) != -1) {
        tmp_1 = true;
      } else {
        tmp_1 = interfaces.some(verySlowIsInterfaceImpl$lambda(iface));
      }
      tmp_0 = tmp_1;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      return true;
    }
    return verySlowIsInterfaceImpl(getPrototypeOf(obj), iface);
  }
  function searchForMetadata(obj) {
    if (obj == null) {
      return null;
    }
    var metadata = obj.$metadata$;
    var currentObject = getPrototypeOf(obj);
    while (metadata == null ? currentObject != null : false) {
      var currentConstructor = currentObject.constructor;
      metadata = currentConstructor.$metadata$;
      currentObject = getPrototypeOf(currentObject);
    }
    return metadata;
  }
  function getPrototypeOf(obj) {
    return Object.getPrototypeOf(obj);
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = obj;
      tmp = !tmp$ret$0.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp0_subject = objTypeOf;
    switch (tmp0_subject) {
      case 'string':
        return true;
      case 'number':
        return true;
      case 'boolean':
        return true;
      case 'function':
        return true;
      default:
        return jsInstanceOf(obj, Object);
    }
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, CharSequence);
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    return jsInstanceOf(a, Int8Array);
  }
  function isShortArray(a) {
    return jsInstanceOf(a, Int16Array);
  }
  function isCharArray(a) {
    return jsInstanceOf(a, Uint16Array) ? a.$type$ === 'CharArray' : false;
  }
  function isIntArray(a) {
    return jsInstanceOf(a, Int32Array);
  }
  function isFloatArray(a) {
    return jsInstanceOf(a, Float32Array);
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    return jsInstanceOf(a, Float64Array);
  }
  function interfaceMeta(name, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('interface', name, associatedObjectKey, associatedObjects, suspendArity, generateInterfaceId(InterfaceIdService_getInstance()));
  }
  function generateInterfaceId(_this__u8e3s4) {
    var tmp0_this = _this__u8e3s4;
    tmp0_this.ib_1 = tmp0_this.ib_1 + 1 | 0;
    return _this__u8e3s4.ib_1;
  }
  function InterfaceIdService() {
    InterfaceIdService_instance = this;
    this.ib_1 = 0;
  }
  var InterfaceIdService_instance;
  function InterfaceIdService_getInstance() {
    if (InterfaceIdService_instance == null)
      new InterfaceIdService();
    return InterfaceIdService_instance;
  }
  function objectMeta(name, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('object', name, associatedObjectKey, associatedObjects, suspendArity, null);
  }
  function verySlowIsInterfaceImpl$lambda($iface) {
    return function (x) {
      return verySlowIsInterfaceImpl(x, $iface);
    };
  }
  function asList(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0;
    return new ArrayList(tmp$ret$1);
  }
  function contentEquals(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function contentEquals_0(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode_0(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function copyOfRange(_this__u8e3s4, fromIndex, toIndex) {
    Companion_getInstance().d1(fromIndex, toIndex, _this__u8e3s4.length);
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_withType = tmp$ret$0.slice(fromIndex, toIndex);
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp0_withType;
    return tmp$ret$1;
  }
  function copyOf(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_withType = tmp$ret$0.slice();
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp0_withType;
    return tmp$ret$1;
  }
  function copyOfRange_0(_this__u8e3s4, fromIndex, toIndex) {
    Companion_getInstance().d1(fromIndex, toIndex, _this__u8e3s4.length);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.slice(fromIndex, toIndex);
  }
  function digitToIntImpl(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.code' call
    tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    var ch = tmp$ret$0;
    var index = binarySearchRange(Digit_getInstance().jb_1, ch);
    var diff = ch - Digit_getInstance().jb_1[index] | 0;
    return diff < 10 ? diff : -1;
  }
  function binarySearchRange(array, needle) {
    var bottom = 0;
    var top = array.length - 1 | 0;
    var middle = -1;
    var value = 0;
    while (bottom <= top) {
      middle = (bottom + top | 0) / 2 | 0;
      value = array[middle];
      if (needle > value)
        bottom = middle + 1 | 0;
      else if (needle === value)
        return middle;
      else
        top = middle - 1 | 0;
    }
    return middle - (needle < value ? 1 : 0) | 0;
  }
  function Digit() {
    Digit_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.intArrayOf' call
    tmp$ret$0 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
    tmp.jb_1 = tmp$ret$0;
  }
  var Digit_instance;
  function Digit_getInstance() {
    if (Digit_instance == null)
      new Digit();
    return Digit_instance;
  }
  function asList_0(_this__u8e3s4) {
    return new asList$1(_this__u8e3s4);
  }
  function asList$1($this_asList) {
    this.kb_1 = $this_asList;
    AbstractList.call(this);
  }
  asList$1.prototype.f = function () {
    return _ULongArray___get_size__impl__ju6dtr(this.kb_1);
  };
  asList$1.prototype.k = function () {
    return ULongArray__isEmpty_impl_c3yngu(this.kb_1);
  };
  asList$1.prototype.lb = function (element) {
    return ULongArray__contains_impl_v9bgai(this.kb_1, element);
  };
  asList$1.prototype.x = function (element) {
    if (!(element instanceof ULong))
      return false;
    return this.lb(element instanceof ULong ? element.w_1 : THROW_CCE());
  };
  asList$1.prototype.mb = function (index) {
    Companion_getInstance().b1(index, this.f());
    return ULongArray__get_impl_pr71q9(this.kb_1, index);
  };
  asList$1.prototype.l = function (index) {
    return new ULong(this.mb(index));
  };
  function isWhitespaceImpl(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.code' call
    tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    var ch = tmp$ret$0;
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function releaseIntercepted($this) {
    var intercepted = $this.ub_1;
    if (!(intercepted == null) ? !(intercepted === $this) : false) {
      ensureNotNull($this.t2().x2(Key_getInstance())).w2(intercepted);
    }
    $this.ub_1 = CompletedContinuation_getInstance();
  }
  function CoroutineImpl(resultContinuation) {
    this.nb_1 = resultContinuation;
    this.ob_1 = 0;
    this.pb_1 = 0;
    this.qb_1 = null;
    this.rb_1 = null;
    this.sb_1 = null;
    var tmp = this;
    var tmp0_safe_receiver = this.nb_1;
    tmp.tb_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t2();
    this.ub_1 = null;
  }
  CoroutineImpl.prototype.t2 = function () {
    return ensureNotNull(this.tb_1);
  };
  CoroutineImpl.prototype.vb = function () {
    var tmp2_elvis_lhs = this.ub_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.also' call
      var tmp0_safe_receiver = this.t2().x2(Key_getInstance());
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.v2(this);
      var tmp0_also = tmp1_elvis_lhs == null ? this : tmp1_elvis_lhs;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.coroutines.CoroutineImpl.intercepted.<anonymous>' call
      this.ub_1 = tmp0_also;
      tmp$ret$0 = tmp0_also;
      tmp = tmp$ret$0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  };
  CoroutineImpl.prototype.wb = function (result) {
    var current = this;
    var tmp$ret$0;
    // Inline function 'kotlin.Result.getOrNull' call
    var tmp;
    if (_Result___get_isFailure__impl__jpiriv(result)) {
      tmp = null;
    } else {
      var tmp_0 = _Result___get_value__impl__bjfvqg(result);
      tmp = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
    }
    tmp$ret$0 = tmp;
    var currentResult = tmp$ret$0;
    var currentException = Result__exceptionOrNull_impl_p6xea9(result);
    while (true) {
      var tmp$ret$6;
      // Inline function 'kotlin.with' call
      var tmp0_with = current;
      // Inline function 'kotlin.contracts.contract' call
      if (currentException == null) {
        tmp0_with.qb_1 = currentResult;
      } else {
        tmp0_with.ob_1 = tmp0_with.pb_1;
        tmp0_with.rb_1 = currentException;
      }
      try {
        var outcome = tmp0_with.xb();
        if (outcome === get_COROUTINE_SUSPENDED())
          return Unit_getInstance();
        currentResult = outcome;
        currentException = null;
      } catch ($p) {
        currentResult = null;
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        tmp$ret$1 = $p;
        currentException = tmp$ret$1;
      }
      releaseIntercepted(tmp0_with);
      var completion = ensureNotNull(tmp0_with.nb_1);
      var tmp_1;
      if (completion instanceof CoroutineImpl) {
        current = completion;
        tmp_1 = Unit_getInstance();
      } else {
        if (!(currentException == null)) {
          var tmp$ret$3;
          // Inline function 'kotlin.coroutines.resumeWithException' call
          var tmp0_resumeWithException = ensureNotNull(currentException);
          var tmp$ret$2;
          // Inline function 'kotlin.Companion.failure' call
          var tmp0_failure = Companion_getInstance_4();
          tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(tmp0_resumeWithException));
          completion.u2(tmp$ret$2);
          tmp$ret$3 = Unit_getInstance();
        } else {
          var tmp$ret$5;
          // Inline function 'kotlin.coroutines.resume' call
          var tmp1_resume = currentResult;
          var tmp$ret$4;
          // Inline function 'kotlin.Companion.success' call
          var tmp0_success = Companion_getInstance_4();
          tmp$ret$4 = _Result___init__impl__xyqfz8(tmp1_resume);
          completion.u2(tmp$ret$4);
          tmp$ret$5 = Unit_getInstance();
        }
        return Unit_getInstance();
      }
      tmp$ret$6 = tmp_1;
    }
  };
  CoroutineImpl.prototype.u2 = function (result) {
    return this.wb(result);
  };
  function CompletedContinuation() {
    CompletedContinuation_instance = this;
  }
  CompletedContinuation.prototype.t2 = function () {
    throw IllegalStateException_init_$Create$_0('This continuation is already complete');
  };
  CompletedContinuation.prototype.wb = function (result) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$_0('This continuation is already complete');
  };
  CompletedContinuation.prototype.u2 = function (result) {
    return this.wb(result);
  };
  CompletedContinuation.prototype.toString = function () {
    return 'This continuation is already complete';
  };
  var CompletedContinuation_instance;
  function CompletedContinuation_getInstance() {
    if (CompletedContinuation_instance == null)
      new CompletedContinuation();
    return CompletedContinuation_instance;
  }
  function intercepted(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CoroutineImpl ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.vb();
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function createCoroutineUnintercepted(_this__u8e3s4, receiver, completion) {
    var tmp$ret$0;
    // Inline function 'kotlin.coroutines.intrinsics.createCoroutineFromSuspendFunction' call
    tmp$ret$0 = new _no_name_provided__qut3iv_0(completion, _this__u8e3s4, receiver);
    return tmp$ret$0;
  }
  function invokeSuspendSuperTypeWithReceiver(_this__u8e3s4, receiver, completion) {
    throw new NotImplementedError('It is intrinsic method');
  }
  function _no_name_provided__qut3iv_0($completion, $this_createCoroutineUnintercepted, $receiver) {
    this.gc_1 = $completion;
    this.hc_1 = $this_createCoroutineUnintercepted;
    this.ic_1 = $receiver;
    CoroutineImpl.call(this, isInterface($completion, Continuation) ? $completion : THROW_CCE());
  }
  _no_name_provided__qut3iv_0.prototype.xb = function () {
    if (this.rb_1 != null)
      throw this.rb_1;
    var tmp$ret$1;
    // Inline function 'kotlin.coroutines.intrinsics.createCoroutineUnintercepted.<anonymous>' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = this.hc_1;
    var a = tmp$ret$0;
    tmp$ret$1 = typeof a === 'function' ? a(this.ic_1, this.gc_1) : this.hc_1.jc(this.ic_1, this.gc_1);
    return tmp$ret$1;
  };
  function Exception_init_$Init$($this) {
    extendThrowable($this, void 1, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, Object.create(Exception.prototype));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message, void 1);
    Error_0.call($this);
    return $this;
  }
  function Error_init_$Init$_0(message, cause, $this) {
    extendThrowable($this, message, cause);
    Error_0.call($this);
    return $this;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  function IllegalArgumentException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$(message) {
    var tmp = IllegalArgumentException_init_$Init$(message, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  function IllegalStateException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$() {
    var tmp = IllegalStateException_init_$Init$(Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_0(message) {
    var tmp = IllegalStateException_init_$Init$_0(message, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_0);
    return tmp;
  }
  function IllegalStateException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$_1(message, cause) {
    var tmp = IllegalStateException_init_$Init$_1(message, cause, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$_1);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message) {
    var tmp = RuntimeException_init_$Init$_0(message, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$_0(message, cause) {
    var tmp = RuntimeException_init_$Init$_1(message, cause, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$_0);
    return tmp;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  function IndexOutOfBoundsException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$(message, Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, Object.create(NumberFormatException.prototype));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, Object.create(ArithmeticException.prototype));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(Object.create(NullPointerException.prototype));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(Object.create(NoWhenBranchMatchedException.prototype));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(Object.create(ClassCastException.prototype));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, Object.create(UninitializedPropertyAccessException.prototype));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  function jsIn(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = lhs_hack in rhs_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function jsBitwiseOr(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = lhs_hack | rhs_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function jsTypeOf(value_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = typeof value_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function jsDeleteProperty(obj_hack, property_hack) {
    delete obj_hack[property_hack];
  }
  function jsInstanceOf(obj_hack, jsClass_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = obj_hack instanceof jsClass_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function toString_4(_this__u8e3s4, radix) {
    return toStringImpl(_this__u8e3s4, checkRadix(radix));
  }
  function None() {
    None_instance = this;
    atomicfu$TraceBase.call(this);
  }
  var None_instance;
  function None_getInstance() {
    if (None_instance == null)
      new None();
    return None_instance;
  }
  function atomicfu$TraceBase() {
  }
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$1 = function (event) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$2 = function (event1, event2) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$3 = function (event1, event2, event3) {
  };
  atomicfu$TraceBase.prototype.atomicfu$Trace$append$4 = function (event1, event2, event3, event4) {
  };
  function AtomicRef(value) {
    this.kotlinx$atomicfu$value = value;
  }
  AtomicRef.prototype.kc = function (_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  };
  AtomicRef.prototype.lc = function () {
    return this.kotlinx$atomicfu$value;
  };
  AtomicRef.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.kotlinx$atomicfu$value === expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  };
  AtomicRef.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  };
  AtomicRef.prototype.toString = function () {
    return toString_2(this.kotlinx$atomicfu$value);
  };
  function atomic$ref$1(initial) {
    return atomic(initial, None_getInstance());
  }
  function AtomicBoolean(value) {
    this.kotlinx$atomicfu$value = value;
  }
  AtomicBoolean.prototype.mc = function (_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  };
  AtomicBoolean.prototype.lc = function () {
    return this.kotlinx$atomicfu$value;
  };
  AtomicBoolean.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.kotlinx$atomicfu$value === expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  };
  AtomicBoolean.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  };
  AtomicBoolean.prototype.toString = function () {
    return this.kotlinx$atomicfu$value.toString();
  };
  function atomic$boolean$1(initial) {
    return atomic_0(initial, None_getInstance());
  }
  function AtomicInt(value) {
    this.kotlinx$atomicfu$value = value;
  }
  AtomicInt.prototype.nc = function (_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  };
  AtomicInt.prototype.lc = function () {
    return this.kotlinx$atomicfu$value;
  };
  AtomicInt.prototype.atomicfu$compareAndSet = function (expect, update) {
    if (!(this.kotlinx$atomicfu$value === expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  };
  AtomicInt.prototype.atomicfu$getAndSet = function (value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$getAndIncrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.kotlinx$atomicfu$value;
    tmp0_this.kotlinx$atomicfu$value = tmp1 + 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndDecrement = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.kotlinx$atomicfu$value;
    tmp0_this.kotlinx$atomicfu$value = tmp1 - 1 | 0;
    return tmp1;
  };
  AtomicInt.prototype.atomicfu$getAndAdd = function (delta) {
    var oldValue = this.kotlinx$atomicfu$value;
    var tmp0_this = this;
    tmp0_this.kotlinx$atomicfu$value = tmp0_this.kotlinx$atomicfu$value + delta | 0;
    return oldValue;
  };
  AtomicInt.prototype.atomicfu$addAndGet = function (delta) {
    var tmp0_this = this;
    tmp0_this.kotlinx$atomicfu$value = tmp0_this.kotlinx$atomicfu$value + delta | 0;
    return this.kotlinx$atomicfu$value;
  };
  AtomicInt.prototype.atomicfu$incrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.kotlinx$atomicfu$value = tmp0_this.kotlinx$atomicfu$value + 1 | 0;
    return tmp0_this.kotlinx$atomicfu$value;
  };
  AtomicInt.prototype.atomicfu$decrementAndGet = function () {
    var tmp0_this = this;
    tmp0_this.kotlinx$atomicfu$value = tmp0_this.kotlinx$atomicfu$value - 1 | 0;
    return tmp0_this.kotlinx$atomicfu$value;
  };
  AtomicInt.prototype.toString = function () {
    return this.kotlinx$atomicfu$value.toString();
  };
  function atomic$int$1(initial) {
    return atomic_1(initial, None_getInstance());
  }
  function atomic(initial, trace) {
    return new AtomicRef(initial);
  }
  function atomic_0(initial, trace) {
    return new AtomicBoolean(initial);
  }
  function atomic_1(initial, trace) {
    return new AtomicInt(initial);
  }
  function AbstractCoroutine(parentContext, initParentJob, active) {
    JobSupport.call(this, active);
    if (initParentJob) {
      this.qc(parentContext.x2(Key_getInstance_2()));
    }
    this.tc_1 = parentContext.e3(this);
  }
  AbstractCoroutine.prototype.t2 = function () {
    return this.tc_1;
  };
  AbstractCoroutine.prototype.uc = function () {
    return this.tc_1;
  };
  AbstractCoroutine.prototype.vc = function () {
    return JobSupport.prototype.vc.call(this);
  };
  AbstractCoroutine.prototype.wc = function (value) {
  };
  AbstractCoroutine.prototype.xc = function (cause, handled) {
  };
  AbstractCoroutine.prototype.yc = function () {
    return get_classSimpleName(this) + ' was cancelled';
  };
  AbstractCoroutine.prototype.zc = function (state) {
    if (state instanceof CompletedExceptionally) {
      this.xc(state.ad_1, state.cd());
    } else {
      this.wc((state == null ? true : isObject(state)) ? state : THROW_CCE());
    }
  };
  AbstractCoroutine.prototype.u2 = function (result) {
    var state = this.dd(toState$default(result, null, 1, null));
    if (state === get_COMPLETING_WAITING_CHILDREN())
      return Unit_getInstance();
    this.ed(state);
  };
  AbstractCoroutine.prototype.ed = function (state) {
    return this.fd(state);
  };
  AbstractCoroutine.prototype.gd = function (exception) {
    handleCoroutineException(this.tc_1, exception);
  };
  AbstractCoroutine.prototype.hd = function () {
    var tmp0_elvis_lhs = get_coroutineName(this.tc_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return JobSupport.prototype.hd.call(this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var coroutineName = tmp;
    return '"' + coroutineName + '":' + JobSupport.prototype.hd.call(this);
  };
  AbstractCoroutine.prototype.id = function (start, receiver, block) {
    start.ld(block, receiver, this);
  };
  function async(_this__u8e3s4, context, start, block) {
    var newContext = newCoroutineContext(_this__u8e3s4, context);
    var coroutine = start.je() ? new LazyDeferredCoroutine(newContext, block) : new DeferredCoroutine(newContext, true);
    coroutine.id(start, coroutine, block);
    return coroutine;
  }
  function DeferredCoroutine(parentContext, active) {
    AbstractCoroutine.call(this, parentContext, true, active);
  }
  DeferredCoroutine.prototype.ne = function () {
    var tmp = this.oe();
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  function LazyDeferredCoroutine(parentContext, block) {
    DeferredCoroutine.call(this, parentContext, false);
    this.ue_1 = createCoroutineUnintercepted(block, this, this);
  }
  LazyDeferredCoroutine.prototype.rd = function () {
    startCoroutineCancellable_0(this.ue_1, this);
  };
  function CancellableContinuationImpl() {
  }
  CancellableContinuationImpl.prototype.xe = function () {
    var tmp0_elvis_lhs = this.we_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    handle.ye();
    this.we_1 = NonDisposableHandle_getInstance();
  };
  function CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      handled = false;
    CompletedExceptionally.call($this, cause, handled);
    return $this;
  }
  function CompletedExceptionally_init_$Create$(cause, handled, $mask0, $marker) {
    return CompletedExceptionally_init_$Init$(cause, handled, $mask0, $marker, Object.create(CompletedExceptionally.prototype));
  }
  function CompletedExceptionally(cause, handled) {
    this.ad_1 = cause;
    this.bd_1 = atomic$boolean$1(handled);
  }
  CompletedExceptionally.prototype.cd = function () {
    return this.bd_1.kotlinx$atomicfu$value;
  };
  CompletedExceptionally.prototype.ze = function () {
    return this.bd_1.atomicfu$compareAndSet(false, true);
  };
  CompletedExceptionally.prototype.toString = function () {
    return get_classSimpleName(this) + '[' + this.ad_1 + ']';
  };
  function toState(_this__u8e3s4, onCancellation) {
    var tmp$ret$2;
    // Inline function 'kotlin.fold' call
    // Inline function 'kotlin.contracts.contract' call
    var exception = Result__exceptionOrNull_impl_p6xea9(_this__u8e3s4);
    var tmp;
    if (exception == null) {
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.toState.<anonymous>' call
      var tmp_0 = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
      var tmp0__anonymous__q1qw7t = (tmp_0 == null ? true : isObject(tmp_0)) ? tmp_0 : THROW_CCE();
      tmp$ret$0 = !(onCancellation == null) ? new CompletedWithCancellation(tmp0__anonymous__q1qw7t, onCancellation) : tmp0__anonymous__q1qw7t;
      tmp = tmp$ret$0;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlinx.coroutines.toState.<anonymous>' call
      tmp$ret$1 = CompletedExceptionally_init_$Create$(exception, false, 2, null);
      tmp = tmp$ret$1;
    }
    tmp$ret$2 = tmp;
    return tmp$ret$2;
  }
  function toState$default(_this__u8e3s4, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      onCancellation = null;
    return toState(_this__u8e3s4, onCancellation);
  }
  function CompletedWithCancellation(result, onCancellation) {
    this.af_1 = result;
    this.bf_1 = onCancellation;
  }
  CompletedWithCancellation.prototype.toString = function () {
    return 'CompletedWithCancellation(result=' + toString_2(this.af_1) + ', onCancellation=' + this.bf_1 + ')';
  };
  CompletedWithCancellation.prototype.hashCode = function () {
    var result = this.af_1 == null ? 0 : hashCode(this.af_1);
    result = imul(result, 31) + hashCode(this.bf_1) | 0;
    return result;
  };
  CompletedWithCancellation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedWithCancellation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedWithCancellation ? other : THROW_CCE();
    if (!equals_0(this.af_1, tmp0_other_with_cast.af_1))
      return false;
    if (!equals_0(this.bf_1, tmp0_other_with_cast.bf_1))
      return false;
    return true;
  };
  function CoroutineDispatcher$Key$_init_$lambda_akl8b5(it) {
    return it instanceof CoroutineDispatcher ? it : null;
  }
  function Key_0() {
    Key_instance_0 = this;
    var tmp = Key_getInstance();
    AbstractCoroutineContextKey.call(this, tmp, CoroutineDispatcher$Key$_init_$lambda_akl8b5);
  }
  var Key_instance_0;
  function Key_getInstance_0() {
    if (Key_instance_0 == null)
      new Key_0();
    return Key_instance_0;
  }
  function CoroutineDispatcher() {
    Key_getInstance_0();
    AbstractCoroutineContextElement.call(this, Key_getInstance());
  }
  CoroutineDispatcher.prototype.df = function (context) {
    return true;
  };
  CoroutineDispatcher.prototype.v2 = function (continuation) {
    return new DispatchedContinuation(this, continuation);
  };
  CoroutineDispatcher.prototype.w2 = function (continuation) {
    var dispatched = continuation instanceof DispatchedContinuation ? continuation : THROW_CCE();
    dispatched.lf();
  };
  CoroutineDispatcher.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this);
  };
  function handleCoroutineException(context, exception) {
    try {
      var tmp0_safe_receiver = context.x2(Key_getInstance_1());
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_safe_receiver.mf(context, exception);
        return Unit_getInstance();
      }
    } catch ($p) {
      if ($p instanceof Error) {
        handleCoroutineExceptionImpl(context, handlerException(exception, $p));
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    handleCoroutineExceptionImpl(context, exception);
  }
  function Key_1() {
    Key_instance_1 = this;
  }
  var Key_instance_1;
  function Key_getInstance_1() {
    if (Key_instance_1 == null)
      new Key_1();
    return Key_instance_1;
  }
  function handlerException(originalException, thrownException) {
    if (originalException === thrownException)
      return originalException;
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = RuntimeException_init_$Create$_0('Exception while trying to handle coroutine exception', thrownException);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.coroutines.handlerException.<anonymous>' call
    // Inline function 'kotlinx.coroutines.addSuppressedThrowable' call
    tmp$ret$0 = tmp0_apply;
    return tmp$ret$0;
  }
  function CoroutineScope() {
  }
  function GlobalScope() {
    GlobalScope_instance = this;
  }
  GlobalScope.prototype.uc = function () {
    return EmptyCoroutineContext_getInstance();
  };
  var GlobalScope_instance;
  function GlobalScope_getInstance() {
    if (GlobalScope_instance == null)
      new GlobalScope();
    return GlobalScope_instance;
  }
  var CoroutineStart_DEFAULT_instance;
  var CoroutineStart_LAZY_instance;
  var CoroutineStart_ATOMIC_instance;
  var CoroutineStart_UNDISPATCHED_instance;
  var CoroutineStart_entriesInitialized;
  function CoroutineStart_initEntries() {
    if (CoroutineStart_entriesInitialized)
      return Unit_getInstance();
    CoroutineStart_entriesInitialized = true;
    CoroutineStart_DEFAULT_instance = new CoroutineStart('DEFAULT', 0);
    CoroutineStart_LAZY_instance = new CoroutineStart('LAZY', 1);
    CoroutineStart_ATOMIC_instance = new CoroutineStart('ATOMIC', 2);
    CoroutineStart_UNDISPATCHED_instance = new CoroutineStart('UNDISPATCHED', 3);
  }
  function CoroutineStart(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  CoroutineStart.prototype.ld = function (block, receiver, completion) {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.k3_1;
    var tmp;
    switch (tmp0) {
      case 0:
        startCoroutineCancellable$default(block, receiver, completion, null, 4, null);
        tmp = Unit_getInstance();
        break;
      case 2:
        startCoroutine(block, receiver, completion);
        tmp = Unit_getInstance();
        break;
      case 3:
        startCoroutineUndispatched(block, receiver, completion);
        tmp = Unit_getInstance();
        break;
      case 1:
        tmp = Unit_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  CoroutineStart.prototype.je = function () {
    return this === CoroutineStart_LAZY_getInstance();
  };
  function CoroutineStart_DEFAULT_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_DEFAULT_instance;
  }
  function CoroutineStart_LAZY_getInstance() {
    CoroutineStart_initEntries();
    return CoroutineStart_LAZY_instance;
  }
  function delta($this, unconfined) {
    return unconfined ? new Long(0, 1) : new Long(1, 0);
  }
  function EventLoop() {
    CoroutineDispatcher.call(this);
    this.of_1 = new Long(0, 0);
    this.pf_1 = false;
    this.qf_1 = null;
  }
  EventLoop.prototype.rf = function () {
    var tmp0_elvis_lhs = this.qf_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    var tmp1_elvis_lhs = queue.vf();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var task = tmp_0;
    task.xf();
    return true;
  };
  EventLoop.prototype.yf = function (task) {
    var tmp0_elvis_lhs = this.qf_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.also' call
      var tmp0_also = new ArrayQueue();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.EventLoop.dispatchUnconfined.<anonymous>' call
      this.qf_1 = tmp0_also;
      tmp$ret$0 = tmp0_also;
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    queue.zf(task);
  };
  EventLoop.prototype.ag = function () {
    return this.of_1.z3(delta(this, true)) >= 0;
  };
  EventLoop.prototype.bg = function () {
    var tmp0_safe_receiver = this.qf_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.cg();
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  };
  EventLoop.prototype.dg = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.of_1 = tmp0_this.of_1.b4(delta(this, unconfined));
    if (!unconfined)
      this.pf_1 = true;
  };
  EventLoop.prototype.eg = function (unconfined) {
    var tmp0_this = this;
    tmp0_this.of_1 = tmp0_this.of_1.c4(delta(this, unconfined));
    if (this.of_1.z3(new Long(0, 0)) > 0)
      return Unit_getInstance();
    // Inline function 'kotlinx.coroutines.assert' call
    if (this.pf_1) {
      this.fg();
    }
  };
  EventLoop.prototype.fg = function () {
  };
  function ThreadLocalEventLoop() {
    ThreadLocalEventLoop_instance = this;
    this.gg_1 = new CommonThreadLocal();
  }
  ThreadLocalEventLoop.prototype.hg = function () {
    var tmp0_elvis_lhs = this.gg_1.jg();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.also' call
      var tmp0_also = createEventLoop();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.ThreadLocalEventLoop.<get-eventLoop>.<anonymous>' call
      ThreadLocalEventLoop_getInstance().gg_1.kg(tmp0_also);
      tmp$ret$0 = tmp0_also;
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  var ThreadLocalEventLoop_instance;
  function ThreadLocalEventLoop_getInstance() {
    if (ThreadLocalEventLoop_instance == null)
      new ThreadLocalEventLoop();
    return ThreadLocalEventLoop_instance;
  }
  function CompletionHandlerException(message, cause) {
    RuntimeException_init_$Init$_1(message, cause, this);
    captureStack(this, CompletionHandlerException);
  }
  function CoroutinesInternalError(message, cause) {
    Error_init_$Init$_0(message, cause, this);
    captureStack(this, CoroutinesInternalError);
  }
  function Key_2() {
    Key_instance_2 = this;
  }
  var Key_instance_2;
  function Key_getInstance_2() {
    if (Key_instance_2 == null)
      new Key_2();
    return Key_instance_2;
  }
  function Job() {
  }
  function ParentJob() {
  }
  function ChildHandle() {
  }
  function NonDisposableHandle() {
    NonDisposableHandle_instance = this;
  }
  NonDisposableHandle.prototype.ye = function () {
  };
  NonDisposableHandle.prototype.ae = function (cause) {
    return false;
  };
  NonDisposableHandle.prototype.toString = function () {
    return 'NonDisposableHandle';
  };
  var NonDisposableHandle_instance;
  function NonDisposableHandle_getInstance() {
    if (NonDisposableHandle_instance == null)
      new NonDisposableHandle();
    return NonDisposableHandle_instance;
  }
  function get_COMPLETING_ALREADY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_ALREADY;
  }
  var COMPLETING_ALREADY;
  function get_COMPLETING_WAITING_CHILDREN() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_WAITING_CHILDREN;
  }
  var COMPLETING_WAITING_CHILDREN;
  function get_COMPLETING_RETRY() {
    init_properties_JobSupport_kt_iaxwag();
    return COMPLETING_RETRY;
  }
  var COMPLETING_RETRY;
  function get_TOO_LATE_TO_CANCEL() {
    init_properties_JobSupport_kt_iaxwag();
    return TOO_LATE_TO_CANCEL;
  }
  var TOO_LATE_TO_CANCEL;
  function get_SEALED() {
    init_properties_JobSupport_kt_iaxwag();
    return SEALED;
  }
  var SEALED;
  function get_EMPTY_NEW() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_NEW;
  }
  var EMPTY_NEW;
  function get_EMPTY_ACTIVE() {
    init_properties_JobSupport_kt_iaxwag();
    return EMPTY_ACTIVE;
  }
  var EMPTY_ACTIVE;
  function Empty(isActive) {
    this.lg_1 = isActive;
  }
  Empty.prototype.vc = function () {
    return this.lg_1;
  };
  Empty.prototype.mg = function () {
    return null;
  };
  Empty.prototype.toString = function () {
    return 'Empty{' + (this.lg_1 ? 'Active' : 'New') + '}';
  };
  function Incomplete() {
  }
  function NodeList() {
    LinkedListHead.call(this);
  }
  NodeList.prototype.vc = function () {
    return true;
  };
  NodeList.prototype.mg = function () {
    return this;
  };
  NodeList.prototype.qg = function (state) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = StringBuilder_init_$Create$_0();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.coroutines.NodeList.getString.<anonymous>' call
    tmp0_apply.ha('List{');
    tmp0_apply.ha(state);
    tmp0_apply.ha('}[');
    var first = true;
    // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
    var cur = this.rg_1;
    while (!equals_0(cur, this)) {
      if (cur instanceof JobNode) {
        // Inline function 'kotlinx.coroutines.NodeList.getString.<anonymous>.<anonymous>' call
        var tmp0__anonymous__q1qw7t = cur;
        if (first)
          first = false;
        else {
          tmp0_apply.ha(', ');
        }
        tmp0_apply.ga(tmp0__anonymous__q1qw7t);
      }
      cur = cur.rg_1;
    }
    tmp0_apply.ha(']');
    tmp$ret$0 = tmp0_apply;
    tmp$ret$1 = tmp$ret$0.toString();
    return tmp$ret$1;
  };
  NodeList.prototype.toString = function () {
    return get_DEBUG() ? this.qg('Active') : LinkedListHead.prototype.toString.call(this);
  };
  function JobNode() {
    CompletionHandlerBase.call(this);
  }
  JobNode.prototype.ah = function () {
    var tmp = this.zg_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('job');
    }
  };
  JobNode.prototype.vc = function () {
    return true;
  };
  JobNode.prototype.mg = function () {
    return null;
  };
  JobNode.prototype.ye = function () {
    return this.ah().xd(this);
  };
  JobNode.prototype.toString = function () {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '[job@' + get_hexAddress(this.ah()) + ']';
  };
  function _set_exceptionsHolder__tqm22h($this, value) {
    $this.gh_1.kotlinx$atomicfu$value = value;
  }
  function _get_exceptionsHolder__nhszp($this) {
    return $this.gh_1.kotlinx$atomicfu$value;
  }
  function allocateList($this) {
    return ArrayList_init_$Create$_0(4);
  }
  function finalizeFinishingState($this, state, proposedUpdate) {
    // Inline function 'kotlinx.coroutines.assert' call
    // Inline function 'kotlinx.coroutines.assert' call
    // Inline function 'kotlinx.coroutines.assert' call
    var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    var proposedException = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ad_1;
    var wasCancelling = false;
    var tmp$ret$1;
    // Inline function 'kotlinx.coroutines.internal.synchronized' call
    var tmp$ret$0;
    // Inline function 'kotlinx.coroutines.JobSupport.finalizeFinishingState.<anonymous>' call
    wasCancelling = state.hh();
    var exceptions = state.ih(proposedException);
    var finalCause = getFinalRootCause($this, state, exceptions);
    if (!(finalCause == null)) {
      addSuppressedExceptions($this, finalCause, exceptions);
    }
    tmp$ret$0 = finalCause;
    tmp$ret$1 = tmp$ret$0;
    var finalException = tmp$ret$1;
    var tmp;
    if (finalException == null) {
      tmp = proposedUpdate;
    } else if (finalException === proposedException) {
      tmp = proposedUpdate;
    } else {
      tmp = CompletedExceptionally_init_$Create$(finalException, false, 2, null);
    }
    var finalState = tmp;
    if (!(finalException == null)) {
      var handled = cancelParent($this, finalException) ? true : $this.he(finalException);
      if (handled) {
        (finalState instanceof CompletedExceptionally ? finalState : THROW_CCE()).ze();
      }
    }
    if (!wasCancelling) {
      $this.ee(finalException);
    }
    $this.zc(finalState);
    var casSuccess = $this.oc_1.atomicfu$compareAndSet(state, boxIncomplete(finalState));
    // Inline function 'kotlinx.coroutines.assert' call
    completeStateFinalization($this, state, finalState);
    return finalState;
  }
  function getFinalRootCause($this, state, exceptions) {
    if (exceptions.k()) {
      if (state.hh()) {
        var tmp$ret$0;
        // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
        var tmp0_elvis_lhs = null;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.yc() : tmp0_elvis_lhs, null, $this);
        return tmp$ret$0;
      }
      return null;
    }
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = exceptions.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        var tmp$ret$1;
        // Inline function 'kotlinx.coroutines.JobSupport.getFinalRootCause.<anonymous>' call
        tmp$ret$1 = !(element instanceof CancellationException);
        if (tmp$ret$1) {
          tmp$ret$2 = element;
          break $l$block;
        }
      }
      tmp$ret$2 = null;
    }
    var firstNonCancellation = tmp$ret$2;
    if (!(firstNonCancellation == null))
      return firstNonCancellation;
    var first = exceptions.l(0);
    if (first instanceof TimeoutCancellationException) {
      var tmp$ret$4;
      $l$block_0: {
        // Inline function 'kotlin.collections.firstOrNull' call
        var tmp0_iterator_0 = exceptions.h();
        while (tmp0_iterator_0.i()) {
          var element_0 = tmp0_iterator_0.j();
          var tmp$ret$3;
          // Inline function 'kotlinx.coroutines.JobSupport.getFinalRootCause.<anonymous>' call
          var tmp;
          if (!(element_0 === first)) {
            tmp = element_0 instanceof TimeoutCancellationException;
          } else {
            tmp = false;
          }
          tmp$ret$3 = tmp;
          if (tmp$ret$3) {
            tmp$ret$4 = element_0;
            break $l$block_0;
          }
        }
        tmp$ret$4 = null;
      }
      var detailedTimeoutException = tmp$ret$4;
      if (!(detailedTimeoutException == null))
        return detailedTimeoutException;
    }
    return first;
  }
  function addSuppressedExceptions($this, rootCause, exceptions) {
    if (exceptions.f() <= 1)
      return Unit_getInstance();
    var seenExceptions = identitySet(exceptions.f());
    var unwrappedCause = unwrap(rootCause);
    var tmp0_iterator = exceptions.h();
    while (tmp0_iterator.i()) {
      var exception = tmp0_iterator.j();
      var unwrapped = unwrap(exception);
      var tmp;
      var tmp_0;
      if (!(unwrapped === rootCause) ? !(unwrapped === unwrappedCause) : false) {
        tmp_0 = !(unwrapped instanceof CancellationException);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = seenExceptions.e(unwrapped);
      } else {
        tmp = false;
      }
      if (tmp) {
        // Inline function 'kotlinx.coroutines.addSuppressedThrowable' call
      }
    }
  }
  function tryFinalizeSimpleState($this, state, update) {
    // Inline function 'kotlinx.coroutines.assert' call
    // Inline function 'kotlinx.coroutines.assert' call
    if (!$this.oc_1.atomicfu$compareAndSet(state, boxIncomplete(update)))
      return false;
    $this.ee(null);
    $this.zc(update);
    completeStateFinalization($this, state, update);
    return true;
  }
  function completeStateFinalization($this, state, update) {
    var tmp0_safe_receiver = $this.nd();
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp0_safe_receiver.ye();
      $this.md(NonDisposableHandle_getInstance());
      tmp$ret$0 = Unit_getInstance();
    }
    var tmp1_safe_receiver = update instanceof CompletedExceptionally ? update : null;
    var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.ad_1;
    if (state instanceof JobNode) {
      try {
        state.invoke(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          $this.gd(new CompletionHandlerException('Exception in completion handler ' + state + ' for ' + $this, $p));
        } else {
          throw $p;
        }
      }
    } else {
      var tmp2_safe_receiver = state.mg();
      if (tmp2_safe_receiver == null)
        null;
      else {
        notifyCompletion(tmp2_safe_receiver, $this, cause);
      }
    }
  }
  function notifyCancelling($this, list, cause) {
    $this.ee(cause);
    // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers' call
    var exception = null;
    // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
    var cur = list.rg_1;
    while (!equals_0(cur, list)) {
      if (cur instanceof JobCancellingNode) {
        // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>' call
        var tmp0__anonymous__q1qw7t = cur;
        try {
          tmp0__anonymous__q1qw7t.invoke(cause);
        } catch ($p) {
          if ($p instanceof Error) {
            var tmp0_safe_receiver = exception;
            var tmp;
            if (tmp0_safe_receiver == null) {
              tmp = null;
            } else {
              var tmp$ret$0;
              // Inline function 'kotlin.apply' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>.<anonymous>' call
              // Inline function 'kotlinx.coroutines.addSuppressedThrowable' call
              tmp$ret$0 = tmp0_safe_receiver;
              tmp = tmp$ret$0;
            }
            var tmp1_elvis_lhs = tmp;
            if (tmp1_elvis_lhs == null) {
              var tmp$ret$1;
              // Inline function 'kotlin.run' call
              // Inline function 'kotlin.contracts.contract' call
              exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
              tmp$ret$1 = Unit_getInstance();
            } else
              tmp1_elvis_lhs;
          } else {
            throw $p;
          }
        }
      }
      cur = cur.rg_1;
    }
    var tmp0_safe_receiver_0 = exception;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      var tmp$ret$2;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      $this.gd(tmp0_safe_receiver_0);
      tmp$ret$2 = Unit_getInstance();
    }
    cancelParent($this, cause);
  }
  function cancelParent($this, cause) {
    if ($this.fe())
      return true;
    var isCancellation = cause instanceof CancellationException;
    var parent = $this.nd();
    if (parent === null ? true : parent === NonDisposableHandle_getInstance()) {
      return isCancellation;
    }
    return parent.ae(cause) ? true : isCancellation;
  }
  function notifyCompletion(_this__u8e3s4, $this, cause) {
    var exception = null;
    // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
    var cur = _this__u8e3s4.rg_1;
    while (!equals_0(cur, _this__u8e3s4)) {
      if (cur instanceof JobNode) {
        // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>' call
        var tmp0__anonymous__q1qw7t = cur;
        try {
          tmp0__anonymous__q1qw7t.invoke(cause);
        } catch ($p) {
          if ($p instanceof Error) {
            var tmp0_safe_receiver = exception;
            var tmp;
            if (tmp0_safe_receiver == null) {
              tmp = null;
            } else {
              var tmp$ret$0;
              // Inline function 'kotlin.apply' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>.<anonymous>' call
              // Inline function 'kotlinx.coroutines.addSuppressedThrowable' call
              tmp$ret$0 = tmp0_safe_receiver;
              tmp = tmp$ret$0;
            }
            var tmp1_elvis_lhs = tmp;
            if (tmp1_elvis_lhs == null) {
              var tmp$ret$1;
              // Inline function 'kotlin.run' call
              // Inline function 'kotlin.contracts.contract' call
              exception = new CompletionHandlerException('Exception in completion handler ' + tmp0__anonymous__q1qw7t + ' for ' + $this, $p);
              tmp$ret$1 = Unit_getInstance();
            } else
              tmp1_elvis_lhs;
          } else {
            throw $p;
          }
        }
      }
      cur = cur.rg_1;
    }
    var tmp0_safe_receiver_0 = exception;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      var tmp$ret$2;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      $this.gd(tmp0_safe_receiver_0);
      tmp$ret$2 = Unit_getInstance();
    }
    return Unit_getInstance();
  }
  function startInternal($this, state) {
    var tmp0_subject = state;
    if (tmp0_subject instanceof Empty) {
      if (state.lg_1)
        return 0;
      if (!$this.oc_1.atomicfu$compareAndSet(state, get_EMPTY_ACTIVE()))
        return -1;
      $this.rd();
      return 1;
    } else {
      if (tmp0_subject instanceof InactiveNodeList) {
        if (!$this.oc_1.atomicfu$compareAndSet(state, state.jh_1))
          return -1;
        $this.rd();
        return 1;
      } else {
        return 0;
      }
    }
  }
  function makeNode($this, handler, onCancelling) {
    var tmp;
    if (onCancelling) {
      var tmp0_elvis_lhs = handler instanceof JobCancellingNode ? handler : null;
      tmp = tmp0_elvis_lhs == null ? new InvokeOnCancelling(handler) : tmp0_elvis_lhs;
    } else {
      var tmp1_safe_receiver = handler instanceof JobNode ? handler : null;
      var tmp_0;
      if (tmp1_safe_receiver == null) {
        tmp_0 = null;
      } else {
        var tmp$ret$0;
        // Inline function 'kotlin.also' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlinx.coroutines.JobSupport.makeNode.<anonymous>' call
        // Inline function 'kotlinx.coroutines.assert' call
        tmp$ret$0 = tmp1_safe_receiver;
        tmp_0 = tmp$ret$0;
      }
      var tmp2_elvis_lhs = tmp_0;
      tmp = tmp2_elvis_lhs == null ? new InvokeOnCompletion(handler) : tmp2_elvis_lhs;
    }
    var node = tmp;
    node.zg_1 = $this;
    return node;
  }
  function addLastAtomic($this, expect, list, node) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.coroutines.internal.LinkedListNode.addLastIf' call
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.JobSupport.addLastAtomic.<anonymous>' call
      tmp$ret$0 = $this.od() === expect;
      if (!tmp$ret$0) {
        tmp$ret$1 = false;
        break $l$block;
      }
      list.ug(node);
      tmp$ret$1 = true;
    }
    return tmp$ret$1;
  }
  function promoteEmptyToNodeList($this, state) {
    var list = new NodeList();
    var update = state.lg_1 ? list : new InactiveNodeList(list);
    $this.oc_1.atomicfu$compareAndSet(state, update);
  }
  function promoteSingleToNodeList($this, state) {
    state.ch(new NodeList());
    var tmp$ret$0;
    // Inline function 'kotlinx.coroutines.internal.LinkedListNode.nextNode' call
    tmp$ret$0 = state.rg_1;
    var list = tmp$ret$0;
    $this.oc_1.atomicfu$compareAndSet(state, list);
  }
  function cancelMakeCompleting($this, cause) {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.cancelMakeCompleting.<anonymous>' call
      var tmp0__anonymous__q1qw7t = $this.od();
      var tmp;
      if (!(!(tmp0__anonymous__q1qw7t == null) ? isInterface(tmp0__anonymous__q1qw7t, Incomplete) : false)) {
        tmp = true;
      } else {
        var tmp_0;
        if (tmp0__anonymous__q1qw7t instanceof Finishing) {
          tmp_0 = tmp0__anonymous__q1qw7t.kh();
        } else {
          tmp_0 = false;
        }
        tmp = tmp_0;
      }
      if (tmp) {
        return get_COMPLETING_ALREADY();
      }
      var tmp_1 = createCauseException($this, cause);
      var proposedUpdate = CompletedExceptionally_init_$Create$(tmp_1, false, 2, null);
      var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, proposedUpdate);
      if (!(finalState === get_COMPLETING_RETRY()))
        return finalState;
    }
  }
  function createCauseException($this, cause) {
    var tmp0_subject = cause;
    var tmp;
    if (tmp0_subject == null ? true : tmp0_subject instanceof Error) {
      var tmp1_elvis_lhs = cause;
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
        var tmp0_elvis_lhs = null;
        tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs == null ? $this.yc() : tmp0_elvis_lhs, null, $this);
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      tmp = ((!(cause == null) ? isInterface(cause, ParentJob) : false) ? cause : THROW_CCE()).ce();
    }
    return tmp;
  }
  function makeCancelling($this, cause) {
    var causeExceptionCache = null;
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      var tmp$ret$7;
      $l$block: {
        // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>' call
        var tmp0__anonymous__q1qw7t = $this.od();
        var tmp0_subject = tmp0__anonymous__q1qw7t;
        if (tmp0_subject instanceof Finishing) {
          var tmp$ret$4;
          // Inline function 'kotlinx.coroutines.internal.synchronized' call
          var tmp$ret$3;
          // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>' call
          if (tmp0__anonymous__q1qw7t.lh())
            return get_TOO_LATE_TO_CANCEL();
          var wasCancelling = tmp0__anonymous__q1qw7t.hh();
          if (!(cause == null) ? true : !wasCancelling) {
            var tmp0_elvis_lhs = causeExceptionCache;
            var tmp;
            if (tmp0_elvis_lhs == null) {
              var tmp$ret$0;
              // Inline function 'kotlin.also' call
              var tmp0_also = createCauseException($this, cause);
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>.<anonymous>' call
              causeExceptionCache = tmp0_also;
              tmp$ret$0 = tmp0_also;
              tmp = tmp$ret$0;
            } else {
              tmp = tmp0_elvis_lhs;
            }
            var causeException = tmp;
            tmp0__anonymous__q1qw7t.mh(causeException);
          }
          var tmp$ret$2;
          // Inline function 'kotlin.takeIf' call
          var tmp1_takeIf = tmp0__anonymous__q1qw7t.nh();
          // Inline function 'kotlin.contracts.contract' call
          var tmp_0;
          var tmp$ret$1;
          // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$1 = !wasCancelling;
          if (tmp$ret$1) {
            tmp_0 = tmp1_takeIf;
          } else {
            tmp_0 = null;
          }
          tmp$ret$2 = tmp_0;
          tmp$ret$3 = tmp$ret$2;
          tmp$ret$4 = tmp$ret$3;
          var notifyRootCause = tmp$ret$4;
          var tmp1_safe_receiver = notifyRootCause;
          if (tmp1_safe_receiver == null)
            null;
          else {
            var tmp$ret$5;
            // Inline function 'kotlin.let' call
            // Inline function 'kotlin.contracts.contract' call
            notifyCancelling($this, tmp0__anonymous__q1qw7t.dh_1, tmp1_safe_receiver);
            tmp$ret$5 = Unit_getInstance();
          }
          return get_COMPLETING_ALREADY();
        } else {
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
            var tmp2_elvis_lhs = causeExceptionCache;
            var tmp_1;
            if (tmp2_elvis_lhs == null) {
              var tmp$ret$6;
              // Inline function 'kotlin.also' call
              var tmp0_also_0 = createCauseException($this, cause);
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>' call
              causeExceptionCache = tmp0_also_0;
              tmp$ret$6 = tmp0_also_0;
              tmp_1 = tmp$ret$6;
            } else {
              tmp_1 = tmp2_elvis_lhs;
            }
            var causeException_0 = tmp_1;
            if (tmp0__anonymous__q1qw7t.vc()) {
              if (tryMakeCancelling($this, tmp0__anonymous__q1qw7t, causeException_0))
                return get_COMPLETING_ALREADY();
            } else {
              var finalState = tryMakeCompleting($this, tmp0__anonymous__q1qw7t, CompletedExceptionally_init_$Create$(causeException_0, false, 2, null));
              if (finalState === get_COMPLETING_ALREADY()) {
                // Inline function 'kotlin.error' call
                var tmp1_error = 'Cannot happen in ' + toString_2(tmp0__anonymous__q1qw7t);
                throw IllegalStateException_init_$Create$_0(toString_3(tmp1_error));
              } else if (finalState === get_COMPLETING_RETRY()) {
                tmp$ret$7 = Unit_getInstance();
                break $l$block;
              } else
                return finalState;
            }
          } else {
            return get_TOO_LATE_TO_CANCEL();
          }
        }
      }
    }
  }
  function getOrPromoteCancellingList($this, state) {
    var tmp1_elvis_lhs = state.mg();
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_subject = state;
      var tmp_0;
      if (tmp0_subject instanceof Empty) {
        tmp_0 = new NodeList();
      } else {
        if (tmp0_subject instanceof JobNode) {
          promoteSingleToNodeList($this, state);
          tmp_0 = null;
        } else {
          var tmp0_error = 'State should have list: ' + state;
          throw IllegalStateException_init_$Create$_0(toString_3(tmp0_error));
        }
      }
      tmp = tmp_0;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryMakeCancelling($this, state, rootCause) {
    // Inline function 'kotlinx.coroutines.assert' call
    // Inline function 'kotlinx.coroutines.assert' call
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var cancelling = new Finishing(list, false, rootCause);
    if (!$this.oc_1.atomicfu$compareAndSet(state, cancelling))
      return false;
    notifyCancelling($this, list, rootCause);
    return true;
  }
  function tryMakeCompleting($this, state, proposedUpdate) {
    if (!(!(state == null) ? isInterface(state, Incomplete) : false))
      return get_COMPLETING_ALREADY();
    var tmp;
    var tmp_0;
    var tmp_1;
    if (state instanceof Empty) {
      tmp_1 = true;
    } else {
      tmp_1 = state instanceof JobNode;
    }
    if (tmp_1) {
      tmp_0 = !(state instanceof ChildHandleNode);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = !(proposedUpdate instanceof CompletedExceptionally);
    } else {
      tmp = false;
    }
    if (tmp) {
      if (tryFinalizeSimpleState($this, state, proposedUpdate)) {
        return proposedUpdate;
      }
      return get_COMPLETING_RETRY();
    }
    return tryMakeCompletingSlowPath($this, state, proposedUpdate);
  }
  function tryMakeCompletingSlowPath($this, state, proposedUpdate) {
    var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return get_COMPLETING_RETRY();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var list = tmp;
    var tmp1_elvis_lhs = state instanceof Finishing ? state : null;
    var finishing = tmp1_elvis_lhs == null ? new Finishing(list, false, null) : tmp1_elvis_lhs;
    var notifyRootCause = null;
    var tmp$ret$3;
    // Inline function 'kotlinx.coroutines.internal.synchronized' call
    if (finishing.kh())
      return get_COMPLETING_ALREADY();
    finishing.oh(true);
    if (!(finishing === state)) {
      if (!$this.oc_1.atomicfu$compareAndSet(state, finishing))
        return get_COMPLETING_RETRY();
    }
    // Inline function 'kotlinx.coroutines.assert' call
    var wasCancelling = finishing.hh();
    var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      finishing.mh(tmp0_safe_receiver.ad_1);
      tmp$ret$0 = Unit_getInstance();
    }
    var tmp$ret$2;
    // Inline function 'kotlin.takeIf' call
    var tmp0_takeIf = finishing.nh();
    // Inline function 'kotlin.contracts.contract' call
    var tmp_0;
    var tmp$ret$1;
    // Inline function 'kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath.<anonymous>.<anonymous>' call
    tmp$ret$1 = !wasCancelling;
    if (tmp$ret$1) {
      tmp_0 = tmp0_takeIf;
    } else {
      tmp_0 = null;
    }
    tmp$ret$2 = tmp_0;
    notifyRootCause = tmp$ret$2;
    tmp$ret$3 = Unit_getInstance();
    var tmp2_safe_receiver = notifyRootCause;
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      notifyCancelling($this, list, tmp2_safe_receiver);
      tmp$ret$4 = Unit_getInstance();
    }
    var child = firstChild($this, state);
    if (!(child == null) ? tryWaitForChild($this, finishing, child, proposedUpdate) : false)
      return get_COMPLETING_WAITING_CHILDREN();
    return finalizeFinishingState($this, finishing, proposedUpdate);
  }
  function _get_exceptionOrNull__b3j7js(_this__u8e3s4, $this) {
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CompletedExceptionally ? _this__u8e3s4 : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ad_1;
  }
  function firstChild($this, state) {
    var tmp1_elvis_lhs = state instanceof ChildHandleNode ? state : null;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = state.mg();
      tmp = tmp0_safe_receiver == null ? null : nextChild(tmp0_safe_receiver, $this);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function tryWaitForChild($this, state, child, proposedUpdate) {
    var $this_0 = $this;
    var state_0 = state;
    var child_0 = child;
    var proposedUpdate_0 = proposedUpdate;
    $l$1: do {
      $l$0: do {
        var tmp = child_0.th_1;
        var tmp$ret$1;
        // Inline function 'kotlinx.coroutines.asHandler' call
        var tmp0__get_asHandler__gq3rkj = new ChildCompletion($this_0, state_0, child_0, proposedUpdate_0);
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
        tmp$ret$1 = tmp$ret$0;
        var handle = tmp.wd(false, false, tmp$ret$1, 1, null);
        if (!(handle === NonDisposableHandle_getInstance()))
          return true;
        var tmp0_elvis_lhs = nextChild(child_0, $this_0);
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          return false;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        var nextChild_0 = tmp_0;
        var tmp0 = $this_0;
        var tmp1 = state_0;
        var tmp2 = nextChild_0;
        var tmp3 = proposedUpdate_0;
        $this_0 = tmp0;
        state_0 = tmp1;
        child_0 = tmp2;
        proposedUpdate_0 = tmp3;
        continue $l$0;
      }
       while (false);
    }
     while (true);
  }
  function continueCompleting($this, state, lastChild, proposedUpdate) {
    // Inline function 'kotlinx.coroutines.assert' call
    var waitChild = nextChild(lastChild, $this);
    if (!(waitChild == null) ? tryWaitForChild($this, state, waitChild, proposedUpdate) : false)
      return Unit_getInstance();
    var finalState = finalizeFinishingState($this, state, proposedUpdate);
    $this.fd(finalState);
  }
  function nextChild(_this__u8e3s4, $this) {
    var cur = _this__u8e3s4;
    $l$loop: while (true) {
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.internal.LinkedListNode.isRemoved' call
      var tmp0__get_isRemoved__hsfvgr = cur;
      tmp$ret$0 = tmp0__get_isRemoved__hsfvgr.tg_1;
      if (!tmp$ret$0) {
        break $l$loop;
      }
      var tmp$ret$1;
      // Inline function 'kotlinx.coroutines.internal.LinkedListNode.prevNode' call
      var tmp1__get_prevNode__b1i0ed = cur;
      tmp$ret$1 = tmp1__get_prevNode__b1i0ed.sg_1;
      cur = tmp$ret$1;
    }
    $l$loop_0: while (true) {
      var tmp$ret$2;
      // Inline function 'kotlinx.coroutines.internal.LinkedListNode.nextNode' call
      var tmp2__get_nextNode__ek7k4a = cur;
      tmp$ret$2 = tmp2__get_nextNode__ek7k4a.rg_1;
      cur = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlinx.coroutines.internal.LinkedListNode.isRemoved' call
      var tmp3__get_isRemoved__lodk3s = cur;
      tmp$ret$3 = tmp3__get_isRemoved__lodk3s.tg_1;
      if (tmp$ret$3)
        continue $l$loop_0;
      if (cur instanceof ChildHandleNode)
        return cur;
      if (cur instanceof NodeList)
        return null;
    }
  }
  function stateString($this, state) {
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.hh() ? 'Cancelling' : state.kh() ? 'Completing' : 'Active';
    } else {
      if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
        tmp = state.vc() ? 'Active' : 'New';
      } else {
        if (tmp0_subject instanceof CompletedExceptionally) {
          tmp = 'Cancelled';
        } else {
          tmp = 'Completed';
        }
      }
    }
    return tmp;
  }
  function Finishing(list, isCompleting, rootCause) {
    this.dh_1 = list;
    this.eh_1 = atomic$boolean$1(isCompleting);
    this.fh_1 = atomic$ref$1(rootCause);
    this.gh_1 = atomic$ref$1(null);
  }
  Finishing.prototype.mg = function () {
    return this.dh_1;
  };
  Finishing.prototype.oh = function (value) {
    this.eh_1.kotlinx$atomicfu$value = value;
  };
  Finishing.prototype.kh = function () {
    return this.eh_1.kotlinx$atomicfu$value;
  };
  Finishing.prototype.uh = function (value) {
    this.fh_1.kotlinx$atomicfu$value = value;
  };
  Finishing.prototype.nh = function () {
    return this.fh_1.kotlinx$atomicfu$value;
  };
  Finishing.prototype.lh = function () {
    return _get_exceptionsHolder__nhszp(this) === get_SEALED();
  };
  Finishing.prototype.hh = function () {
    return !(this.nh() == null);
  };
  Finishing.prototype.vc = function () {
    return this.nh() == null;
  };
  Finishing.prototype.ih = function (proposedException) {
    var eh = _get_exceptionsHolder__nhszp(this);
    var tmp;
    if (eh == null) {
      tmp = allocateList(this);
    } else {
      if (eh instanceof Error) {
        var tmp$ret$0;
        // Inline function 'kotlin.also' call
        var tmp0_also = allocateList(this);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlinx.coroutines.Finishing.sealLocked.<anonymous>' call
        tmp0_also.e(eh);
        tmp$ret$0 = tmp0_also;
        tmp = tmp$ret$0;
      } else {
        if (eh instanceof ArrayList) {
          tmp = eh instanceof ArrayList ? eh : THROW_CCE();
        } else {
          var tmp1_error = 'State is ' + toString_2(eh);
          throw IllegalStateException_init_$Create$_0(toString_3(tmp1_error));
        }
      }
    }
    var list = tmp;
    var rootCause = this.nh();
    var tmp0_safe_receiver = rootCause;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      list.o6(0, tmp0_safe_receiver);
      tmp$ret$1 = Unit_getInstance();
    }
    if (!(proposedException == null) ? !equals_0(proposedException, rootCause) : false) {
      list.e(proposedException);
    }
    _set_exceptionsHolder__tqm22h(this, get_SEALED());
    return list;
  };
  Finishing.prototype.mh = function (exception) {
    var rootCause = this.nh();
    if (rootCause == null) {
      this.uh(exception);
      return Unit_getInstance();
    }
    if (exception === rootCause)
      return Unit_getInstance();
    var eh = _get_exceptionsHolder__nhszp(this);
    if (eh == null) {
      _set_exceptionsHolder__tqm22h(this, exception);
    } else {
      if (eh instanceof Error) {
        if (exception === eh)
          return Unit_getInstance();
        var tmp$ret$0;
        // Inline function 'kotlin.apply' call
        var tmp0_apply = allocateList(this);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlinx.coroutines.Finishing.addExceptionLocked.<anonymous>' call
        tmp0_apply.e(eh);
        tmp0_apply.e(exception);
        tmp$ret$0 = tmp0_apply;
        _set_exceptionsHolder__tqm22h(this, tmp$ret$0);
      } else {
        if (eh instanceof ArrayList) {
          (eh instanceof ArrayList ? eh : THROW_CCE()).e(exception);
        } else {
          var tmp1_error = 'State is ' + toString_2(eh);
          throw IllegalStateException_init_$Create$_0(toString_3(tmp1_error));
        }
      }
    }
  };
  Finishing.prototype.toString = function () {
    return 'Finishing[cancelling=' + this.hh() + ', completing=' + this.kh() + ', rootCause=' + this.nh() + ', exceptions=' + toString_2(_get_exceptionsHolder__nhszp(this)) + ', list=' + this.dh_1 + ']';
  };
  function ChildCompletion(parent, state, child, proposedUpdate) {
    JobNode.call(this);
    this.zh_1 = parent;
    this.ai_1 = state;
    this.bi_1 = child;
    this.ci_1 = proposedUpdate;
  }
  ChildCompletion.prototype.di = function (cause) {
    continueCompleting(this.zh_1, this.ai_1, this.bi_1, this.ci_1);
  };
  ChildCompletion.prototype.invoke = function (cause) {
    return this.di(cause);
  };
  function JobSupport(active) {
    this.oc_1 = atomic$ref$1(active ? get_EMPTY_ACTIVE() : get_EMPTY_NEW());
    this.pc_1 = atomic$ref$1(null);
  }
  JobSupport.prototype.h1 = function () {
    return Key_getInstance_2();
  };
  JobSupport.prototype.md = function (value) {
    this.pc_1.kotlinx$atomicfu$value = value;
  };
  JobSupport.prototype.nd = function () {
    return this.pc_1.kotlinx$atomicfu$value;
  };
  JobSupport.prototype.qc = function (parent) {
    // Inline function 'kotlinx.coroutines.assert' call
    if (parent == null) {
      this.md(NonDisposableHandle_getInstance());
      return Unit_getInstance();
    }
    parent.qd();
    var handle = parent.de(this);
    this.md(handle);
    if (this.pd()) {
      handle.ye();
      this.md(NonDisposableHandle_getInstance());
    }
  };
  JobSupport.prototype.od = function () {
    // Inline function 'kotlinx.atomicfu.loop' call
    var tmp0_loop = this.oc_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.<get-state>.<anonymous>' call
      var tmp1__anonymous__uwfjfc = tmp0_loop.kotlinx$atomicfu$value;
      if (!(tmp1__anonymous__uwfjfc instanceof OpDescriptor))
        return tmp1__anonymous__uwfjfc;
      tmp1__anonymous__uwfjfc.ei(this);
    }
  };
  JobSupport.prototype.vc = function () {
    var state = this.od();
    var tmp;
    if (!(state == null) ? isInterface(state, Incomplete) : false) {
      tmp = state.vc();
    } else {
      tmp = false;
    }
    return tmp;
  };
  JobSupport.prototype.pd = function () {
    var tmp = this.od();
    return !(!(tmp == null) ? isInterface(tmp, Incomplete) : false);
  };
  JobSupport.prototype.qd = function () {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.start.<anonymous>' call
      var tmp0__anonymous__q1qw7t = this.od();
      var tmp0_subject = startInternal(this, tmp0__anonymous__q1qw7t);
      if (tmp0_subject === 0)
        return false;
      else if (tmp0_subject === 1)
        return true;
    }
  };
  JobSupport.prototype.rd = function () {
  };
  JobSupport.prototype.sd = function () {
    var state = this.od();
    var tmp;
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.nh();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.td(tmp0_safe_receiver, get_classSimpleName(this) + ' is cancelling');
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var tmp0_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$_0(toString_3(tmp0_error));
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      if (!(state == null) ? isInterface(state, Incomplete) : false) {
        var tmp1_error = 'Job is still new or active: ' + this;
        throw IllegalStateException_init_$Create$_0(toString_3(tmp1_error));
      } else {
        if (state instanceof CompletedExceptionally) {
          tmp = this.ud(state.ad_1, null, 1, null);
        } else {
          tmp = new JobCancellationException(get_classSimpleName(this) + ' has completed normally', null, this);
        }
      }
    }
    return tmp;
  };
  JobSupport.prototype.td = function (_this__u8e3s4, message) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof CancellationException ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
      var tmp0_elvis_lhs_0 = message;
      tmp$ret$0 = new JobCancellationException(tmp0_elvis_lhs_0 == null ? this.yc() : tmp0_elvis_lhs_0, _this__u8e3s4, this);
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  JobSupport.prototype.ud = function (_this__u8e3s4, message, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      message = null;
    return this.td(_this__u8e3s4, message);
  };
  JobSupport.prototype.pe = function (handler) {
    return this.vd(false, true, handler);
  };
  JobSupport.prototype.vd = function (onCancelling, invokeImmediately, handler) {
    var node = makeNode(this, handler, onCancelling);
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlinx.coroutines.JobSupport.invokeOnCompletion.<anonymous>' call
        var tmp0__anonymous__q1qw7t = this.od();
        var tmp0_subject = tmp0__anonymous__q1qw7t;
        if (tmp0_subject instanceof Empty) {
          if (tmp0__anonymous__q1qw7t.lg_1) {
            if (this.oc_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, node))
              return node;
          } else {
            promoteEmptyToNodeList(this, tmp0__anonymous__q1qw7t);
          }
        } else {
          if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
            var list = tmp0__anonymous__q1qw7t.mg();
            if (list == null) {
              promoteSingleToNodeList(this, tmp0__anonymous__q1qw7t instanceof JobNode ? tmp0__anonymous__q1qw7t : THROW_CCE());
            } else {
              var rootCause = null;
              var handle = NonDisposableHandle_getInstance();
              var tmp;
              if (onCancelling) {
                tmp = tmp0__anonymous__q1qw7t instanceof Finishing;
              } else {
                tmp = false;
              }
              if (tmp) {
                var tmp$ret$2;
                // Inline function 'kotlinx.coroutines.internal.synchronized' call
                rootCause = tmp0__anonymous__q1qw7t.nh();
                var tmp_0;
                var tmp_1;
                if (rootCause == null) {
                  tmp_1 = true;
                } else {
                  var tmp_2;
                  var tmp$ret$0;
                  // Inline function 'kotlinx.coroutines.isHandlerOf' call
                  tmp$ret$0 = handler instanceof ChildHandleNode;
                  if (tmp$ret$0) {
                    tmp_2 = !tmp0__anonymous__q1qw7t.kh();
                  } else {
                    tmp_2 = false;
                  }
                  tmp_1 = tmp_2;
                }
                if (tmp_1) {
                  if (!addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node)) {
                    tmp$ret$1 = Unit_getInstance();
                    break $l$block;
                  }
                  if (rootCause == null)
                    return node;
                  handle = node;
                  tmp_0 = Unit_getInstance();
                }
                tmp$ret$2 = tmp_0;
              }
              if (!(rootCause == null)) {
                if (invokeImmediately) {
                  invokeIt(handler, rootCause);
                }
                return handle;
              } else {
                if (addLastAtomic(this, tmp0__anonymous__q1qw7t, list, node))
                  return node;
              }
            }
          } else {
            if (invokeImmediately) {
              var tmp1_safe_receiver = tmp0__anonymous__q1qw7t instanceof CompletedExceptionally ? tmp0__anonymous__q1qw7t : null;
              invokeIt(handler, tmp1_safe_receiver == null ? null : tmp1_safe_receiver.ad_1);
            }
            return NonDisposableHandle_getInstance();
          }
        }
      }
    }
  };
  JobSupport.prototype.xd = function (node) {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.removeNode.<anonymous>' call
      var tmp0__anonymous__q1qw7t = this.od();
      var tmp0_subject = tmp0__anonymous__q1qw7t;
      if (tmp0_subject instanceof JobNode) {
        if (!(tmp0__anonymous__q1qw7t === node))
          return Unit_getInstance();
        if (this.oc_1.atomicfu$compareAndSet(tmp0__anonymous__q1qw7t, get_EMPTY_ACTIVE()))
          return Unit_getInstance();
      } else {
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
          if (!(tmp0__anonymous__q1qw7t.mg() == null)) {
            node.bh();
          }
          return Unit_getInstance();
        } else {
          return Unit_getInstance();
        }
      }
    }
  };
  JobSupport.prototype.yd = function () {
    return false;
  };
  JobSupport.prototype.yc = function () {
    return 'Job was cancelled';
  };
  JobSupport.prototype.zd = function (parentJob) {
    this.be(parentJob);
  };
  JobSupport.prototype.ae = function (cause) {
    if (cause instanceof CancellationException)
      return true;
    return this.be(cause) ? this.ge() : false;
  };
  JobSupport.prototype.be = function (cause) {
    var finalState = get_COMPLETING_ALREADY();
    if (this.yd()) {
      finalState = cancelMakeCompleting(this, cause);
      if (finalState === get_COMPLETING_WAITING_CHILDREN())
        return true;
    }
    if (finalState === get_COMPLETING_ALREADY()) {
      finalState = makeCancelling(this, cause);
    }
    var tmp;
    if (finalState === get_COMPLETING_ALREADY()) {
      tmp = true;
    } else if (finalState === get_COMPLETING_WAITING_CHILDREN()) {
      tmp = true;
    } else if (finalState === get_TOO_LATE_TO_CANCEL()) {
      tmp = false;
    } else {
      this.fd(finalState);
      tmp = true;
    }
    return tmp;
  };
  JobSupport.prototype.ce = function () {
    var state = this.od();
    var tmp0_subject = state;
    var tmp;
    if (tmp0_subject instanceof Finishing) {
      tmp = state.nh();
    } else {
      if (tmp0_subject instanceof CompletedExceptionally) {
        tmp = state.ad_1;
      } else {
        if (!(tmp0_subject == null) ? isInterface(tmp0_subject, Incomplete) : false) {
          var tmp0_error = 'Cannot be cancelling child in this state: ' + toString_2(state);
          throw IllegalStateException_init_$Create$_0(toString_3(tmp0_error));
        } else {
          tmp = null;
        }
      }
    }
    var rootCause = tmp;
    var tmp1_elvis_lhs = rootCause instanceof CancellationException ? rootCause : null;
    return tmp1_elvis_lhs == null ? new JobCancellationException('Parent job is ' + stateString(this, state), rootCause, this) : tmp1_elvis_lhs;
  };
  JobSupport.prototype.dd = function (proposedUpdate) {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      var tmp$ret$0;
      $l$block: {
        // Inline function 'kotlinx.coroutines.JobSupport.makeCompletingOnce.<anonymous>' call
        var tmp0__anonymous__q1qw7t = this.od();
        var finalState = tryMakeCompleting(this, tmp0__anonymous__q1qw7t, proposedUpdate);
        if (finalState === get_COMPLETING_ALREADY())
          throw IllegalStateException_init_$Create$_1('Job ' + this + ' is already complete or completing, ' + ('but is being completed with ' + toString_2(proposedUpdate)), _get_exceptionOrNull__b3j7js(proposedUpdate, this));
        else if (finalState === get_COMPLETING_RETRY()) {
          tmp$ret$0 = Unit_getInstance();
          break $l$block;
        } else
          return finalState;
      }
    }
  };
  JobSupport.prototype.de = function (child) {
    var tmp$ret$1;
    // Inline function 'kotlinx.coroutines.asHandler' call
    var tmp0__get_asHandler__gq3rkj = new ChildHandleNode(child);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0__get_asHandler__gq3rkj;
    tmp$ret$1 = tmp$ret$0;
    var tmp = this.wd(true, false, tmp$ret$1, 2, null);
    return isInterface(tmp, ChildHandle) ? tmp : THROW_CCE();
  };
  JobSupport.prototype.gd = function (exception) {
    throw exception;
  };
  JobSupport.prototype.ee = function (cause) {
  };
  JobSupport.prototype.fe = function () {
    return false;
  };
  JobSupport.prototype.ge = function () {
    return true;
  };
  JobSupport.prototype.he = function (exception) {
    return false;
  };
  JobSupport.prototype.zc = function (state) {
  };
  JobSupport.prototype.fd = function (state) {
  };
  JobSupport.prototype.toString = function () {
    return this.ie() + '@' + get_hexAddress(this);
  };
  JobSupport.prototype.ie = function () {
    return this.hd() + '{' + stateString(this, this.od()) + '}';
  };
  JobSupport.prototype.hd = function () {
    return get_classSimpleName(this);
  };
  JobSupport.prototype.qe = function () {
    var state = this.od();
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(!(state == null) ? isInterface(state, Incomplete) : false)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.JobSupport.getCompletionExceptionOrNull.<anonymous>' call
      tmp$ret$0 = 'This job has not completed yet';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$_0(toString_3(message));
    }
    return _get_exceptionOrNull__b3j7js(state, this);
  };
  JobSupport.prototype.oe = function () {
    var state = this.od();
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(!(state == null) ? isInterface(state, Incomplete) : false)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.JobSupport.getCompletedInternal.<anonymous>' call
      tmp$ret$0 = 'This job has not completed yet';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$_0(toString_3(message));
    }
    if (state instanceof CompletedExceptionally)
      throw state.ad_1;
    return unboxState(state);
  };
  function boxIncomplete(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp;
    if (!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Incomplete) : false) {
      tmp = new IncompleteStateBox(_this__u8e3s4);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function JobCancellingNode() {
    JobNode.call(this);
  }
  function InactiveNodeList(list) {
    this.jh_1 = list;
  }
  InactiveNodeList.prototype.mg = function () {
    return this.jh_1;
  };
  InactiveNodeList.prototype.vc = function () {
    return false;
  };
  InactiveNodeList.prototype.toString = function () {
    return get_DEBUG() ? this.jh_1.qg('New') : anyToString(this);
  };
  function ChildHandleNode(childJob) {
    JobCancellingNode.call(this);
    this.th_1 = childJob;
  }
  ChildHandleNode.prototype.di = function (cause) {
    return this.th_1.zd(this.ah());
  };
  ChildHandleNode.prototype.invoke = function (cause) {
    return this.di(cause);
  };
  ChildHandleNode.prototype.ae = function (cause) {
    return this.ah().ae(cause);
  };
  function InvokeOnCancelling(handler) {
    JobCancellingNode.call(this);
    this.ji_1 = handler;
    this.ki_1 = atomic$int$1(0);
  }
  InvokeOnCancelling.prototype.di = function (cause) {
    if (this.ki_1.atomicfu$compareAndSet(0, 1))
      this.ji_1(cause);
  };
  InvokeOnCancelling.prototype.invoke = function (cause) {
    return this.di(cause);
  };
  function InvokeOnCompletion(handler) {
    JobNode.call(this);
    this.pi_1 = handler;
  }
  InvokeOnCompletion.prototype.di = function (cause) {
    return this.pi_1(cause);
  };
  InvokeOnCompletion.prototype.invoke = function (cause) {
    return this.di(cause);
  };
  function unboxState(_this__u8e3s4) {
    init_properties_JobSupport_kt_iaxwag();
    var tmp0_safe_receiver = _this__u8e3s4 instanceof IncompleteStateBox ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.qi_1;
    return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  }
  function IncompleteStateBox(state) {
    this.qi_1 = state;
  }
  var properties_initialized_JobSupport_kt_5iq8a4;
  function init_properties_JobSupport_kt_iaxwag() {
    if (properties_initialized_JobSupport_kt_5iq8a4) {
    } else {
      properties_initialized_JobSupport_kt_5iq8a4 = true;
      COMPLETING_ALREADY = new Symbol('COMPLETING_ALREADY');
      COMPLETING_WAITING_CHILDREN = new Symbol('COMPLETING_WAITING_CHILDREN');
      COMPLETING_RETRY = new Symbol('COMPLETING_RETRY');
      TOO_LATE_TO_CANCEL = new Symbol('TOO_LATE_TO_CANCEL');
      SEALED = new Symbol('SEALED');
      EMPTY_NEW = new Empty(false);
      EMPTY_ACTIVE = new Empty(true);
    }
  }
  function MainCoroutineDispatcher() {
    CoroutineDispatcher.call(this);
  }
  MainCoroutineDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.ti();
    return tmp0_elvis_lhs == null ? get_classSimpleName(this) + '@' + get_hexAddress(this) : tmp0_elvis_lhs;
  };
  MainCoroutineDispatcher.prototype.ti = function () {
    var main = Dispatchers_getInstance().yi();
    if (this === main)
      return 'Dispatchers.Main';
    var tmp;
    try {
      tmp = main.si();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof UnsupportedOperationException) {
        tmp_0 = null;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var immediate = tmp;
    if (this === immediate)
      return 'Dispatchers.Main.immediate';
    return null;
  };
  function TimeoutCancellationException() {
  }
  function Unconfined() {
    Unconfined_instance = this;
    CoroutineDispatcher.call(this);
  }
  Unconfined.prototype.df = function (context) {
    return false;
  };
  Unconfined.prototype.ef = function (context, block) {
    var yieldContext = context.x2(Key_getInstance_3());
    if (!(yieldContext == null)) {
      yieldContext.bj_1 = true;
      return Unit_getInstance();
    }
    throw UnsupportedOperationException_init_$Create$_0('Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.');
  };
  Unconfined.prototype.toString = function () {
    return 'Dispatchers.Unconfined';
  };
  var Unconfined_instance;
  function Unconfined_getInstance() {
    if (Unconfined_instance == null)
      new Unconfined();
    return Unconfined_instance;
  }
  function Key_3() {
    Key_instance_3 = this;
  }
  var Key_instance_3;
  function Key_getInstance_3() {
    if (Key_instance_3 == null)
      new Key_3();
    return Key_instance_3;
  }
  function ensureCapacity($this) {
    var currentSize = $this.sf_1.length;
    var newCapacity = currentSize << 1;
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp$ret$0 = fillArrayVal(Array(newCapacity), null);
    var newElements = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.copyInto' call
    var tmp0_copyInto = $this.sf_1;
    var tmp1_copyInto = $this.tf_1;
    var tmp2_copyInto = tmp0_copyInto.length;
    arrayCopy(tmp0_copyInto, newElements, 0, tmp1_copyInto, tmp2_copyInto);
    tmp$ret$1 = newElements;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.copyInto' call
    var tmp3_copyInto = $this.sf_1;
    var tmp4_copyInto = $this.sf_1.length - $this.tf_1 | 0;
    var tmp5_copyInto = $this.tf_1;
    arrayCopy(tmp3_copyInto, newElements, tmp4_copyInto, 0, tmp5_copyInto);
    tmp$ret$2 = newElements;
    $this.sf_1 = newElements;
    $this.tf_1 = 0;
    $this.uf_1 = currentSize;
  }
  function ArrayQueue() {
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp$ret$0 = fillArrayVal(Array(16), null);
    tmp.sf_1 = tmp$ret$0;
    this.tf_1 = 0;
    this.uf_1 = 0;
  }
  ArrayQueue.prototype.cg = function () {
    return this.tf_1 === this.uf_1;
  };
  ArrayQueue.prototype.zf = function (element) {
    this.sf_1[this.uf_1] = element;
    this.uf_1 = (this.uf_1 + 1 | 0) & (this.sf_1.length - 1 | 0);
    if (this.uf_1 === this.tf_1) {
      ensureCapacity(this);
    }
  };
  ArrayQueue.prototype.vf = function () {
    if (this.tf_1 === this.uf_1)
      return null;
    var element = this.sf_1[this.tf_1];
    this.sf_1[this.tf_1] = null;
    this.tf_1 = (this.tf_1 + 1 | 0) & (this.sf_1.length - 1 | 0);
    return isObject(element) ? element : THROW_CCE();
  };
  function OpDescriptor() {
  }
  function get_UNDEFINED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return UNDEFINED;
  }
  var UNDEFINED;
  function get_REUSABLE_CLAIMED() {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    return REUSABLE_CLAIMED;
  }
  var REUSABLE_CLAIMED;
  function resumeCancellableWith(_this__u8e3s4, result, onCancellation) {
    init_properties_DispatchedContinuation_kt_s7rtw6();
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof DispatchedContinuation) {
      var tmp1_resumeCancellableWith = _this__u8e3s4;
      var state = toState(result, onCancellation);
      var tmp_0;
      if (tmp1_resumeCancellableWith.gf_1.df(tmp1_resumeCancellableWith.t2())) {
        tmp1_resumeCancellableWith.if_1 = state;
        tmp1_resumeCancellableWith.wf_1 = get_MODE_CANCELLABLE();
        tmp1_resumeCancellableWith.gf_1.ef(tmp1_resumeCancellableWith.t2(), tmp1_resumeCancellableWith);
        tmp_0 = Unit_getInstance();
      } else {
        var tmp$ret$0;
        $l$block: {
          // Inline function 'kotlinx.coroutines.internal.executeUnconfined' call
          var tmp0_executeUnconfined = get_MODE_CANCELLABLE();
          // Inline function 'kotlinx.coroutines.assert' call
          var eventLoop = ThreadLocalEventLoop_getInstance().hg();
          if (false ? eventLoop.bg() : false) {
            tmp$ret$0 = false;
            break $l$block;
          }
          var tmp_1;
          if (eventLoop.ag()) {
            tmp1_resumeCancellableWith.if_1 = state;
            tmp1_resumeCancellableWith.wf_1 = tmp0_executeUnconfined;
            eventLoop.yf(tmp1_resumeCancellableWith);
            tmp_1 = true;
          } else {
            // Inline function 'kotlinx.coroutines.runUnconfinedEventLoop' call
            eventLoop.dg(true);
            try {
              // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith.<anonymous>' call
              var tmp$ret$3;
              $l$block_0: {
                // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled' call
                var job = tmp1_resumeCancellableWith.t2().x2(Key_getInstance_2());
                if (!(job == null) ? !job.vc() : false) {
                  var cause = job.sd();
                  tmp1_resumeCancellableWith.cj(state, cause);
                  var tmp$ret$2;
                  // Inline function 'kotlin.coroutines.resumeWithException' call
                  var tmp$ret$1;
                  // Inline function 'kotlin.Companion.failure' call
                  var tmp0_failure = Companion_getInstance_4();
                  tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(cause));
                  tmp1_resumeCancellableWith.u2(tmp$ret$1);
                  tmp$ret$2 = Unit_getInstance();
                  tmp$ret$3 = true;
                  break $l$block_0;
                }
                tmp$ret$3 = false;
              }
              if (!tmp$ret$3) {
                // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith' call
                var tmp$ret$4;
                // Inline function 'kotlinx.coroutines.withContinuationContext' call
                var tmp0_withContinuationContext = tmp1_resumeCancellableWith.hf_1;
                var tmp1_withContinuationContext = tmp1_resumeCancellableWith.jf_1;
                tmp1_resumeCancellableWith.hf_1.u2(result);
                tmp$ret$4 = Unit_getInstance();
              }
              $l$loop: while (true) {
                if (!eventLoop.rf())
                  break $l$loop;
              }
            } catch ($p) {
              if ($p instanceof Error) {
                tmp1_resumeCancellableWith.dj($p, null);
              } else {
                throw $p;
              }
            }
            finally {
              eventLoop.eg(true);
            }
            tmp_1 = false;
          }
          tmp$ret$0 = tmp_1;
        }
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } else {
      _this__u8e3s4.u2(result);
      tmp = Unit_getInstance();
    }
    return tmp;
  }
  function resumeCancellableWith$default(_this__u8e3s4, result, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      onCancellation = null;
    return resumeCancellableWith(_this__u8e3s4, result, onCancellation);
  }
  function _get_reusableCancellableContinuation__9qex09($this) {
    var tmp = $this.kf_1.kotlinx$atomicfu$value;
    return tmp instanceof CancellableContinuationImpl ? tmp : null;
  }
  function DispatchedContinuation(dispatcher, continuation) {
    DispatchedTask.call(this, get_MODE_UNINITIALIZED());
    this.gf_1 = dispatcher;
    this.hf_1 = continuation;
    this.if_1 = get_UNDEFINED();
    this.jf_1 = threadContextElements(this.t2());
    this.kf_1 = atomic$ref$1(null);
  }
  DispatchedContinuation.prototype.t2 = function () {
    return this.hf_1.t2();
  };
  DispatchedContinuation.prototype.ej = function () {
    // Inline function 'kotlinx.atomicfu.loop' call
    var tmp0_loop = this.kf_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability.<anonymous>' call
      var tmp1__anonymous__uwfjfc = tmp0_loop.kotlinx$atomicfu$value;
      if (!(tmp1__anonymous__uwfjfc === get_REUSABLE_CLAIMED()))
        return Unit_getInstance();
    }
  };
  DispatchedContinuation.prototype.lf = function () {
    this.ej();
    var tmp0_safe_receiver = _get_reusableCancellableContinuation__9qex09(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.xe();
    }
  };
  DispatchedContinuation.prototype.fj = function () {
    var state = this.if_1;
    // Inline function 'kotlinx.coroutines.assert' call
    this.if_1 = get_UNDEFINED();
    return state;
  };
  DispatchedContinuation.prototype.gj = function () {
    return this;
  };
  DispatchedContinuation.prototype.u2 = function (result) {
    var context = this.hf_1.t2();
    var state = toState$default(result, null, 1, null);
    if (this.gf_1.df(context)) {
      this.if_1 = state;
      this.wf_1 = get_MODE_ATOMIC();
      this.gf_1.ef(context, this);
    } else {
      var tmp$ret$0;
      $l$block: {
        // Inline function 'kotlinx.coroutines.internal.executeUnconfined' call
        var tmp0_executeUnconfined = get_MODE_ATOMIC();
        // Inline function 'kotlinx.coroutines.assert' call
        var eventLoop = ThreadLocalEventLoop_getInstance().hg();
        if (false ? eventLoop.bg() : false) {
          tmp$ret$0 = false;
          break $l$block;
        }
        var tmp;
        if (eventLoop.ag()) {
          this.if_1 = state;
          this.wf_1 = tmp0_executeUnconfined;
          eventLoop.yf(this);
          tmp = true;
        } else {
          // Inline function 'kotlinx.coroutines.runUnconfinedEventLoop' call
          eventLoop.dg(true);
          try {
            // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeWith.<anonymous>' call
            var tmp$ret$1;
            // Inline function 'kotlinx.coroutines.withCoroutineContext' call
            var tmp0_withCoroutineContext = this.t2();
            var tmp1_withCoroutineContext = this.jf_1;
            this.hf_1.u2(result);
            tmp$ret$1 = Unit_getInstance();
            $l$loop: while (true) {
              if (!eventLoop.rf())
                break $l$loop;
            }
          } catch ($p) {
            if ($p instanceof Error) {
              this.dj($p, null);
            } else {
              throw $p;
            }
          }
          finally {
            eventLoop.eg(true);
          }
          tmp = false;
        }
        tmp$ret$0 = tmp;
      }
    }
  };
  DispatchedContinuation.prototype.cj = function (takenState, cause) {
    if (takenState instanceof CompletedWithCancellation) {
      takenState.bf_1(cause);
    }
  };
  DispatchedContinuation.prototype.toString = function () {
    return 'DispatchedContinuation[' + this.gf_1 + ', ' + toDebugString(this.hf_1) + ']';
  };
  var properties_initialized_DispatchedContinuation_kt_2siadq;
  function init_properties_DispatchedContinuation_kt_s7rtw6() {
    if (properties_initialized_DispatchedContinuation_kt_2siadq) {
    } else {
      properties_initialized_DispatchedContinuation_kt_2siadq = true;
      UNDEFINED = new Symbol('UNDEFINED');
      REUSABLE_CLAIMED = new Symbol('REUSABLE_CLAIMED');
    }
  }
  function get_MODE_CANCELLABLE() {
    return MODE_CANCELLABLE;
  }
  var MODE_CANCELLABLE;
  function DispatchedTask(resumeMode) {
    SchedulerTask.call(this);
    this.wf_1 = resumeMode;
  }
  DispatchedTask.prototype.cj = function (takenState, cause) {
  };
  DispatchedTask.prototype.hj = function (state) {
    return (state == null ? true : isObject(state)) ? state : THROW_CCE();
  };
  DispatchedTask.prototype.ij = function (state) {
    var tmp0_safe_receiver = state instanceof CompletedExceptionally ? state : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ad_1;
  };
  DispatchedTask.prototype.xf = function () {
    // Inline function 'kotlinx.coroutines.assert' call
    get_taskContext(this);
    var taskContext = Unit_getInstance();
    var fatalException = null;
    try {
      var tmp = this.gj();
      var delegate = tmp instanceof DispatchedContinuation ? tmp : THROW_CCE();
      var continuation = delegate.hf_1;
      var tmp$ret$5;
      // Inline function 'kotlinx.coroutines.withContinuationContext' call
      var tmp0_withContinuationContext = delegate.jf_1;
      var context = continuation.t2();
      var state = this.fj();
      var exception = this.ij(state);
      var job = (exception == null ? get_isCancellableMode(this.wf_1) : false) ? context.x2(Key_getInstance_2()) : null;
      var tmp_0;
      if (!(job == null) ? !job.vc() : false) {
        var cause = job.sd();
        this.cj(state, cause);
        var tmp$ret$0;
        // Inline function 'kotlin.Companion.failure' call
        var tmp0_failure = Companion_getInstance_4();
        var tmp1_failure = recoverStackTrace(cause, continuation);
        tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(tmp1_failure));
        continuation.u2(tmp$ret$0);
        tmp_0 = Unit_getInstance();
      } else {
        var tmp_1;
        if (!(exception == null)) {
          var tmp$ret$2;
          // Inline function 'kotlin.coroutines.resumeWithException' call
          var tmp$ret$1;
          // Inline function 'kotlin.Companion.failure' call
          var tmp0_failure_0 = Companion_getInstance_4();
          tmp$ret$1 = _Result___init__impl__xyqfz8(createFailure(exception));
          continuation.u2(tmp$ret$1);
          tmp$ret$2 = Unit_getInstance();
          tmp_1 = tmp$ret$2;
        } else {
          var tmp$ret$4;
          // Inline function 'kotlin.coroutines.resume' call
          var tmp2_resume = this.hj(state);
          var tmp$ret$3;
          // Inline function 'kotlin.Companion.success' call
          var tmp0_success = Companion_getInstance_4();
          tmp$ret$3 = _Result___init__impl__xyqfz8(tmp2_resume);
          continuation.u2(tmp$ret$3);
          tmp$ret$4 = Unit_getInstance();
          tmp_1 = tmp$ret$4;
        }
        tmp_0 = tmp_1;
      }
      tmp$ret$5 = tmp_0;
    } catch ($p) {
      if ($p instanceof Error) {
        fatalException = $p;
      } else {
        throw $p;
      }
    }
    finally {
      var tmp$ret$8;
      // Inline function 'kotlin.runCatching' call
      var tmp_2;
      try {
        var tmp$ret$6;
        // Inline function 'kotlin.Companion.success' call
        var tmp0_success_0 = Companion_getInstance_4();
        var tmp1_success = Unit_getInstance();
        tmp$ret$6 = _Result___init__impl__xyqfz8(Unit_getInstance());
        tmp_2 = tmp$ret$6;
      } catch ($p) {
        var tmp_3;
        if ($p instanceof Error) {
          var tmp$ret$7;
          // Inline function 'kotlin.Companion.failure' call
          var tmp2_failure = Companion_getInstance_4();
          tmp$ret$7 = _Result___init__impl__xyqfz8(createFailure($p));
          tmp_3 = tmp$ret$7;
        } else {
          throw $p;
        }
        tmp_2 = tmp_3;
      }
      tmp$ret$8 = tmp_2;
      var result = tmp$ret$8;
      this.dj(fatalException, Result__exceptionOrNull_impl_p6xea9(result));
    }
  };
  DispatchedTask.prototype.dj = function (exception, finallyException) {
    if (exception === null ? finallyException === null : false)
      return Unit_getInstance();
    if (!(exception === null) ? !(finallyException === null) : false) {
      // Inline function 'kotlinx.coroutines.addSuppressedThrowable' call
    }
    var tmp0_elvis_lhs = exception;
    var cause = tmp0_elvis_lhs == null ? finallyException : tmp0_elvis_lhs;
    var reason = new CoroutinesInternalError('Fatal exception in coroutines machinery for ' + this + '. ' + "Please read KDoc to 'handleFatalException' method and report this incident to maintainers", ensureNotNull(cause));
    handleCoroutineException(this.gj().t2(), reason);
  };
  function get_MODE_UNINITIALIZED() {
    return MODE_UNINITIALIZED;
  }
  var MODE_UNINITIALIZED;
  function get_isCancellableMode(_this__u8e3s4) {
    return _this__u8e3s4 === 1 ? true : _this__u8e3s4 === 2;
  }
  function get_MODE_ATOMIC() {
    return MODE_ATOMIC;
  }
  var MODE_ATOMIC;
  function Symbol(symbol) {
    this.jj_1 = symbol;
  }
  Symbol.prototype.toString = function () {
    return '<' + this.jj_1 + '>';
  };
  function startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation) {
    var tmp;
    try {
      var tmp_0 = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
      var tmp$ret$0;
      // Inline function 'kotlin.Companion.success' call
      var tmp0_success = Companion_getInstance_4();
      tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      resumeCancellableWith(tmp_0, tmp$ret$0, onCancellation);
      tmp = Unit_getInstance();
    } catch ($p) {
      var tmp_1;
      if ($p instanceof Error) {
        dispatcherFailure$accessor$paksz7(completion, $p);
        tmp_1 = Unit_getInstance();
      } else {
        throw $p;
      }
      tmp = tmp_1;
    }
    return tmp;
  }
  function startCoroutineCancellable$default(_this__u8e3s4, receiver, completion, onCancellation, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      onCancellation = null;
    return startCoroutineCancellable(_this__u8e3s4, receiver, completion, onCancellation);
  }
  function dispatcherFailure(completion, e) {
    var tmp$ret$0;
    // Inline function 'kotlin.Companion.failure' call
    var tmp0_failure = Companion_getInstance_4();
    tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(e));
    completion.u2(tmp$ret$0);
    throw e;
  }
  function startCoroutineCancellable_0(_this__u8e3s4, fatalCompletion) {
    var tmp;
    try {
      var tmp_0 = intercepted(_this__u8e3s4);
      var tmp$ret$0;
      // Inline function 'kotlin.Companion.success' call
      var tmp0_success = Companion_getInstance_4();
      tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_getInstance());
      var tmp_1 = tmp$ret$0;
      resumeCancellableWith$default(tmp_0, tmp_1, null, 2, null);
      tmp = Unit_getInstance();
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Error) {
        dispatcherFailure$accessor$paksz7(fatalCompletion, $p);
        tmp_2 = Unit_getInstance();
      } else {
        throw $p;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function dispatcherFailure$accessor$paksz7(completion, e) {
    return dispatcherFailure(completion, e);
  }
  function startCoroutineUndispatched(_this__u8e3s4, receiver, completion) {
    var tmp$ret$8;
    $l$block: {
      // Inline function 'kotlinx.coroutines.intrinsics.startDirect' call
      var tmp$ret$0;
      // Inline function 'kotlinx.coroutines.internal.probeCoroutineCreated' call
      tmp$ret$0 = completion;
      var actualCompletion = tmp$ret$0;
      var tmp;
      try {
        var tmp$ret$5;
        // Inline function 'kotlinx.coroutines.intrinsics.startCoroutineUndispatched.<anonymous>' call
        var tmp$ret$4;
        // Inline function 'kotlinx.coroutines.withCoroutineContext' call
        var tmp0_withCoroutineContext = completion.t2();
        var tmp$ret$3;
        // Inline function 'kotlinx.coroutines.intrinsics.startCoroutineUndispatched.<anonymous>.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = _this__u8e3s4;
        var a = tmp$ret$1;
        tmp$ret$2 = typeof a === 'function' ? a(receiver, actualCompletion) : _this__u8e3s4.jc(receiver, actualCompletion);
        tmp$ret$3 = tmp$ret$2;
        tmp$ret$4 = tmp$ret$3;
        tmp$ret$5 = tmp$ret$4;
        tmp = tmp$ret$5;
      } catch ($p) {
        var tmp_0;
        if ($p instanceof Error) {
          var tmp$ret$7;
          // Inline function 'kotlin.coroutines.resumeWithException' call
          var tmp$ret$6;
          // Inline function 'kotlin.Companion.failure' call
          var tmp0_failure = Companion_getInstance_4();
          tmp$ret$6 = _Result___init__impl__xyqfz8(createFailure($p));
          actualCompletion.u2(tmp$ret$6);
          tmp$ret$7 = Unit_getInstance();
          tmp$ret$8 = Unit_getInstance();
          break $l$block;
        } else {
          throw $p;
        }
        tmp = tmp_0;
      }
      var value = tmp;
      if (!(value === get_COROUTINE_SUSPENDED())) {
        var tmp$ret$10;
        // Inline function 'kotlin.coroutines.resume' call
        var tmp0_resume = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        var tmp$ret$9;
        // Inline function 'kotlin.Companion.success' call
        var tmp0_success = Companion_getInstance_4();
        tmp$ret$9 = _Result___init__impl__xyqfz8(tmp0_resume);
        actualCompletion.u2(tmp$ret$9);
        tmp$ret$10 = Unit_getInstance();
      }
    }
  }
  function CompletionHandlerBase() {
    LinkedListNode.call(this);
  }
  function invokeIt(_this__u8e3s4, cause) {
    var tmp0_subject = typeof _this__u8e3s4;
    if (tmp0_subject === 'function')
      _this__u8e3s4(cause);
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = _this__u8e3s4;
      tmp$ret$0.invoke(cause);
    }
  }
  function toDebugString(_this__u8e3s4) {
    return toString_3(_this__u8e3s4);
  }
  function createDefaultDispatcher() {
    var tmp;
    if (isJsdom()) {
      tmp = NodeDispatcher_getInstance();
    } else {
      var tmp_0;
      var tmp_1;
      if (!(typeof window === 'undefined')) {
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        var tmp0_asDynamic = window;
        tmp$ret$0 = tmp0_asDynamic;
        tmp_1 = tmp$ret$0 != null;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        var tmp1_asDynamic = window;
        tmp$ret$1 = tmp1_asDynamic;
        tmp_0 = !(typeof tmp$ret$1.addEventListener === 'undefined');
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = asCoroutineDispatcher(window);
      } else {
        if (typeof process === 'undefined' ? true : typeof process.nextTick === 'undefined') {
          tmp = SetTimeoutDispatcher_getInstance();
        } else {
          tmp = NodeDispatcher_getInstance();
        }
      }
    }
    return tmp;
  }
  function isJsdom() {
    return ((((!(typeof navigator === 'undefined') ? navigator != null : false) ? navigator.userAgent != null : false) ? !(typeof navigator.userAgent === 'undefined') : false) ? !(typeof navigator.userAgent.match === 'undefined') : false) ? navigator.userAgent.match('\\bjsdom\\b') : false;
  }
  function newCoroutineContext(_this__u8e3s4, context) {
    var combined = _this__u8e3s4.uc().e3(context);
    return (!(combined === Dispatchers_getInstance().ui_1) ? combined.x2(Key_getInstance()) == null : false) ? combined.e3(Dispatchers_getInstance().ui_1) : combined;
  }
  function get_coroutineName(_this__u8e3s4) {
    return null;
  }
  function handleCoroutineExceptionImpl(context, exception) {
    console.error(exception);
  }
  var counter;
  function get_DEBUG() {
    return DEBUG;
  }
  var DEBUG;
  function get_classSimpleName(_this__u8e3s4) {
    var tmp0_elvis_lhs = getKClassFromExpression(_this__u8e3s4).c9();
    return tmp0_elvis_lhs == null ? 'Unknown' : tmp0_elvis_lhs;
  }
  function get_hexAddress(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var result = tmp$ret$0.__debug_counter;
    if (!(typeof result === 'number')) {
      counter = counter + 1 | 0;
      result = counter;
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = _this__u8e3s4;
      tmp$ret$1.__debug_counter = result;
    }
    return ((!(result == null) ? typeof result === 'number' : false) ? result : THROW_CCE()).toString();
  }
  function Dispatchers() {
    Dispatchers_instance = this;
    this.ui_1 = createDefaultDispatcher();
    this.vi_1 = Unconfined_getInstance();
    this.wi_1 = new JsMainDispatcher(this.ui_1, false);
    this.xi_1 = null;
  }
  Dispatchers.prototype.yi = function () {
    var tmp0_elvis_lhs = this.xi_1;
    return tmp0_elvis_lhs == null ? this.wi_1 : tmp0_elvis_lhs;
  };
  var Dispatchers_instance;
  function Dispatchers_getInstance() {
    if (Dispatchers_instance == null)
      new Dispatchers();
    return Dispatchers_instance;
  }
  function JsMainDispatcher(delegate, invokeImmediately) {
    MainCoroutineDispatcher.call(this);
    this.lj_1 = delegate;
    this.mj_1 = invokeImmediately;
    this.nj_1 = this.mj_1 ? this : new JsMainDispatcher(this.lj_1, true);
  }
  JsMainDispatcher.prototype.si = function () {
    return this.nj_1;
  };
  JsMainDispatcher.prototype.df = function (context) {
    return !this.mj_1;
  };
  JsMainDispatcher.prototype.ef = function (context, block) {
    return this.lj_1.ef(context, block);
  };
  JsMainDispatcher.prototype.toString = function () {
    var tmp0_elvis_lhs = this.ti();
    return tmp0_elvis_lhs == null ? this.lj_1.toString() : tmp0_elvis_lhs;
  };
  function createEventLoop() {
    return new UnconfinedEventLoop();
  }
  function UnconfinedEventLoop() {
    EventLoop.call(this);
  }
  UnconfinedEventLoop.prototype.ef = function (context, block) {
    unsupported();
  };
  function unsupported() {
    throw UnsupportedOperationException_init_$Create$_0('runBlocking event loop is not supported');
  }
  function JobCancellationException(message, cause, job) {
    CancellationException_init_$Init$(message, cause, this);
    this.sj_1 = job;
    captureStack(this, JobCancellationException);
  }
  JobCancellationException.prototype.toString = function () {
    return CancellationException.prototype.toString.call(this) + '; job=' + this.sj_1;
  };
  JobCancellationException.prototype.equals = function (other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      var tmp_2;
      if (other instanceof JobCancellationException) {
        tmp_2 = other.message == this.message;
      } else {
        tmp_2 = false;
      }
      if (tmp_2) {
        tmp_1 = equals_0(other.sj_1, this.sj_1);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = equals_0(other.cause, this.cause);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  JobCancellationException.prototype.hashCode = function () {
    var tmp = imul(imul(getStringHashCode(ensureNotNull(this.message)), 31) + hashCode(this.sj_1) | 0, 31);
    var tmp0_safe_receiver = this.cause;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  };
  function NodeDispatcher() {
    NodeDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  NodeDispatcher.prototype.vj = function () {
    process.nextTick(this.ek_1.bk_1);
  };
  var NodeDispatcher_instance;
  function NodeDispatcher_getInstance() {
    if (NodeDispatcher_instance == null)
      new NodeDispatcher();
    return NodeDispatcher_instance;
  }
  function SetTimeoutDispatcher() {
    SetTimeoutDispatcher_instance = this;
    SetTimeoutBasedDispatcher.call(this);
  }
  SetTimeoutDispatcher.prototype.vj = function () {
    setTimeout(this.ek_1.bk_1, 0);
  };
  var SetTimeoutDispatcher_instance;
  function SetTimeoutDispatcher_getInstance() {
    if (SetTimeoutDispatcher_instance == null)
      new SetTimeoutDispatcher();
    return SetTimeoutDispatcher_instance;
  }
  function SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this$0) {
    return function () {
      this$0.mk();
      return Unit_getInstance();
    };
  }
  function ScheduledMessageQueue($outer) {
    this.ck_1 = $outer;
    MessageQueue.call(this);
    var tmp = this;
    tmp.bk_1 = SetTimeoutBasedDispatcher$ScheduledMessageQueue$processQueue$lambda(this);
  }
  ScheduledMessageQueue.prototype.nk = function () {
    this.ck_1.vj();
  };
  ScheduledMessageQueue.prototype.ok = function () {
    setTimeout(this.bk_1, 0);
  };
  function SetTimeoutBasedDispatcher() {
    CoroutineDispatcher.call(this);
    this.ek_1 = new ScheduledMessageQueue(this);
  }
  SetTimeoutBasedDispatcher.prototype.ef = function (context, block) {
    this.ek_1.pk(block);
  };
  function MessageQueue() {
    ArrayQueue.call(this);
    this.kk_1 = 16;
    this.lk_1 = false;
  }
  MessageQueue.prototype.pk = function (element) {
    this.zf(element);
    if (!this.lk_1) {
      this.lk_1 = true;
      this.nk();
    }
  };
  MessageQueue.prototype.mk = function () {
    try {
      // Inline function 'kotlin.repeat' call
      var tmp0_repeat = this.kk_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlinx.coroutines.MessageQueue.process.<anonymous>' call
          var tmp0_elvis_lhs = this.vf();
          var tmp;
          if (tmp0_elvis_lhs == null) {
            return Unit_getInstance();
          } else {
            tmp = tmp0_elvis_lhs;
          }
          var element = tmp;
          element.xf();
        }
         while (inductionVariable < tmp0_repeat);
    }finally {
      if (this.cg()) {
        this.lk_1 = false;
      } else {
        this.ok();
      }
    }
  };
  function WindowDispatcher(window_0) {
    CoroutineDispatcher.call(this);
    this.rk_1 = window_0;
    this.sk_1 = new WindowMessageQueue(this.rk_1);
  }
  WindowDispatcher.prototype.ef = function (context, block) {
    return this.sk_1.pk(block);
  };
  function WindowMessageQueue$lambda(this$0) {
    return function (event) {
      var tmp;
      if (event.source == this$0.yk_1 ? event.data == this$0.zk_1 : false) {
        event.stopPropagation();
        this$0.mk();
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue$schedule$lambda(this$0) {
    return function (it) {
      this$0.mk();
      return Unit_getInstance();
    };
  }
  function WindowMessageQueue(window_0) {
    MessageQueue.call(this);
    this.yk_1 = window_0;
    this.zk_1 = 'dispatchCoroutine';
    this.yk_1.addEventListener('message', WindowMessageQueue$lambda(this), true);
  }
  WindowMessageQueue.prototype.nk = function () {
    var tmp = Promise.resolve(Unit_getInstance());
    tmp.then(WindowMessageQueue$schedule$lambda(this));
  };
  WindowMessageQueue.prototype.ok = function () {
    this.yk_1.postMessage(this.zk_1, '*');
  };
  function promise(_this__u8e3s4, context, start, block) {
    return asPromise(async(_this__u8e3s4, context, start, block));
  }
  function promise$default(_this__u8e3s4, context, start, block, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      context = EmptyCoroutineContext_getInstance();
    if (!(($mask0 & 2) === 0))
      start = CoroutineStart_DEFAULT_getInstance();
    return promise(_this__u8e3s4, context, start, block);
  }
  function asPromise(_this__u8e3s4) {
    var promise = new Promise(asPromise$lambda(_this__u8e3s4));
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = promise;
    tmp$ret$0.deferred = _this__u8e3s4;
    return promise;
  }
  function asPromise$lambda$lambda($this_asPromise, $reject, $resolve) {
    return function (it) {
      var e = $this_asPromise.qe();
      var tmp;
      if (!(e == null)) {
        tmp = $reject(e);
      } else {
        tmp = $resolve($this_asPromise.ne());
      }
      return Unit_getInstance();
    };
  }
  function asPromise$lambda($this_asPromise) {
    return function (resolve, reject) {
      $this_asPromise.pe(asPromise$lambda$lambda($this_asPromise, reject, resolve));
      return Unit_getInstance();
    };
  }
  function SchedulerTask() {
  }
  function get_taskContext(_this__u8e3s4) {
    return Unit_getInstance();
  }
  function asCoroutineDispatcher(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_elvis_lhs = tmp$ret$0.coroutineDispatcher;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$2;
      // Inline function 'kotlin.also' call
      var tmp0_also = new WindowDispatcher(_this__u8e3s4);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.asCoroutineDispatcher.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = _this__u8e3s4;
      tmp$ret$1.coroutineDispatcher = tmp0_also;
      tmp$ret$2 = tmp0_also;
      tmp = tmp$ret$2;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function identitySet(expectedSize) {
    return HashSet_init_$Create$_0(expectedSize);
  }
  function LinkedListHead() {
    LinkedListNode.call(this);
  }
  function LinkedListNode() {
    this.rg_1 = this;
    this.sg_1 = this;
    this.tg_1 = false;
  }
  LinkedListNode.prototype.ug = function (node) {
    var prev = this.sg_1;
    node.rg_1 = this;
    node.sg_1 = prev;
    prev.rg_1 = node;
    this.sg_1 = node;
  };
  LinkedListNode.prototype.bh = function () {
    return this.vg();
  };
  LinkedListNode.prototype.vg = function () {
    if (this.tg_1)
      return false;
    var prev = this.sg_1;
    var next = this.rg_1;
    prev.rg_1 = next;
    next.sg_1 = prev;
    this.tg_1 = true;
    return true;
  };
  LinkedListNode.prototype.ch = function (node) {
    if (!(this.rg_1 === this))
      return false;
    this.ug(node);
    return true;
  };
  function unwrap(exception) {
    return exception;
  }
  function recoverStackTrace(exception, continuation) {
    return exception;
  }
  function threadContextElements(context) {
    return 0;
  }
  function CommonThreadLocal() {
    this.ig_1 = null;
  }
  CommonThreadLocal.prototype.jg = function () {
    var tmp = this.ig_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  CommonThreadLocal.prototype.kg = function (value) {
    this.ig_1 = value;
  };
  var PACKET_MAX_COPY_SIZE;
  var DISABLE_SFG;
  function get_serializersStore() {
    init_properties_DefaultJs_kt_5pqbey();
    return serializersStore;
  }
  var serializersStore;
  var properties_initialized_DefaultJs_kt_mit67a;
  function init_properties_DefaultJs_kt_5pqbey() {
    if (properties_initialized_DefaultJs_kt_mit67a) {
    } else {
      properties_initialized_DefaultJs_kt_mit67a = true;
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0 = ArrayList_init_$Create$();
      serializersStore = tmp$ret$0;
    }
  }
  function KSerializer() {
  }
  function PolymorphicSerializer_init_$Init$(baseClass, classAnnotations, $this) {
    PolymorphicSerializer.call($this, baseClass);
    $this.cl_1 = asList(classAnnotations);
    return $this;
  }
  function PolymorphicSerializer_init_$Create$(baseClass, classAnnotations) {
    return PolymorphicSerializer_init_$Init$(baseClass, classAnnotations, Object.create(PolymorphicSerializer.prototype));
  }
  function PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      var tmp = serializer(StringCompanionObject_getInstance()).al();
      $this$buildSerialDescriptor.ml('type', tmp, null, false, 12, null);
      var tmp_0 = 'kotlinx.serialization.Polymorphic<' + this$0.bl_1.c9() + '>';
      var tmp_1 = CONTEXTUAL_getInstance();
      var tmp_2 = buildSerialDescriptor$default(tmp_0, tmp_1, [], null, 12, null);
      $this$buildSerialDescriptor.ml('value', tmp_2, null, false, 12, null);
      $this$buildSerialDescriptor.gl_1 = this$0.cl_1;
      return Unit_getInstance();
    };
  }
  function PolymorphicSerializer$descriptor$delegate$lambda(this$0) {
    return function () {
      var tmp = OPEN_getInstance();
      return withContext(buildSerialDescriptor$default('kotlinx.serialization.Polymorphic', tmp, [], PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0), 4, null), this$0.bl_1);
    };
  }
  function PolymorphicSerializer(baseClass) {
    AbstractPolymorphicSerializer.call(this);
    this.bl_1 = baseClass;
    this.cl_1 = emptyList();
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.dl_1 = lazy_0(tmp_0, PolymorphicSerializer$descriptor$delegate$lambda(this));
  }
  PolymorphicSerializer.prototype.al = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = descriptor$factory();
    tmp$ret$0 = this.dl_1.k1();
    return tmp$ret$0;
  };
  PolymorphicSerializer.prototype.toString = function () {
    return 'kotlinx.serialization.PolymorphicSerializer(baseClass: ' + this.bl_1 + ')';
  };
  function descriptor$factory() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.al();
    }, null);
  }
  function SealedClassSerializer_init_$Init$(serialName, baseClass, subclasses, subclassSerializers, classAnnotations, $this) {
    SealedClassSerializer.call($this, serialName, baseClass, subclasses, subclassSerializers);
    $this.ol_1 = asList(classAnnotations);
    return $this;
  }
  function SealedClassSerializer_init_$Create$(serialName, baseClass, subclasses, subclassSerializers, classAnnotations) {
    return SealedClassSerializer_init_$Init$(serialName, baseClass, subclasses, subclassSerializers, classAnnotations, Object.create(SealedClassSerializer.prototype));
  }
  function SealedClassSerializer$descriptor$delegate$lambda$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      var tmp0_forEach = this$0.rl_1;
      var tmp$ret$0;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$0 = tmp0_forEach.i1().h();
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        // Inline function 'kotlinx.serialization.SealedClassSerializer.descriptor$delegate.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$1 = element.h1();
        var name = tmp$ret$1;
        var tmp$ret$2;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$2 = element.k1();
        var serializer = tmp$ret$2;
        var tmp = serializer.al();
        $this$buildSerialDescriptor.ml(name, tmp, null, false, 12, null);
      }
      return Unit_getInstance();
    };
  }
  function SealedClassSerializer$descriptor$delegate$lambda$lambda(this$0) {
    return function ($this$buildSerialDescriptor) {
      var tmp = serializer(StringCompanionObject_getInstance()).al();
      $this$buildSerialDescriptor.ml('type', tmp, null, false, 12, null);
      var tmp_0 = 'kotlinx.serialization.Sealed<' + this$0.nl_1.c9() + '>';
      var tmp_1 = CONTEXTUAL_getInstance();
      var elementDescriptor = buildSerialDescriptor$default(tmp_0, tmp_1, [], SealedClassSerializer$descriptor$delegate$lambda$lambda$lambda(this$0), 4, null);
      $this$buildSerialDescriptor.ml('value', elementDescriptor, null, false, 12, null);
      $this$buildSerialDescriptor.gl_1 = this$0.ol_1;
      return Unit_getInstance();
    };
  }
  function SealedClassSerializer$descriptor$delegate$lambda($serialName, this$0) {
    return function () {
      var tmp = SEALED_getInstance();
      return buildSerialDescriptor$default($serialName, tmp, [], SealedClassSerializer$descriptor$delegate$lambda$lambda(this$0), 4, null);
    };
  }
  function _no_name_provided__qut3iv_1($tmp0_groupingBy) {
    this.sl_1 = $tmp0_groupingBy;
  }
  _no_name_provided__qut3iv_1.prototype.tl = function () {
    return this.sl_1.h();
  };
  _no_name_provided__qut3iv_1.prototype.ul = function (element) {
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.SealedClassSerializer.<anonymous>' call
    tmp$ret$0 = element.k1().al().vl();
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_1.prototype.wl = function (element) {
    return this.ul((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  };
  function SealedClassSerializer(serialName, baseClass, subclasses, subclassSerializers) {
    AbstractPolymorphicSerializer.call(this);
    this.nl_1 = baseClass;
    this.ol_1 = emptyList();
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.pl_1 = lazy_0(tmp_0, SealedClassSerializer$descriptor$delegate$lambda(serialName, this));
    if (!(subclasses.length === subclassSerializers.length)) {
      throw IllegalArgumentException_init_$Create$('All subclasses of sealed class ' + this.nl_1.c9() + ' should be marked @Serializable');
    }
    this.ql_1 = toMap(zip(subclasses, subclassSerializers));
    var tmp_1 = this;
    var tmp$ret$10;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp$ret$5;
    // Inline function 'kotlin.collections.aggregate' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.groupingBy' call
    var tmp0_groupingBy = this.ql_1.i1();
    tmp$ret$0 = new _no_name_provided__qut3iv_1(tmp0_groupingBy);
    var tmp1_aggregate = tmp$ret$0;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.aggregateTo' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$1 = LinkedHashMap_init_$Create$();
    var tmp2_aggregateTo = tmp$ret$1;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = tmp1_aggregate.tl();
    tmp$ret$2 = tmp0_iterator;
    var tmp0_iterator_0 = tmp$ret$2;
    while (tmp0_iterator_0.i()) {
      var e = tmp0_iterator_0.j();
      var key = tmp1_aggregate.wl(e);
      var accumulator = tmp2_aggregateTo.u1(key);
      // Inline function 'kotlin.collections.set' call
      var tmp$ret$3;
      // Inline function 'kotlinx.serialization.SealedClassSerializer.<anonymous>' call
      var tmp2__anonymous__z9zvc9 = accumulator == null ? !tmp2_aggregateTo.r1(key) : false;
      if (!(accumulator == null)) {
        // Inline function 'kotlin.error' call
        var tmp0_error = "Multiple sealed subclasses of '" + this.nl_1 + "' have the same serial name '" + key + "':" + (" '" + accumulator.h1() + "', '" + e.h1() + "'");
        throw IllegalStateException_init_$Create$_0(toString_3(tmp0_error));
      }
      tmp$ret$3 = e;
      var tmp1_set = tmp$ret$3;
      tmp2_aggregateTo.q2(key, tmp1_set);
    }
    tmp$ret$4 = tmp2_aggregateTo;
    tmp$ret$5 = tmp$ret$4;
    var tmp3_mapValues = tmp$ret$5;
    var tmp$ret$9;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp3_mapValues.f()));
    var tmp$ret$8;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp3_mapValues.i1();
    var tmp0_iterator_1 = tmp0_associateByTo.h();
    while (tmp0_iterator_1.i()) {
      var element = tmp0_iterator_1.j();
      var tmp$ret$6;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$6 = element.h1();
      var tmp_2 = tmp$ret$6;
      var tmp$ret$7;
      // Inline function 'kotlinx.serialization.SealedClassSerializer.<anonymous>' call
      tmp$ret$7 = element.k1().k1();
      tmp1_mapValuesTo.q2(tmp_2, tmp$ret$7);
    }
    tmp$ret$8 = tmp1_mapValuesTo;
    tmp$ret$9 = tmp$ret$8;
    tmp$ret$10 = tmp$ret$9;
    tmp_1.rl_1 = tmp$ret$10;
  }
  SealedClassSerializer.prototype.al = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = descriptor$factory_0();
    tmp$ret$0 = this.pl_1.k1();
    return tmp$ret$0;
  };
  function descriptor$factory_0() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.al();
    }, null);
  }
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Init$_0(message, cause, $this) {
    IllegalArgumentException_init_$Init$_0(message, cause, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  function UnknownFieldException_init_$Init$(index, $this) {
    UnknownFieldException.call($this, 'An unknown field for index ' + index);
    return $this;
  }
  function UnknownFieldException_init_$Create$(index) {
    var tmp = UnknownFieldException_init_$Init$(index, Object.create(UnknownFieldException.prototype));
    captureStack(tmp, UnknownFieldException_init_$Create$);
    return tmp;
  }
  function UnknownFieldException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, UnknownFieldException);
  }
  function MissingFieldException_init_$Init$(missingFields, serialName, $this) {
    MissingFieldException.call($this, missingFields, missingFields.f() === 1 ? "Field '" + missingFields.l(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + missingFields + " are required for type with serial name '" + serialName + "', but they were missing", null);
    return $this;
  }
  function MissingFieldException_init_$Create$(missingFields, serialName) {
    var tmp = MissingFieldException_init_$Init$(missingFields, serialName, Object.create(MissingFieldException.prototype));
    captureStack(tmp, MissingFieldException_init_$Create$);
    return tmp;
  }
  function MissingFieldException(missingFields, message, cause) {
    SerializationException_init_$Init$_0(message, cause, this);
    this.xl_1 = missingFields;
    captureStack(this, MissingFieldException);
  }
  function get_nullable(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.al().yl()) {
      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this__u8e3s4);
    }
    return tmp;
  }
  function serializer(_this__u8e3s4) {
    return StringSerializer_getInstance();
  }
  function withContext(_this__u8e3s4, context) {
    return new ContextDescriptor(_this__u8e3s4, context);
  }
  function ContextDescriptor(original, kClass) {
    this.zl_1 = original;
    this.am_1 = kClass;
    this.bm_1 = this.zl_1.vl() + '<' + this.am_1.c9() + '>';
  }
  ContextDescriptor.prototype.cm = function () {
    return this.zl_1.cm();
  };
  ContextDescriptor.prototype.yl = function () {
    return this.zl_1.yl();
  };
  ContextDescriptor.prototype.dm = function () {
    return this.zl_1.dm();
  };
  ContextDescriptor.prototype.em = function (index) {
    return this.zl_1.em(index);
  };
  ContextDescriptor.prototype.fm = function (index) {
    return this.zl_1.fm(index);
  };
  ContextDescriptor.prototype.vl = function () {
    return this.bm_1;
  };
  ContextDescriptor.prototype.equals = function (other) {
    var tmp0_elvis_lhs = other instanceof ContextDescriptor ? other : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var another = tmp;
    return equals_0(this.zl_1, another.zl_1) ? another.am_1.equals(this.am_1) : false;
  };
  ContextDescriptor.prototype.hashCode = function () {
    var result = this.am_1.hashCode();
    result = imul(31, result) + getStringHashCode(this.bm_1) | 0;
    return result;
  };
  ContextDescriptor.prototype.toString = function () {
    return 'ContextDescriptor(kClass: ' + this.am_1 + ', original: ' + this.zl_1 + ')';
  };
  function SerialDescriptor() {
  }
  function get_elementDescriptors(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Iterable' call
    tmp$ret$0 = new _no_name_provided__qut3iv_2(_this__u8e3s4);
    return tmp$ret$0;
  }
  function get_elementNames(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Iterable' call
    tmp$ret$0 = new _no_name_provided__qut3iv_3(_this__u8e3s4);
    return tmp$ret$0;
  }
  function elementDescriptors$1$1($this_elementDescriptors) {
    this.hm_1 = $this_elementDescriptors;
    this.gm_1 = $this_elementDescriptors.cm();
  }
  elementDescriptors$1$1.prototype.i = function () {
    return this.gm_1 > 0;
  };
  elementDescriptors$1$1.prototype.j = function () {
    var tmp = this.hm_1.cm();
    var tmp0_this = this;
    var tmp1 = tmp0_this.gm_1;
    tmp0_this.gm_1 = tmp1 - 1 | 0;
    return this.hm_1.em(tmp - tmp1 | 0);
  };
  function _no_name_provided__qut3iv_2($this_elementDescriptors) {
    this.im_1 = $this_elementDescriptors;
  }
  _no_name_provided__qut3iv_2.prototype.h = function () {
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.descriptors.<get-elementDescriptors>.<anonymous>' call
    tmp$ret$0 = new elementDescriptors$1$1(this.im_1);
    return tmp$ret$0;
  };
  function elementNames$1$1($this_elementNames) {
    this.km_1 = $this_elementNames;
    this.jm_1 = $this_elementNames.cm();
  }
  elementNames$1$1.prototype.i = function () {
    return this.jm_1 > 0;
  };
  elementNames$1$1.prototype.j = function () {
    var tmp = this.km_1.cm();
    var tmp0_this = this;
    var tmp1 = tmp0_this.jm_1;
    tmp0_this.jm_1 = tmp1 - 1 | 0;
    return this.km_1.fm(tmp - tmp1 | 0);
  };
  function _no_name_provided__qut3iv_3($this_elementNames) {
    this.lm_1 = $this_elementNames;
  }
  _no_name_provided__qut3iv_3.prototype.h = function () {
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.descriptors.<get-elementNames>.<anonymous>' call
    tmp$ret$0 = new elementNames$1$1(this.lm_1);
    return tmp$ret$0;
  };
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    // Inline function 'kotlin.require' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotBlank' call
    tmp$ret$0 = !isBlank(serialName);
    var tmp0_require = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
      tmp$ret$1 = 'Blank serial names are prohibited';
      var message = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = !equals_0(kind, CLASS_getInstance());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
      tmp$ret$2 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
      var message_0 = tmp$ret$2;
      throw IllegalArgumentException_init_$Create$(toString_3(message_0));
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder.hl_1.f(), toList(typeParameters), sdBuilder);
  }
  function buildSerialDescriptor$default(serialName, kind, typeParameters, builder, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      builder = buildSerialDescriptor$lambda;
    }
    return buildSerialDescriptor(serialName, kind, typeParameters, builder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this.el_1 = serialName;
    this.fl_1 = false;
    this.gl_1 = emptyList();
    this.hl_1 = ArrayList_init_$Create$();
    this.il_1 = HashSet_init_$Create$();
    this.jl_1 = ArrayList_init_$Create$();
    this.kl_1 = ArrayList_init_$Create$();
    this.ll_1 = ArrayList_init_$Create$();
  }
  ClassSerialDescriptorBuilder.prototype.mm = function (elementName, descriptor, annotations, isOptional) {
    // Inline function 'kotlin.require' call
    var tmp0_require = this.il_1.e(elementName);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder.element.<anonymous>' call
      tmp$ret$0 = "Element with name '" + elementName + "' is already registered in " + this.el_1;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    var tmp0_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp1_plusAssign = tmp0_this.hl_1;
    tmp1_plusAssign.e(elementName);
    var tmp1_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp2_plusAssign = tmp1_this.jl_1;
    tmp2_plusAssign.e(descriptor);
    var tmp2_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp3_plusAssign = tmp2_this.kl_1;
    tmp3_plusAssign.e(annotations);
    var tmp3_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp4_plusAssign = tmp3_this.ll_1;
    tmp4_plusAssign.e(isOptional);
  };
  ClassSerialDescriptorBuilder.prototype.ml = function (elementName, descriptor, annotations, isOptional, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      annotations = emptyList();
    if (!(($mask0 & 8) === 0))
      isOptional = false;
    return this.mm(elementName, descriptor, annotations, isOptional);
  };
  function _get__hashCode__tgwhef($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = _hashCode$factory();
    tmp$ret$0 = $this.ym_1.k1();
    return tmp$ret$0;
  }
  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.xm_1);
    };
  }
  function SerialDescriptorImpl$toString$lambda(this$0) {
    return function (it) {
      return this$0.fm(it) + ': ' + this$0.em(it).vl();
    };
  }
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this.nm_1 = serialName;
    this.om_1 = kind;
    this.pm_1 = elementsCount;
    this.qm_1 = builder.gl_1;
    this.rm_1 = toHashSet(builder.hl_1);
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray = builder.hl_1;
    tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    tmp.sm_1 = tmp$ret$0;
    this.tm_1 = compactArray(builder.jl_1);
    var tmp_0 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray_0 = builder.kl_1;
    tmp$ret$1 = copyToArray(tmp0_toTypedArray_0);
    tmp_0.um_1 = tmp$ret$1;
    this.vm_1 = toBooleanArray(builder.ll_1);
    var tmp_1 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = withIndex(this.sm_1);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.name2Index.<anonymous>' call
      tmp$ret$2 = to(item.f2_1, item.e2_1);
      tmp0_mapTo.e(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    tmp_1.wm_1 = toMap(tmp$ret$4);
    this.xm_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.ym_1 = lazy(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  SerialDescriptorImpl.prototype.vl = function () {
    return this.nm_1;
  };
  SerialDescriptorImpl.prototype.dm = function () {
    return this.om_1;
  };
  SerialDescriptorImpl.prototype.cm = function () {
    return this.pm_1;
  };
  SerialDescriptorImpl.prototype.zm = function () {
    return this.rm_1;
  };
  SerialDescriptorImpl.prototype.fm = function (index) {
    return getChecked(this.sm_1, index);
  };
  SerialDescriptorImpl.prototype.em = function (index) {
    return getChecked(this.tm_1, index);
  };
  SerialDescriptorImpl.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.vl() === other.vl())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.equals.<anonymous>' call
      var tmp0__anonymous__q1qw7t = other;
      tmp$ret$1 = contentEquals(this.xm_1, tmp0__anonymous__q1qw7t.xm_1);
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.cm() === other.cm())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.cm();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.em(index).vl() === other.em(index).vl())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals_0(this.em(index).dm(), other.em(index).dm())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SerialDescriptorImpl.prototype.hashCode = function () {
    return _get__hashCode__tgwhef(this);
  };
  SerialDescriptorImpl.prototype.toString = function () {
    var tmp = until(0, this.pm_1);
    var tmp_0 = this.nm_1 + '(';
    return joinToString$default_0(tmp, ', ', tmp_0, ')', 0, null, SerialDescriptorImpl$toString$lambda(this), 24, null);
  };
  function buildSerialDescriptor$lambda($this$null) {
    return Unit_getInstance();
  }
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef(receiver);
    }, null);
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function CONTEXTUAL() {
    CONTEXTUAL_instance = this;
    SerialKind.call(this);
  }
  var CONTEXTUAL_instance;
  function CONTEXTUAL_getInstance() {
    if (CONTEXTUAL_instance == null)
      new CONTEXTUAL();
    return CONTEXTUAL_instance;
  }
  function SerialKind() {
  }
  SerialKind.prototype.toString = function () {
    return ensureNotNull(getKClassFromExpression(this).c9());
  };
  SerialKind.prototype.hashCode = function () {
    return getStringHashCode(this.toString());
  };
  function SEALED_0() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED_0();
    return SEALED_instance;
  }
  function OPEN() {
    OPEN_instance = this;
    PolymorphicKind.call(this);
  }
  var OPEN_instance;
  function OPEN_getInstance() {
    if (OPEN_instance == null)
      new OPEN();
    return OPEN_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  function CompositeDecoder() {
  }
  function CompositeEncoder() {
  }
  function AbstractPolymorphicSerializer() {
  }
  function CachedNames() {
  }
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayListClassDesc.prototype.vl = function () {
    return 'kotlin.collections.ArrayList';
  };
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayClassDesc.prototype.vl = function () {
    return 'kotlin.Array';
  };
  function ListLikeDescriptor(elementDescriptor) {
    this.on_1 = elementDescriptor;
    this.pn_1 = 1;
  }
  ListLikeDescriptor.prototype.dm = function () {
    return LIST_getInstance();
  };
  ListLikeDescriptor.prototype.cm = function () {
    return this.pn_1;
  };
  ListLikeDescriptor.prototype.fm = function (index) {
    return index.toString();
  };
  ListLikeDescriptor.prototype.em = function (index) {
    // Inline function 'kotlin.require' call
    var tmp0_require = index >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementDescriptor.<anonymous>' call
      tmp$ret$0 = 'Illegal index ' + index + ', ' + this.vl() + ' expects only non-negative indices';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    return this.on_1;
  };
  ListLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if (equals_0(this.on_1, other.on_1) ? this.vl() === other.vl() : false)
      return true;
    return false;
  };
  ListLikeDescriptor.prototype.hashCode = function () {
    return imul(hashCode(this.on_1), 31) + getStringHashCode(this.vl()) | 0;
  };
  ListLikeDescriptor.prototype.toString = function () {
    return this.vl() + '(' + this.on_1 + ')';
  };
  function ArrayListSerializer(element) {
    CollectionSerializer.call(this, element);
    this.tn_1 = new ArrayListClassDesc(element.al());
  }
  ArrayListSerializer.prototype.al = function () {
    return this.tn_1;
  };
  function ReferenceArraySerializer(kClass, eSerializer) {
    CollectionLikeSerializer.call(this, eSerializer);
    this.vn_1 = kClass;
    this.wn_1 = new ArrayClassDesc(eSerializer.al());
  }
  ReferenceArraySerializer.prototype.al = function () {
    return this.wn_1;
  };
  function CollectionSerializer(element) {
    CollectionLikeSerializer.call(this, element);
  }
  function CollectionLikeSerializer(elementSerializer) {
    AbstractCollectionSerializer.call(this);
    this.xn_1 = elementSerializer;
  }
  function AbstractCollectionSerializer() {
  }
  function createSimpleEnumSerializer(serialName, values) {
    return new EnumSerializer(serialName, values);
  }
  function createUnmarkedDescriptor($this, serialName) {
    var d = new EnumDescriptor(serialName, $this.yn_1.length);
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_forEach = $this.yn_1;
    var indexedObject = tmp0_forEach;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlinx.serialization.internal.EnumSerializer.createUnmarkedDescriptor.<anonymous>' call
      d.no(element.j3_1, false, 2, null);
    }
    return d;
  }
  function EnumSerializer$descriptor$delegate$lambda(this$0, $serialName) {
    return function () {
      var tmp0_elvis_lhs = this$0.zn_1;
      return tmp0_elvis_lhs == null ? createUnmarkedDescriptor(this$0, $serialName) : tmp0_elvis_lhs;
    };
  }
  function EnumSerializer(serialName, values) {
    this.yn_1 = values;
    this.zn_1 = null;
    var tmp = this;
    tmp.ao_1 = lazy(EnumSerializer$descriptor$delegate$lambda(this, serialName));
  }
  EnumSerializer.prototype.al = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = descriptor$factory_1();
    tmp$ret$0 = this.ao_1.k1();
    return tmp$ret$0;
  };
  EnumSerializer.prototype.toString = function () {
    return 'kotlinx.serialization.internal.EnumSerializer<' + this.al().vl() + '>';
  };
  function _get_elementDescriptors__y23q9p($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = elementDescriptors$factory();
    tmp$ret$0 = $this.bp_1.k1();
    return tmp$ret$0;
  }
  function EnumDescriptor$elementDescriptors$delegate$lambda($elementsCount, $name, this$0) {
    return function () {
      var tmp = 0;
      var tmp_0 = $elementsCount;
      var tmp$ret$0;
      // Inline function 'kotlin.arrayOfNulls' call
      tmp$ret$0 = fillArrayVal(Array(tmp_0), null);
      var tmp_1 = tmp$ret$0;
      while (tmp < tmp_0) {
        var tmp_2 = tmp;
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.internal.EnumDescriptor.elementDescriptors$delegate.<anonymous>.<anonymous>' call
        var tmp_3 = $name + '.' + this$0.fm(tmp_2);
        var tmp_4 = OBJECT_getInstance();
        tmp$ret$1 = buildSerialDescriptor$default(tmp_3, tmp_4, [], null, 12, null);
        tmp_1[tmp_2] = tmp$ret$1;
        tmp = tmp + 1 | 0;
      }
      return tmp_1;
    };
  }
  function EnumDescriptor(name, elementsCount) {
    PluginGeneratedSerialDescriptor_init_$Init$(name, null, elementsCount, 2, null, this);
    this.ap_1 = ENUM_getInstance();
    var tmp = this;
    tmp.bp_1 = lazy(EnumDescriptor$elementDescriptors$delegate$lambda(elementsCount, name, this));
  }
  EnumDescriptor.prototype.dm = function () {
    return this.ap_1;
  };
  EnumDescriptor.prototype.em = function (index) {
    return getChecked(_get_elementDescriptors__y23q9p(this), index);
  };
  EnumDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!(!(other == null) ? isInterface(other, SerialDescriptor) : false))
      return false;
    if (!(other.dm() === ENUM_getInstance()))
      return false;
    if (!(this.vl() === other.vl()))
      return false;
    if (!equals_0(cachedSerialNames(this), cachedSerialNames(other)))
      return false;
    return true;
  };
  EnumDescriptor.prototype.toString = function () {
    var tmp = get_elementNames(this);
    var tmp_0 = this.vl() + '(';
    return joinToString$default_0(tmp, ', ', tmp_0, ')', 0, null, null, 56, null);
  };
  EnumDescriptor.prototype.hashCode = function () {
    var result = getStringHashCode(this.vl());
    var tmp$ret$4;
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    var tmp1_elementsHashCodeBy = get_elementNames(this);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.fold' call
    var accumulator = 1;
    var tmp0_iterator = tmp1_elementsHashCodeBy.h();
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0__anonymous__q1qw7t = accumulator;
      var tmp = imul(31, tmp0__anonymous__q1qw7t);
      var tmp$ret$1;
      // Inline function 'kotlin.hashCode' call
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.EnumDescriptor.hashCode.<anonymous>' call
      tmp$ret$0 = element;
      var tmp0_hashCode = tmp$ret$0;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      tmp$ret$2 = tmp + tmp$ret$1 | 0;
      accumulator = tmp$ret$2;
    }
    tmp$ret$3 = accumulator;
    tmp$ret$4 = tmp$ret$3;
    var elementsHashCode = tmp$ret$4;
    result = imul(31, result) + elementsHashCode | 0;
    return result;
  };
  function descriptor$factory_1() {
    return getPropertyCallableRef('descriptor', 1, KProperty1, function (receiver) {
      return receiver.al();
    }, null);
  }
  function elementDescriptors$factory() {
    return getPropertyCallableRef('elementDescriptors', 1, KProperty1, function (receiver) {
      return _get_elementDescriptors__y23q9p(receiver);
    }, null);
  }
  function NullableSerializer(serializer) {
    this.ep_1 = serializer;
    this.fp_1 = new SerialDescriptorForNullable(this.ep_1.al());
  }
  NullableSerializer.prototype.al = function () {
    return this.fp_1;
  };
  NullableSerializer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof NullableSerializer)
      other;
    else
      THROW_CCE();
    if (!equals_0(this.ep_1, other.ep_1))
      return false;
    return true;
  };
  NullableSerializer.prototype.hashCode = function () {
    return hashCode(this.ep_1);
  };
  function SerialDescriptorForNullable(original) {
    this.gp_1 = original;
    this.hp_1 = this.gp_1.vl() + '?';
    this.ip_1 = cachedSerialNames(this.gp_1);
  }
  SerialDescriptorForNullable.prototype.cm = function () {
    return this.gp_1.cm();
  };
  SerialDescriptorForNullable.prototype.dm = function () {
    return this.gp_1.dm();
  };
  SerialDescriptorForNullable.prototype.em = function (index) {
    return this.gp_1.em(index);
  };
  SerialDescriptorForNullable.prototype.fm = function (index) {
    return this.gp_1.fm(index);
  };
  SerialDescriptorForNullable.prototype.vl = function () {
    return this.hp_1;
  };
  SerialDescriptorForNullable.prototype.zm = function () {
    return this.ip_1;
  };
  SerialDescriptorForNullable.prototype.yl = function () {
    return true;
  };
  SerialDescriptorForNullable.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!equals_0(this.gp_1, other.gp_1))
      return false;
    return true;
  };
  SerialDescriptorForNullable.prototype.toString = function () {
    return '' + this.gp_1 + '?';
  };
  SerialDescriptorForNullable.prototype.hashCode = function () {
    return imul(hashCode(this.gp_1), 31);
  };
  function get_EMPTY_DESCRIPTOR_ARRAY() {
    init_properties_Platform_common_kt_9ujmfm();
    return EMPTY_DESCRIPTOR_ARRAY;
  }
  var EMPTY_DESCRIPTOR_ARRAY;
  function cachedSerialNames(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    if (isInterface(_this__u8e3s4, CachedNames))
      return _this__u8e3s4.zm();
    var result = HashSet_init_$Create$_0(_this__u8e3s4.cm());
    var inductionVariable = 0;
    var last = _this__u8e3s4.cm();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.plusAssign' call
        var tmp0_plusAssign = _this__u8e3s4.fm(i);
        result.e(tmp0_plusAssign);
      }
       while (inductionVariable < last);
    return result;
  }
  function compactArray(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    // Inline function 'kotlin.takeUnless' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.internal.compactArray.<anonymous>' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$0 = _this__u8e3s4 == null ? true : _this__u8e3s4.k();
    tmp$ret$1 = tmp$ret$0;
    if (!tmp$ret$1) {
      tmp = _this__u8e3s4;
    } else {
      tmp = null;
    }
    tmp$ret$2 = tmp;
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.collections.toTypedArray' call
      tmp$ret$3 = copyToArray(tmp0_safe_receiver);
      tmp_0 = tmp$ret$3;
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
  }
  var properties_initialized_Platform_common_kt_i7q4ty;
  function init_properties_Platform_common_kt_9ujmfm() {
    if (properties_initialized_Platform_common_kt_i7q4ty) {
    } else {
      properties_initialized_Platform_common_kt_i7q4ty = true;
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [];
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      EMPTY_DESCRIPTOR_ARRAY = tmp$ret$2;
    }
  }
  function throwMissingFieldException(seen, goldenMask, descriptor) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    var missingFields = tmp$ret$0;
    var missingFieldsBits = goldenMask & ~seen;
    var inductionVariable = 0;
    if (inductionVariable < 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((missingFieldsBits & 1) === 0)) {
          // Inline function 'kotlin.collections.plusAssign' call
          var tmp0_plusAssign = descriptor.fm(i);
          missingFields.e(tmp0_plusAssign);
        }
        missingFieldsBits = missingFieldsBits >>> 1 | 0;
      }
       while (inductionVariable < 32);
    throw MissingFieldException_init_$Create$(missingFields, descriptor.vl());
  }
  function PluginGeneratedSerialDescriptor_init_$Init$(serialName, generatedSerializer, elementsCount, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      generatedSerializer = null;
    PluginGeneratedSerialDescriptor.call($this, serialName, generatedSerializer, elementsCount);
    return $this;
  }
  function _get_childSerializers__7vnyfa($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = childSerializers$factory();
    tmp$ret$0 = $this.ko_1.k1();
    return tmp$ret$0;
  }
  function _get__hashCode__tgwhef_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = _hashCode$factory_0();
    tmp$ret$0 = $this.mo_1.k1();
    return tmp$ret$0;
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = $this.fo_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = $this.fo_1[i];
        indices.q2(tmp0_set, i);
      }
       while (inductionVariable <= last);
    return indices;
  }
  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.co_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.jp();
      return tmp1_elvis_lhs == null ? get_EMPTY_SERIALIZER_ARRAY() : tmp1_elvis_lhs;
    };
  }
  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.co_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.kp();
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_safe_receiver.length);
        var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
        while (tmp0_iterator.i()) {
          var item = tmp0_iterator.j();
          var tmp$ret$0;
          // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.typeParameterDescriptors$delegate.<anonymous>.<anonymous>' call
          tmp$ret$0 = item.al();
          tmp0_mapTo.e(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
        tmp$ret$2 = tmp$ret$1;
        tmp = tmp$ret$2;
      }
      return compactArray(tmp);
    };
  }
  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.cp());
    };
  }
  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
    return function (i) {
      return this$0.fm(i) + ': ' + this$0.em(i).vl();
    };
  }
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    this.bo_1 = serialName;
    this.co_1 = generatedSerializer;
    this.do_1 = elementsCount;
    this.eo_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.do_1;
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.names.<anonymous>' call
      tmp$ret$1 = '[UNINITIALIZED]';
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.fo_1 = tmp_2;
    var tmp_4 = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = this.do_1;
    tmp$ret$2 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    tmp_4.go_1 = tmp$ret$2;
    this.ho_1 = null;
    this.io_1 = booleanArray(this.do_1);
    this.jo_1 = emptyMap();
    var tmp_5 = this;
    var tmp_6 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_5.ko_1 = lazy_0(tmp_6, PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_7 = this;
    var tmp_8 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_7.lo_1 = lazy_0(tmp_8, PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_9 = this;
    var tmp_10 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp_9.mo_1 = lazy_0(tmp_10, PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  PluginGeneratedSerialDescriptor.prototype.vl = function () {
    return this.bo_1;
  };
  PluginGeneratedSerialDescriptor.prototype.cm = function () {
    return this.do_1;
  };
  PluginGeneratedSerialDescriptor.prototype.dm = function () {
    return CLASS_getInstance();
  };
  PluginGeneratedSerialDescriptor.prototype.zm = function () {
    return this.jo_1.v1();
  };
  PluginGeneratedSerialDescriptor.prototype.cp = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = typeParameterDescriptors$factory();
    tmp$ret$0 = this.lo_1.k1();
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.dp = function (name, isOptional) {
    var tmp0_this = this;
    tmp0_this.eo_1 = tmp0_this.eo_1 + 1 | 0;
    this.fo_1[tmp0_this.eo_1] = name;
    this.io_1[this.eo_1] = isOptional;
    this.go_1[this.eo_1] = null;
    if (this.eo_1 === (this.do_1 - 1 | 0)) {
      this.jo_1 = buildIndices(this);
    }
  };
  PluginGeneratedSerialDescriptor.prototype.no = function (name, isOptional, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      isOptional = false;
    return this.dp(name, isOptional);
  };
  PluginGeneratedSerialDescriptor.prototype.em = function (index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).al();
  };
  PluginGeneratedSerialDescriptor.prototype.fm = function (index) {
    return getChecked(this.fo_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.vl() === other.vl())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.equals.<anonymous>' call
      var tmp0__anonymous__q1qw7t = other;
      tmp$ret$1 = contentEquals(this.cp(), tmp0__anonymous__q1qw7t.cp());
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.cm() === other.cm())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.cm();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.em(index).vl() === other.em(index).vl())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals_0(this.em(index).dm(), other.em(index).dm())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.hashCode = function () {
    return _get__hashCode__tgwhef_0(this);
  };
  PluginGeneratedSerialDescriptor.prototype.toString = function () {
    var tmp = until(0, this.do_1);
    var tmp_0 = this.vl() + '(';
    return joinToString$default_0(tmp, ', ', tmp_0, ')', 0, null, PluginGeneratedSerialDescriptor$toString$lambda(this), 24, null);
  };
  function hashCodeImpl(_this__u8e3s4, typeParams) {
    var result = getStringHashCode(_this__u8e3s4.vl());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
    var tmp$ret$4;
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.fold' call
    var accumulator = 1;
    var tmp0_iterator = elementDescriptors.h();
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0__anonymous__q1qw7t = accumulator;
      var tmp = imul(31, tmp0__anonymous__q1qw7t);
      var tmp$ret$1;
      // Inline function 'kotlin.hashCode' call
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
      tmp$ret$0 = element.vl();
      var tmp0_hashCode = tmp$ret$0;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      tmp$ret$2 = tmp + tmp$ret$1 | 0;
      accumulator = tmp$ret$2;
    }
    tmp$ret$3 = accumulator;
    tmp$ret$4 = tmp$ret$3;
    var namesHash = tmp$ret$4;
    var tmp$ret$9;
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.fold' call
    var accumulator_0 = 1;
    var tmp0_iterator_0 = elementDescriptors.h();
    while (tmp0_iterator_0.i()) {
      var element_0 = tmp0_iterator_0.j();
      var tmp$ret$7;
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0__anonymous__q1qw7t_0 = accumulator_0;
      var tmp_0 = imul(31, tmp0__anonymous__q1qw7t_0);
      var tmp$ret$6;
      // Inline function 'kotlin.hashCode' call
      var tmp$ret$5;
      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
      tmp$ret$5 = element_0.dm();
      var tmp0_hashCode_0 = tmp$ret$5;
      var tmp0_safe_receiver_0 = tmp0_hashCode_0;
      var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
      tmp$ret$6 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
      tmp$ret$7 = tmp_0 + tmp$ret$6 | 0;
      accumulator_0 = tmp$ret$7;
    }
    tmp$ret$8 = accumulator_0;
    tmp$ret$9 = tmp$ret$8;
    var kindHash = tmp$ret$9;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers__7vnyfa(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver.cp();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef_0(receiver);
    }, null);
  }
  function get_EMPTY_SERIALIZER_ARRAY() {
    init_properties_PluginHelperInterfaces_kt_tblf27();
    return EMPTY_SERIALIZER_ARRAY;
  }
  var EMPTY_SERIALIZER_ARRAY;
  function GeneratedSerializer() {
  }
  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
  function init_properties_PluginHelperInterfaces_kt_tblf27() {
    if (properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
    } else {
      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [];
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      EMPTY_SERIALIZER_ARRAY = tmp$ret$2;
    }
  }
  function StringSerializer() {
    StringSerializer_instance = this;
    this.lp_1 = new PrimitiveSerialDescriptor('kotlin.String', STRING_getInstance());
  }
  StringSerializer.prototype.al = function () {
    return this.lp_1;
  };
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this.mp_1 = new PrimitiveSerialDescriptor('kotlin.Int', INT_getInstance());
  }
  IntSerializer.prototype.al = function () {
    return this.mp_1;
  };
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$_0('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    this.np_1 = serialName;
    this.op_1 = kind;
  }
  PrimitiveSerialDescriptor.prototype.vl = function () {
    return this.np_1;
  };
  PrimitiveSerialDescriptor.prototype.dm = function () {
    return this.op_1;
  };
  PrimitiveSerialDescriptor.prototype.cm = function () {
    return 0;
  };
  PrimitiveSerialDescriptor.prototype.fm = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor.prototype.em = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor.prototype.toString = function () {
    return 'PrimitiveDescriptor(' + this.np_1 + ')';
  };
  PrimitiveSerialDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PrimitiveSerialDescriptor))
      return false;
    if (this.np_1 === other.np_1 ? equals_0(this.op_1, other.op_1) : false)
      return true;
    return false;
  };
  PrimitiveSerialDescriptor.prototype.hashCode = function () {
    return getStringHashCode(this.np_1) + imul(31, this.op_1.hashCode()) | 0;
  };
  function get_EmptySerializersModuleLegacyJs() {
    init_properties_SerializersModule_kt_swldyf();
    return EmptySerializersModule;
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  function SerialModuleImpl(class2ContextualFactory, polyBase2Serializers, polyBase2DefaultSerializerProvider, polyBase2NamedSerializers, polyBase2DefaultDeserializerProvider) {
    SerializersModule.call(this);
    this.qp_1 = class2ContextualFactory;
    this.rp_1 = polyBase2Serializers;
    this.sp_1 = polyBase2DefaultSerializerProvider;
    this.tp_1 = polyBase2NamedSerializers;
    this.up_1 = polyBase2DefaultDeserializerProvider;
  }
  SerialModuleImpl.prototype.pp = function (collector) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_forEach = this.qp_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = tmp0_forEach.i1().h();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = element.h1();
      var kclass = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = element.k1();
      var serial = tmp$ret$2;
      var tmp0_subject = serial;
      if (tmp0_subject instanceof Argless) {
        var tmp = isInterface(kclass, KClass) ? kclass : THROW_CCE();
        var tmp_0 = serial.xp_1;
        collector.yp(tmp, isInterface(tmp_0, KSerializer) ? tmp_0 : THROW_CCE());
      } else {
        if (tmp0_subject instanceof WithTypeArguments) {
          collector.wp(kclass, serial.vp_1);
        }
      }
    }
    // Inline function 'kotlin.collections.forEach' call
    var tmp1_forEach = this.rp_1;
    var tmp$ret$3;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$3 = tmp1_forEach.i1().h();
    var tmp0_iterator_0 = tmp$ret$3;
    while (tmp0_iterator_0.i()) {
      var element_0 = tmp0_iterator_0.j();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      var tmp$ret$4;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$4 = element_0.h1();
      var baseClass = tmp$ret$4;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$5 = element_0.k1();
      var classMap = tmp$ret$5;
      // Inline function 'kotlin.collections.forEach' call
      var tmp$ret$6;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$6 = classMap.i1().h();
      var tmp0_iterator_1 = tmp$ret$6;
      while (tmp0_iterator_1.i()) {
        var element_1 = tmp0_iterator_1.j();
        // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>.<anonymous>' call
        var tmp$ret$7;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$7 = element_1.h1();
        var actualClass = tmp$ret$7;
        var tmp$ret$8;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$8 = element_1.k1();
        var serializer = tmp$ret$8;
        var tmp_1 = isInterface(baseClass, KClass) ? baseClass : THROW_CCE();
        var tmp_2 = isInterface(actualClass, KClass) ? actualClass : THROW_CCE();
        var tmp$ret$9;
        // Inline function 'kotlinx.serialization.internal.cast' call
        tmp$ret$9 = isInterface(serializer, KSerializer) ? serializer : THROW_CCE();
        collector.zp(tmp_1, tmp_2, tmp$ret$9);
      }
    }
    // Inline function 'kotlin.collections.forEach' call
    var tmp2_forEach = this.sp_1;
    var tmp$ret$10;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$10 = tmp2_forEach.i1().h();
    var tmp0_iterator_2 = tmp$ret$10;
    while (tmp0_iterator_2.i()) {
      var element_2 = tmp0_iterator_2.j();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      var tmp$ret$11;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$11 = element_2.h1();
      var baseClass_0 = tmp$ret$11;
      var tmp$ret$12;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$12 = element_2.k1();
      var provider = tmp$ret$12;
      var tmp_3 = isInterface(baseClass_0, KClass) ? baseClass_0 : THROW_CCE();
      collector.aq(tmp_3, typeof provider === 'function' ? provider : THROW_CCE());
    }
    // Inline function 'kotlin.collections.forEach' call
    var tmp3_forEach = this.up_1;
    var tmp$ret$13;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$13 = tmp3_forEach.i1().h();
    var tmp0_iterator_3 = tmp$ret$13;
    while (tmp0_iterator_3.i()) {
      var element_3 = tmp0_iterator_3.j();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      var tmp$ret$14;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$14 = element_3.h1();
      var baseClass_1 = tmp$ret$14;
      var tmp$ret$15;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$15 = element_3.k1();
      var provider_0 = tmp$ret$15;
      var tmp_4 = isInterface(baseClass_1, KClass) ? baseClass_1 : THROW_CCE();
      collector.bq(tmp_4, typeof provider_0 === 'function' ? provider_0 : THROW_CCE());
    }
  };
  function Argless() {
  }
  function WithTypeArguments() {
  }
  function ContextualProvider() {
  }
  var properties_initialized_SerializersModule_kt_fjigjn;
  function init_properties_SerializersModule_kt_swldyf() {
    if (properties_initialized_SerializersModule_kt_fjigjn) {
    } else {
      properties_initialized_SerializersModule_kt_fjigjn = true;
      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap(), emptyMap());
    }
  }
  function EmptySerializersModule_0() {
    return get_EmptySerializersModuleLegacyJs();
  }
  function SerializersModuleCollector$contextual$lambda($serializer) {
    return function (it) {
      return $serializer;
    };
  }
  function SerializersModuleCollector() {
  }
  function SerializableWith() {
  }
  function getChecked(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function Default() {
    Default_instance = this;
    Json.call(this, JsonConfiguration_init_$Create$(false, false, false, false, false, false, null, false, false, null, false, false, null, 8191, null), EmptySerializersModule_0());
  }
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration, serializersModule) {
    Default_getInstance();
    this.cq_1 = configuration;
    this.dq_1 = serializersModule;
    this.eq_1 = new DescriptorSchemaCache();
  }
  Json.prototype.fq = function () {
    return this.dq_1;
  };
  function Json_0(from, builderAction) {
    var builder = new JsonBuilder(from);
    builderAction(builder);
    var conf = builder.uq();
    return new JsonImpl(conf, builder.tq_1);
  }
  function Json$default(from, builderAction, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      from = Default_getInstance();
    return Json_0(from, builderAction);
  }
  function JsonBuilder(json) {
    this.gq_1 = json.cq_1.vq_1;
    this.hq_1 = json.cq_1.ar_1;
    this.iq_1 = json.cq_1.wq_1;
    this.jq_1 = json.cq_1.xq_1;
    this.kq_1 = json.cq_1.yq_1;
    this.lq_1 = json.cq_1.zq_1;
    this.mq_1 = json.cq_1.br_1;
    this.nq_1 = json.cq_1.cr_1;
    this.oq_1 = json.cq_1.dr_1;
    this.pq_1 = json.cq_1.er_1;
    this.qq_1 = json.cq_1.fr_1;
    this.rq_1 = json.cq_1.gr_1;
    this.sq_1 = json.cq_1.hr_1;
    this.tq_1 = json.fq();
  }
  JsonBuilder.prototype.uq = function () {
    if (this.oq_1) {
      // Inline function 'kotlin.require' call
      var tmp0_require = this.pq_1 === 'type';
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        tmp$ret$0 = 'Class discriminator should not be specified when array polymorphism is specified';
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_3(message));
      }
    }
    if (!this.lq_1) {
      // Inline function 'kotlin.require' call
      var tmp1_require = this.mq_1 === '    ';
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp1_require) {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        tmp$ret$1 = 'Indent should not be specified when default printing mode is used';
        var message_0 = tmp$ret$1;
        throw IllegalArgumentException_init_$Create$(toString_3(message_0));
      }
    } else if (!(this.mq_1 === '    ')) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.all' call
        var tmp2_all = this.mq_1;
        var indexedObject = tmp2_all;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
          tmp$ret$2 = ((equals_0(new Char(element), new Char(_Char___init__impl__6a9atx(32))) ? true : equals_0(new Char(element), new Char(_Char___init__impl__6a9atx(9)))) ? true : equals_0(new Char(element), new Char(_Char___init__impl__6a9atx(13)))) ? true : equals_0(new Char(element), new Char(_Char___init__impl__6a9atx(10)));
          if (!tmp$ret$2) {
            tmp$ret$3 = false;
            break $l$block;
          }
        }
        tmp$ret$3 = true;
      }
      var allWhitespaces = tmp$ret$3;
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!allWhitespaces) {
        var tmp$ret$4;
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        tmp$ret$4 = 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this.mq_1;
        var message_1 = tmp$ret$4;
        throw IllegalArgumentException_init_$Create$(toString_3(message_1));
      }
    }
    return new JsonConfiguration(this.gq_1, this.iq_1, this.jq_1, this.kq_1, this.lq_1, this.hq_1, this.mq_1, this.nq_1, this.oq_1, this.pq_1, this.qq_1, this.rq_1, this.sq_1);
  };
  function validateConfiguration($this) {
    if (equals_0($this.fq(), EmptySerializersModule_0()))
      return Unit_getInstance();
    var collector = new PolymorphismValidator($this.cq_1.dr_1, $this.cq_1.er_1);
    $this.fq().pp(collector);
  }
  function JsonImpl(configuration, module_0) {
    Json.call(this, configuration, module_0);
    validateConfiguration(this);
  }
  function JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      encodeDefaults = false;
    if (!(($mask0 & 2) === 0))
      ignoreUnknownKeys = false;
    if (!(($mask0 & 4) === 0))
      isLenient = false;
    if (!(($mask0 & 8) === 0))
      allowStructuredMapKeys = false;
    if (!(($mask0 & 16) === 0))
      prettyPrint = false;
    if (!(($mask0 & 32) === 0))
      explicitNulls = true;
    if (!(($mask0 & 64) === 0))
      prettyPrintIndent = '    ';
    if (!(($mask0 & 128) === 0))
      coerceInputValues = false;
    if (!(($mask0 & 256) === 0))
      useArrayPolymorphism = false;
    if (!(($mask0 & 512) === 0))
      classDiscriminator = 'type';
    if (!(($mask0 & 1024) === 0))
      allowSpecialFloatingPointValues = false;
    if (!(($mask0 & 2048) === 0))
      useAlternativeNames = true;
    if (!(($mask0 & 4096) === 0))
      namingStrategy = null;
    JsonConfiguration.call($this, encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy);
    return $this;
  }
  function JsonConfiguration_init_$Create$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy, $mask0, $marker) {
    return JsonConfiguration_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy, $mask0, $marker, Object.create(JsonConfiguration.prototype));
  }
  function JsonConfiguration(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy) {
    this.vq_1 = encodeDefaults;
    this.wq_1 = ignoreUnknownKeys;
    this.xq_1 = isLenient;
    this.yq_1 = allowStructuredMapKeys;
    this.zq_1 = prettyPrint;
    this.ar_1 = explicitNulls;
    this.br_1 = prettyPrintIndent;
    this.cr_1 = coerceInputValues;
    this.dr_1 = useArrayPolymorphism;
    this.er_1 = classDiscriminator;
    this.fr_1 = allowSpecialFloatingPointValues;
    this.gr_1 = useAlternativeNames;
    this.hr_1 = namingStrategy;
  }
  JsonConfiguration.prototype.toString = function () {
    return 'JsonConfiguration(encodeDefaults=' + this.vq_1 + ', ignoreUnknownKeys=' + this.wq_1 + ', isLenient=' + this.xq_1 + ', ' + ('allowStructuredMapKeys=' + this.yq_1 + ', prettyPrint=' + this.zq_1 + ', explicitNulls=' + this.ar_1 + ', ') + ("prettyPrintIndent='" + this.br_1 + "', coerceInputValues=" + this.cr_1 + ', useArrayPolymorphism=' + this.dr_1 + ', ') + ("classDiscriminator='" + this.er_1 + "', allowSpecialFloatingPointValues=" + this.fr_1 + ', useAlternativeNames=' + this.gr_1 + ', ') + ('namingStrategy=' + this.hr_1 + ')');
  };
  function checkKind($this, descriptor, actualClass) {
    var kind = descriptor.dm();
    var tmp;
    if (kind instanceof PolymorphicKind) {
      tmp = true;
    } else {
      tmp = equals_0(kind, CONTEXTUAL_getInstance());
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.c9() + " can't be registered as a subclass for polymorphic serialization " + ('because its kind ' + kind + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
    }
    if ($this.ir_1)
      return Unit_getInstance();
    var tmp_0;
    var tmp_1;
    if (equals_0(kind, LIST_getInstance()) ? true : equals_0(kind, MAP_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = kind instanceof PrimitiveKind;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      tmp_0 = kind instanceof ENUM;
    }
    if (tmp_0) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.c9() + ' of kind ' + kind + ' cannot be serialized polymorphically with class discriminator.');
    }
  }
  function checkDiscriminatorCollisions($this, descriptor, actualClass) {
    var inductionVariable = 0;
    var last = descriptor.cm();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var name = descriptor.fm(i);
        if (name === $this.jr_1) {
          throw IllegalArgumentException_init_$Create$('Polymorphic serializer for ' + actualClass + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
        }
      }
       while (inductionVariable < last);
  }
  function PolymorphismValidator(useArrayPolymorphism, discriminator) {
    this.ir_1 = useArrayPolymorphism;
    this.jr_1 = discriminator;
  }
  PolymorphismValidator.prototype.wp = function (kClass, provider) {
  };
  PolymorphismValidator.prototype.zp = function (baseClass, actualClass, actualSerializer) {
    var descriptor = actualSerializer.al();
    checkKind(this, descriptor, actualClass);
    if (!this.ir_1) {
      checkDiscriminatorCollisions(this, descriptor, actualClass);
    }
  };
  PolymorphismValidator.prototype.aq = function (baseClass, defaultSerializerProvider) {
  };
  PolymorphismValidator.prototype.bq = function (baseClass, defaultDeserializerProvider) {
  };
  function DescriptorSchemaCache() {
    this.kr_1 = createMapForCache(16);
  }
  function createMapForCache(initialCapacity) {
    return HashMap_init_$Create$_1(initialCapacity);
  }
  function KotlinxSerializer$Companion$DefaultJson$lambda($this$Json) {
    $this$Json.jq_1 = false;
    $this$Json.iq_1 = false;
    $this$Json.qq_1 = true;
    $this$Json.oq_1 = false;
    return Unit_getInstance();
  }
  function KotlinxSerializer_init_$Init$(json, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      json = Companion_getInstance_10().lr_1;
    KotlinxSerializer.call($this, json);
    return $this;
  }
  function KotlinxSerializer_init_$Create$(json, $mask0, $marker) {
    return KotlinxSerializer_init_$Init$(json, $mask0, $marker, Object.create(KotlinxSerializer.prototype));
  }
  function Companion_10() {
    Companion_instance_10 = this;
    var tmp = this;
    tmp.lr_1 = Json$default(null, KotlinxSerializer$Companion$DefaultJson$lambda, 1, null);
  }
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function KotlinxSerializer(json) {
    Companion_getInstance_10();
    this.mr_1 = json;
  }
  var initializer;
  function SerializerInitializer() {
    SerializerInitializer_instance = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp0_plusAssign = get_serializersStore();
    var tmp1_plusAssign = KotlinxSerializer_init_$Create$(null, 1, null);
    tmp0_plusAssign.e(tmp1_plusAssign);
  }
  var SerializerInitializer_instance;
  function SerializerInitializer_getInstance() {
    if (SerializerInitializer_instance == null)
      new SerializerInitializer();
    return SerializerInitializer_instance;
  }
  function System() {
    System_instance = this;
  }
  System.prototype.nr = function () {
    return Companion_getInstance_11().nr();
  };
  var System_instance;
  function System_getInstance() {
    if (System_instance == null)
      new System();
    return System_instance;
  }
  function get_DISTANT_PAST_SECONDS() {
    return DISTANT_PAST_SECONDS;
  }
  var DISTANT_PAST_SECONDS;
  function get_DISTANT_FUTURE_SECONDS() {
    return DISTANT_FUTURE_SECONDS;
  }
  var DISTANT_FUTURE_SECONDS;
  function Companion_11() {
    Companion_instance_11 = this;
    this.or_1 = new Instant_0(Instant.ofEpochSecond(get_DISTANT_PAST_SECONDS(), 999999999));
    this.pr_1 = new Instant_0(Instant.ofEpochSecond(get_DISTANT_FUTURE_SECONDS(), 0));
    this.qr_1 = new Instant_0(Instant.MIN);
    this.rr_1 = new Instant_0(Instant.MAX);
  }
  Companion_11.prototype.nr = function () {
    return new Instant_0(Clock.systemUTC().instant());
  };
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function Instant_0(value) {
    Companion_getInstance_11();
    this.sr_1 = value;
  }
  Instant_0.prototype.tr = function (other) {
    return numberToInt(this.sr_1.compareTo(other.sr_1));
  };
  Instant_0.prototype.e5 = function (other) {
    return this.tr(other instanceof Instant_0 ? other : THROW_CCE());
  };
  Instant_0.prototype.equals = function (other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      if (other instanceof Instant_0) {
        tmp_0 = equals_0(this.sr_1, other.sr_1);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  Instant_0.prototype.hashCode = function () {
    return numberToInt(this.sr_1.hashCode());
  };
  Instant_0.prototype.toString = function () {
    return this.sr_1.toString();
  };
  function Command() {
  }
  function Event() {
  }
  function Message() {
  }
  function Query() {
  }
  function F2ErrorDTO() {
  }
  function F2Error_init_$Init$(message, id, timestamp, code, requestId, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      id = null;
    if (!(($mask0 & 4) === 0))
      timestamp = System_getInstance().nr().toString();
    if (!(($mask0 & 8) === 0))
      code = 500;
    if (!(($mask0 & 16) === 0))
      requestId = null;
    F2Error.call($this, message, id, timestamp, code, requestId);
    return $this;
  }
  function F2Error_init_$Create$(message, id, timestamp, code, requestId, $mask0, $marker) {
    return F2Error_init_$Init$(message, id, timestamp, code, requestId, $mask0, $marker, Object.create(F2Error.prototype));
  }
  function Companion_12() {
    Companion_instance_12 = this;
  }
  Companion_12.prototype.serializer = function () {
    return $serializer_getInstance();
  };
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.error.F2Error', this, 5);
    tmp0_serialDesc.dp('message', false);
    tmp0_serialDesc.dp('id', true);
    tmp0_serialDesc.dp('timestamp', true);
    tmp0_serialDesc.dp('code', true);
    tmp0_serialDesc.dp('requestId', true);
    this.yr_1 = tmp0_serialDesc;
  }
  $serializer.prototype.al = function () {
    return this.yr_1;
  };
  $serializer.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), IntSerializer_getInstance(), get_nullable(StringSerializer_getInstance())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer.prototype.zr = function (decoder) {
    var tmp0_desc = this.yr_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = 0;
    var tmp8_local4 = null;
    var tmp9_input = decoder.as(tmp0_desc);
    if (tmp9_input.bn()) {
      tmp4_local0 = tmp9_input.en(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.gn(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.en(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.dn(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.gn(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.en(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.gn(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.en(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.dn(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.gn(tmp0_desc, 4, StringSerializer_getInstance(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.an(tmp0_desc);
    return F2Error_init_$Create$_0(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  $serializer.prototype.bs = function (encoder, value) {
    var tmp0_desc = this.yr_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.jn(tmp0_desc, 0, value.message);
    if (tmp1_output.hn(tmp0_desc, 1) ? true : !(value.id == null)) {
      tmp1_output.ln(tmp0_desc, 1, StringSerializer_getInstance(), value.id);
    }
    if (tmp1_output.hn(tmp0_desc, 2) ? true : !(value.timestamp === System_getInstance().nr().toString())) {
      tmp1_output.jn(tmp0_desc, 2, value.timestamp);
    }
    if (tmp1_output.hn(tmp0_desc, 3) ? true : !(value.code === 500)) {
      tmp1_output.in(tmp0_desc, 3, value.code);
    }
    if (tmp1_output.hn(tmp0_desc, 4) ? true : !(value.requestId == null)) {
      tmp1_output.ln(tmp0_desc, 4, StringSerializer_getInstance(), value.requestId);
    }
    tmp1_output.an(tmp0_desc);
  };
  $serializer.prototype.cs = function (encoder, value) {
    return this.bs(encoder, value instanceof F2Error ? value : THROW_CCE());
  };
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function F2Error_init_$Init$_0(seen1, message, id, timestamp, code, requestId, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance().yr_1);
    }
    $this.ds_1 = message;
    if (0 === (seen1 & 2))
      $this.es_1 = null;
    else
      $this.es_1 = id;
    if (0 === (seen1 & 4))
      $this.fs_1 = System_getInstance().nr().toString();
    else
      $this.fs_1 = timestamp;
    if (0 === (seen1 & 8))
      $this.gs_1 = 500;
    else
      $this.gs_1 = code;
    if (0 === (seen1 & 16))
      $this.hs_1 = null;
    else
      $this.hs_1 = requestId;
    return $this;
  }
  function F2Error_init_$Create$_0(seen1, message, id, timestamp, code, requestId, serializationConstructorMarker) {
    return F2Error_init_$Init$_0(seen1, message, id, timestamp, code, requestId, serializationConstructorMarker, Object.create(F2Error.prototype));
  }
  function F2Error(message, id, timestamp, code, requestId) {
    Companion_getInstance_12();
    var id_0 = id === void 1 ? null : id;
    var timestamp_0 = timestamp === void 1 ? System_getInstance().nr().toString() : timestamp;
    var code_0 = code === void 1 ? 500 : code;
    var requestId_0 = requestId === void 1 ? null : requestId;
    this.ds_1 = message;
    this.es_1 = id_0;
    this.fs_1 = timestamp_0;
    this.gs_1 = code_0;
    this.hs_1 = requestId_0;
  }
  F2Error.prototype.r4 = function () {
    return this.ds_1;
  };
  F2Error.prototype.ur = function () {
    return this.es_1;
  };
  F2Error.prototype.vr = function () {
    return this.fs_1;
  };
  F2Error.prototype.wr = function () {
    return this.gs_1;
  };
  F2Error.prototype.xr = function () {
    return this.hs_1;
  };
  F2Error.prototype.toString = function () {
    return "F2Error(timestamp='" + this.timestamp + "', code=" + this.code + ", requestId='" + this.requestId + "', message='" + this.message + "')";
  };
  Object.defineProperty(F2Error.prototype, 'message', {
    configurable: true,
    get: function () {
      return this.r4();
    }
  });
  Object.defineProperty(F2Error.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  Object.defineProperty(F2Error.prototype, 'timestamp', {
    configurable: true,
    get: function () {
      return this.vr();
    }
  });
  Object.defineProperty(F2Error.prototype, 'code', {
    configurable: true,
    get: function () {
      return this.wr();
    }
  });
  Object.defineProperty(F2Error.prototype, 'requestId', {
    configurable: true,
    get: function () {
      return this.xr();
    }
  });
  function F2Exception_init_$Init$(error, cause, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      cause = null;
    F2Exception.call($this, error, cause);
    return $this;
  }
  function F2Exception_init_$Create$(error, cause, $mask0, $marker) {
    var tmp = F2Exception_init_$Init$(error, cause, $mask0, $marker, Object.create(F2Exception.prototype));
    captureStack(tmp, F2Exception_init_$Create$);
    return tmp;
  }
  function Companion_13() {
    Companion_instance_13 = this;
  }
  Companion_13.prototype.invoke = function (message, id, requestId, code, cause) {
    return this.is(message, id === void 1 ? '' : id, requestId === void 1 ? '' : requestId, code === void 1 ? 500 : code, cause === void 1 ? null : cause);
  };
  Companion_13.prototype.is = function (message, id, requestId, code, cause) {
    var tmp0_timestamp = System_getInstance().nr().toString();
    return new F2Exception(new F2Error(message, id, tmp0_timestamp, code, requestId), cause);
  };
  Companion_13.prototype.js = function (message, id, requestId, code, cause, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      id = '';
    if (!(($mask0 & 4) === 0))
      requestId = '';
    if (!(($mask0 & 8) === 0))
      code = 500;
    if (!(($mask0 & 16) === 0))
      cause = null;
    return this.is(message, id, requestId, code, cause);
  };
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function F2Exception(error, cause) {
    Companion_getInstance_13();
    var cause_0 = cause === void 1 ? null : cause;
    RuntimeException_init_$Init$_1(error.message, cause_0, this);
    this.error = error;
    captureStack(this, F2Exception);
  }
  F2Exception.prototype.ks = function () {
    return this.error;
  };
  function Match() {
  }
  function AndMatch_init_$Init$(matches, negative, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      negative = false;
    AndMatch.call($this, matches, negative);
    return $this;
  }
  function AndMatch_init_$Create$(matches, negative, $mask0, $marker) {
    return AndMatch_init_$Init$(matches, negative, $mask0, $marker, Object.create(AndMatch.prototype));
  }
  function AndMatch(matches, negative) {
    this.ms_1 = matches;
    this.ns_1 = negative;
  }
  AndMatch.prototype.ls = function () {
    return this.ns_1;
  };
  AndMatch.prototype.map = function (transform) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.ms_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      var tmp$ret$0;
      // Inline function 'f2.dsl.cqrs.filter.AndMatch.map.<anonymous>' call
      tmp$ret$0 = item.map(transform);
      tmp0_mapTo.e(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return new AndMatch(tmp$ret$2, this.ns_1);
  };
  AndMatch.prototype.not = function () {
    return this.os(null, !this.ns_1, 1, null);
  };
  AndMatch.prototype.and = function (match) {
    var tmp = plus_3(this.ms_1, match);
    return this.os(tmp, false, 2, null);
  };
  AndMatch.prototype.ps = function (matches, negative) {
    return new AndMatch(matches, negative);
  };
  AndMatch.prototype.os = function (matches, negative, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      matches = this.ms_1;
    if (!(($mask0 & 2) === 0))
      negative = this.ns_1;
    return this.ps(matches, negative);
  };
  AndMatch.prototype.toString = function () {
    return 'AndMatch(matches=' + this.ms_1 + ', negative=' + this.ns_1 + ')';
  };
  AndMatch.prototype.hashCode = function () {
    var result = hashCode(this.ms_1);
    result = imul(result, 31) + (this.ns_1 | 0) | 0;
    return result;
  };
  AndMatch.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AndMatch))
      return false;
    var tmp0_other_with_cast = other instanceof AndMatch ? other : THROW_CCE();
    if (!equals_0(this.ms_1, tmp0_other_with_cast.ms_1))
      return false;
    if (!(this.ns_1 === tmp0_other_with_cast.ns_1))
      return false;
    return true;
  };
  Object.defineProperty(AndMatch.prototype, 'negative', {
    configurable: true,
    get: function () {
      return this.ls();
    }
  });
  function OrMatch_init_$Init$(matches, negative, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      negative = false;
    OrMatch.call($this, matches, negative);
    return $this;
  }
  function OrMatch_init_$Create$(matches, negative, $mask0, $marker) {
    return OrMatch_init_$Init$(matches, negative, $mask0, $marker, Object.create(OrMatch.prototype));
  }
  function OrMatch(matches, negative) {
    this.qs_1 = matches;
    this.rs_1 = negative;
  }
  OrMatch.prototype.ls = function () {
    return this.rs_1;
  };
  OrMatch.prototype.map = function (transform) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.qs_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      var tmp$ret$0;
      // Inline function 'f2.dsl.cqrs.filter.OrMatch.map.<anonymous>' call
      tmp$ret$0 = item.map(transform);
      tmp0_mapTo.e(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return new OrMatch(tmp$ret$2, this.rs_1);
  };
  OrMatch.prototype.not = function () {
    return this.os(null, !this.rs_1, 1, null);
  };
  OrMatch.prototype.or = function (match) {
    var tmp = plus_3(this.qs_1, match);
    return this.os(tmp, false, 2, null);
  };
  OrMatch.prototype.ps = function (matches, negative) {
    return new OrMatch(matches, negative);
  };
  OrMatch.prototype.os = function (matches, negative, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      matches = this.qs_1;
    if (!(($mask0 & 2) === 0))
      negative = this.rs_1;
    return this.ps(matches, negative);
  };
  OrMatch.prototype.toString = function () {
    return 'OrMatch(matches=' + this.qs_1 + ', negative=' + this.rs_1 + ')';
  };
  OrMatch.prototype.hashCode = function () {
    var result = hashCode(this.qs_1);
    result = imul(result, 31) + (this.rs_1 | 0) | 0;
    return result;
  };
  OrMatch.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrMatch))
      return false;
    var tmp0_other_with_cast = other instanceof OrMatch ? other : THROW_CCE();
    if (!equals_0(this.qs_1, tmp0_other_with_cast.qs_1))
      return false;
    if (!(this.rs_1 === tmp0_other_with_cast.rs_1))
      return false;
    return true;
  };
  Object.defineProperty(OrMatch.prototype, 'negative', {
    configurable: true,
    get: function () {
      return this.ls();
    }
  });
  function SortDTO() {
  }
  function PageDTO() {
  }
  function $serializer_init_$Init$(typeSerial0, $this) {
    $serializer_0.call($this);
    $this.ys_1 = typeSerial0;
    return $this;
  }
  function $serializer_init_$Create$(typeSerial0) {
    return $serializer_init_$Init$(typeSerial0, Object.create($serializer_0.prototype));
  }
  function Companion_14() {
    Companion_instance_14 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.Page', null, 2);
    tmp0_serialDesc.dp('total', false);
    tmp0_serialDesc.dp('items', false);
    Companion_getInstance_14().zs_1 = tmp0_serialDesc;
  }
  Companion_14.prototype.serializer = function (typeSerial0) {
    return $serializer_init_$Create$(typeSerial0);
  };
  Companion_14.prototype.at = function (typeParamsSerializers) {
    return this.serializer(typeParamsSerializers[0]);
  };
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function $serializer_0() {
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.Page', this, 2);
    tmp0_serialDesc.dp('total', false);
    tmp0_serialDesc.dp('items', false);
    this.xs_1 = tmp0_serialDesc;
  }
  $serializer_0.prototype.al = function () {
    return this.xs_1;
  };
  $serializer_0.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [IntSerializer_getInstance(), new ArrayListSerializer(this.ys_1)];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_0.prototype.zr = function (decoder) {
    var tmp0_desc = this.xs_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_input = decoder.as(tmp0_desc);
    if (tmp6_input.bn()) {
      tmp4_local0 = tmp6_input.dn(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.fn(tmp0_desc, 1, new ArrayListSerializer(this.ys_1), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.dn(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.fn(tmp0_desc, 1, new ArrayListSerializer(this.ys_1), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.an(tmp0_desc);
    return Page_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_0.prototype.bt = function (encoder, value) {
    var tmp0_desc = this.xs_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.in(tmp0_desc, 0, value.ct_1);
    tmp1_output.kn(tmp0_desc, 1, new ArrayListSerializer(this.ys_1), value.dt_1);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_0.prototype.cs = function (encoder, value) {
    return this.bt(encoder, value instanceof Page ? value : THROW_CCE());
  };
  $serializer_0.prototype.kp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [this.ys_1];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  function Page_init_$Init$(seen1, total, items, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1))) {
      throwMissingFieldException(seen1, 3, Companion_getInstance_14().zs_1);
    }
    $this.ct_1 = total;
    $this.dt_1 = items;
    return $this;
  }
  function Page_init_$Create$(seen1, total, items, serializationConstructorMarker) {
    return Page_init_$Init$(seen1, total, items, serializationConstructorMarker, Object.create(Page.prototype));
  }
  function Page(total, items) {
    Companion_getInstance_14();
    this.ct_1 = total;
    this.dt_1 = items;
  }
  Page.prototype.vs = function () {
    return this.ct_1;
  };
  Page.prototype.ws = function () {
    return this.dt_1;
  };
  Object.defineProperty(Page.prototype, 'total', {
    configurable: true,
    get: function () {
      return this.vs();
    }
  });
  Object.defineProperty(Page.prototype, 'items', {
    configurable: true,
    get: function () {
      return this.ws();
    }
  });
  function PageQueryDTO() {
  }
  function PageQueryResultDTO() {
  }
  function Companion_15() {
    Companion_instance_15 = this;
  }
  Companion_15.prototype.serializer = function () {
    return $serializer_getInstance_0();
  };
  var Companion_instance_15;
  function Companion_getInstance_15() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function $serializer_1() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.PageQuery', this, 1);
    tmp0_serialDesc.dp('pagination', false);
    this.ft_1 = tmp0_serialDesc;
  }
  $serializer_1.prototype.al = function () {
    return this.ft_1;
  };
  $serializer_1.prototype.jp = function () {
    var tmp$ret$5;
    // Inline function 'kotlin.arrayOf' call
    var tmp = getKClass(OffsetPaginationDTO);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    var tmp0_arrayOf = [get_nullable(PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2))];
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = tmp0_arrayOf;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  };
  $serializer_1.prototype.zr = function (decoder) {
    var tmp0_desc = this.ft_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.as(tmp0_desc);
    if (tmp5_input.bn()) {
      var tmp = getKClass(OffsetPaginationDTO);
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [];
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp4_local0 = tmp5_input.gn(tmp0_desc, 0, PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            var tmp_0 = getKClass(OffsetPaginationDTO);
            var tmp$ret$5;
            // Inline function 'kotlin.arrayOf' call
            var tmp$ret$4;
            // Inline function 'kotlin.js.unsafeCast' call
            var tmp$ret$3;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$3 = [];
            tmp$ret$4 = tmp$ret$3;
            tmp$ret$5 = tmp$ret$4;

            tmp4_local0 = tmp5_input.gn(tmp0_desc, 0, PolymorphicSerializer_init_$Create$(tmp_0, tmp$ret$5), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.an(tmp0_desc);
    return PageQuery_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_1.prototype.gt = function (encoder, value) {
    var tmp0_desc = this.ft_1;
    var tmp1_output = encoder.as(tmp0_desc);
    var tmp = getKClass(OffsetPaginationDTO);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp1_output.ln(tmp0_desc, 0, PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2), value.ht_1);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_1.prototype.cs = function (encoder, value) {
    return this.gt(encoder, value instanceof PageQuery ? value : THROW_CCE());
  };
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_1();
    return $serializer_instance_0;
  }
  function PageQuery_init_$Init$(seen1, pagination, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_0().ft_1);
    }
    $this.ht_1 = pagination;
    return $this;
  }
  function PageQuery_init_$Create$(seen1, pagination, serializationConstructorMarker) {
    return PageQuery_init_$Init$(seen1, pagination, serializationConstructorMarker, Object.create(PageQuery.prototype));
  }
  function PageQuery(pagination) {
    Companion_getInstance_15();
    this.ht_1 = pagination;
  }
  PageQuery.prototype.et = function () {
    return this.ht_1;
  };
  Object.defineProperty(PageQuery.prototype, 'pagination', {
    configurable: true,
    get: function () {
      return this.et();
    }
  });
  function $serializer_init_$Init$_0(typeSerial0, $this) {
    $serializer_2.call($this);
    $this.jt_1 = typeSerial0;
    return $this;
  }
  function $serializer_init_$Create$_0(typeSerial0) {
    return $serializer_init_$Init$_0(typeSerial0, Object.create($serializer_2.prototype));
  }
  function Companion_16() {
    Companion_instance_16 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.PageQueryResult', null, 3);
    tmp0_serialDesc.dp('pagination', false);
    tmp0_serialDesc.dp('total', false);
    tmp0_serialDesc.dp('items', false);
    Companion_getInstance_16().kt_1 = tmp0_serialDesc;
  }
  Companion_16.prototype.serializer = function (typeSerial0) {
    return $serializer_init_$Create$_0(typeSerial0);
  };
  Companion_16.prototype.at = function (typeParamsSerializers) {
    return this.serializer(typeParamsSerializers[0]);
  };
  var Companion_instance_16;
  function Companion_getInstance_16() {
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function $serializer_2() {
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.PageQueryResult', this, 3);
    tmp0_serialDesc.dp('pagination', false);
    tmp0_serialDesc.dp('total', false);
    tmp0_serialDesc.dp('items', false);
    this.it_1 = tmp0_serialDesc;
  }
  $serializer_2.prototype.al = function () {
    return this.it_1;
  };
  $serializer_2.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [get_nullable($serializer_getInstance_1()), IntSerializer_getInstance(), new ArrayListSerializer(this.jt_1)];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_2.prototype.zr = function (decoder) {
    var tmp0_desc = this.it_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = 0;
    var tmp6_local2 = null;
    var tmp7_input = decoder.as(tmp0_desc);
    if (tmp7_input.bn()) {
      tmp4_local0 = tmp7_input.gn(tmp0_desc, 0, $serializer_getInstance_1(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.dn(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.fn(tmp0_desc, 2, new ArrayListSerializer(this.jt_1), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.gn(tmp0_desc, 0, $serializer_getInstance_1(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.dn(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.fn(tmp0_desc, 2, new ArrayListSerializer(this.jt_1), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.an(tmp0_desc);
    return PageQueryResult_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer_2.prototype.lt = function (encoder, value) {
    var tmp0_desc = this.it_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.ln(tmp0_desc, 0, $serializer_getInstance_1(), value.mt_1);
    tmp1_output.in(tmp0_desc, 1, value.nt_1);
    tmp1_output.kn(tmp0_desc, 2, new ArrayListSerializer(this.jt_1), value.ot_1);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_2.prototype.cs = function (encoder, value) {
    return this.lt(encoder, value instanceof PageQueryResult ? value : THROW_CCE());
  };
  $serializer_2.prototype.kp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [this.jt_1];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  function PageQueryResult_init_$Init$(seen1, pagination, total, items, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1))) {
      throwMissingFieldException(seen1, 7, Companion_getInstance_16().kt_1);
    }
    $this.mt_1 = pagination;
    $this.nt_1 = total;
    $this.ot_1 = items;
    return $this;
  }
  function PageQueryResult_init_$Create$(seen1, pagination, total, items, serializationConstructorMarker) {
    return PageQueryResult_init_$Init$(seen1, pagination, total, items, serializationConstructorMarker, Object.create(PageQueryResult.prototype));
  }
  function PageQueryResult(pagination, total, items) {
    Companion_getInstance_16();
    this.mt_1 = pagination;
    this.nt_1 = total;
    this.ot_1 = items;
  }
  PageQueryResult.prototype.et = function () {
    return this.mt_1;
  };
  PageQueryResult.prototype.vs = function () {
    return this.nt_1;
  };
  PageQueryResult.prototype.ws = function () {
    return this.ot_1;
  };
  Object.defineProperty(PageQueryResult.prototype, 'pagination', {
    configurable: true,
    get: function () {
      return this.et();
    }
  });
  Object.defineProperty(PageQueryResult.prototype, 'total', {
    configurable: true,
    get: function () {
      return this.vs();
    }
  });
  Object.defineProperty(PageQueryResult.prototype, 'items', {
    configurable: true,
    get: function () {
      return this.ws();
    }
  });
  function Companion_17() {
    Companion_instance_17 = this;
  }
  Companion_17.prototype.serializer = function () {
    var tmp = getKClass(Pagination);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [getKClass(OffsetPaginationDTO), getKClass(PagePaginationDTO)];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    var tmp_0 = tmp$ret$2;
    var tmp$ret$11;
    // Inline function 'kotlin.arrayOf' call
    var tmp_1 = getKClass(OffsetPaginationDTO);
    var tmp$ret$5;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = [];
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    var tmp_2 = PolymorphicSerializer_init_$Create$(tmp_1, tmp$ret$5);
    var tmp_3 = getKClass(PagePaginationDTO);
    var tmp$ret$8;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$6;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$6 = [];
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    var tmp1_arrayOf = [tmp_2, PolymorphicSerializer_init_$Create$(tmp_3, tmp$ret$8)];
    var tmp$ret$10;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$9 = tmp1_arrayOf;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp_4 = tmp$ret$11;
    var tmp$ret$14;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$13;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$12;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$12 = [];
    tmp$ret$13 = tmp$ret$12;
    tmp$ret$14 = tmp$ret$13;
    return SealedClassSerializer_init_$Create$('f2.dsl.cqrs.page.Pagination', tmp, tmp_0, tmp_4, tmp$ret$14);
  };
  Companion_17.prototype.at = function (typeParamsSerializers) {
    return this.serializer();
  };
  var Companion_instance_17;
  function Companion_getInstance_17() {
    if (Companion_instance_17 == null)
      new Companion_17();
    return Companion_instance_17;
  }
  function Pagination() {
    Companion_getInstance_17();
  }
  function OffsetPaginationDTO() {
  }
  function PagePaginationDTO() {
  }
  function Companion_18() {
    Companion_instance_18 = this;
  }
  Companion_18.prototype.serializer = function () {
    return $serializer_getInstance_1();
  };
  var Companion_instance_18;
  function Companion_getInstance_18() {
    if (Companion_instance_18 == null)
      new Companion_18();
    return Companion_instance_18;
  }
  function $serializer_3() {
    $serializer_instance_1 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.OffsetPagination', this, 2);
    tmp0_serialDesc.dp('offset', false);
    tmp0_serialDesc.dp('limit', false);
    this.st_1 = tmp0_serialDesc;
  }
  $serializer_3.prototype.al = function () {
    return this.st_1;
  };
  $serializer_3.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [IntSerializer_getInstance(), IntSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_3.prototype.zr = function (decoder) {
    var tmp0_desc = this.st_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = 0;
    var tmp6_input = decoder.as(tmp0_desc);
    if (tmp6_input.bn()) {
      tmp4_local0 = tmp6_input.dn(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.dn(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.dn(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.dn(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.an(tmp0_desc);
    return OffsetPagination_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_3.prototype.tt = function (encoder, value) {
    var tmp0_desc = this.st_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.in(tmp0_desc, 0, value.ut_1);
    tmp1_output.in(tmp0_desc, 1, value.vt_1);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_3.prototype.cs = function (encoder, value) {
    return this.tt(encoder, value instanceof OffsetPagination ? value : THROW_CCE());
  };
  var $serializer_instance_1;
  function $serializer_getInstance_1() {
    if ($serializer_instance_1 == null)
      new $serializer_3();
    return $serializer_instance_1;
  }
  function OffsetPagination_init_$Init$(seen1, offset, limit, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1))) {
      throwMissingFieldException(seen1, 3, $serializer_getInstance_1().st_1);
    }
    $this.ut_1 = offset;
    $this.vt_1 = limit;
    return $this;
  }
  function OffsetPagination_init_$Create$(seen1, offset, limit, serializationConstructorMarker) {
    return OffsetPagination_init_$Init$(seen1, offset, limit, serializationConstructorMarker, Object.create(OffsetPagination.prototype));
  }
  function OffsetPagination(offset, limit) {
    Companion_getInstance_18();
    this.ut_1 = offset;
    this.vt_1 = limit;
  }
  OffsetPagination.prototype.pt = function () {
    return this.ut_1;
  };
  OffsetPagination.prototype.qt = function () {
    return this.vt_1;
  };
  Object.defineProperty(OffsetPagination.prototype, 'offset', {
    configurable: true,
    get: function () {
      return this.pt();
    }
  });
  Object.defineProperty(OffsetPagination.prototype, 'limit', {
    configurable: true,
    get: function () {
      return this.qt();
    }
  });
  function Companion_19() {
    Companion_instance_19 = this;
  }
  Companion_19.prototype.serializer = function () {
    return $serializer_getInstance_2();
  };
  var Companion_instance_19;
  function Companion_getInstance_19() {
    if (Companion_instance_19 == null)
      new Companion_19();
    return Companion_instance_19;
  }
  function $serializer_4() {
    $serializer_instance_2 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('f2.dsl.cqrs.page.PagePagination', this, 2);
    tmp0_serialDesc.dp('page', false);
    tmp0_serialDesc.dp('size', false);
    this.wt_1 = tmp0_serialDesc;
  }
  $serializer_4.prototype.al = function () {
    return this.wt_1;
  };
  $serializer_4.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [get_nullable(IntSerializer_getInstance()), get_nullable(IntSerializer_getInstance())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_4.prototype.zr = function (decoder) {
    var tmp0_desc = this.wt_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_input = decoder.as(tmp0_desc);
    if (tmp6_input.bn()) {
      tmp4_local0 = tmp6_input.gn(tmp0_desc, 0, IntSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.gn(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.gn(tmp0_desc, 0, IntSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.gn(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.an(tmp0_desc);
    return PagePagination_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_4.prototype.xt = function (encoder, value) {
    var tmp0_desc = this.wt_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.ln(tmp0_desc, 0, IntSerializer_getInstance(), value.yt_1);
    tmp1_output.ln(tmp0_desc, 1, IntSerializer_getInstance(), value.zt_1);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_4.prototype.cs = function (encoder, value) {
    return this.xt(encoder, value instanceof PagePagination ? value : THROW_CCE());
  };
  var $serializer_instance_2;
  function $serializer_getInstance_2() {
    if ($serializer_instance_2 == null)
      new $serializer_4();
    return $serializer_instance_2;
  }
  function PagePagination_init_$Init$(seen1, page, size, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1))) {
      throwMissingFieldException(seen1, 3, $serializer_getInstance_2().wt_1);
    }
    $this.yt_1 = page;
    $this.zt_1 = size;
    return $this;
  }
  function PagePagination_init_$Create$(seen1, page, size, serializationConstructorMarker) {
    return PagePagination_init_$Init$(seen1, page, size, serializationConstructorMarker, Object.create(PagePagination.prototype));
  }
  function PagePagination(page, size) {
    Companion_getInstance_19();
    this.yt_1 = page;
    this.zt_1 = size;
  }
  PagePagination.prototype.rt = function () {
    return this.yt_1;
  };
  PagePagination.prototype.f = function () {
    return this.zt_1;
  };
  Object.defineProperty(PagePagination.prototype, 'page', {
    configurable: true,
    get: function () {
      return this.rt();
    }
  });
  Object.defineProperty(PagePagination.prototype, 'size', {
    configurable: true,
    get: function () {
      return this.f();
    }
  });
  function AuthedUserDTO() {
  }
  function hasRole(_this__u8e3s4, role) {
    return contains_1(_this__u8e3s4.roles, role.eu_1);
  }
  function hasOneOfRoles(_this__u8e3s4, roles) {
    var tmp$ret$2;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = value$factory();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(roles.length);
      var indexedObject = roles;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        tmp0_mapTo.e(tmp0_map(item));
      }
      tmp$ret$0 = tmp0_mapTo;
      tmp$ret$1 = tmp$ret$0;
      var tmp1_any = tmp$ret$1;
      var tmp2_any = _this__u8e3s4.roles;
      var tmp;
      if (isInterface(tmp1_any, Collection)) {
        tmp = tmp1_any.k();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$2 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp1_any.h();
      while (tmp0_iterator.i()) {
        var element = tmp0_iterator.j();
        if (contains_1(tmp2_any, element)) {
          tmp$ret$2 = true;
          break $l$block_0;
        }
      }
      tmp$ret$2 = false;
    }
    return tmp$ret$2;
  }
  function hasOneOfRoles_0(_this__u8e3s4, roles) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = _this__u8e3s4.roles;
      var indexedObject = roles;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        if (contains_1(tmp0_any, element)) {
          tmp$ret$0 = true;
          break $l$block;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  }
  function value$factory() {
    return getPropertyCallableRef('value', 1, KProperty1, function (receiver) {
      return receiver.eu_1;
    }, null);
  }
  var Role_SUPER_ADMIN_instance;
  var Role_IM_USER_READ_instance;
  var Role_IM_USER_WRITE_instance;
  var Role_IM_ORGANIZATION_READ_instance;
  var Role_IM_ORGANIZATION_WRITE_instance;
  var Role_IM_APIKEY_READ_instance;
  var Role_IM_APIKEY_WRITE_instance;
  var Role_IM_ROLE_READ_instance;
  var Role_IM_ROLE_WRITE_instance;
  var Role_IM_MY_ORGANIZATION_WRITE_instance;
  var Role_entriesInitialized;
  function Role_initEntries() {
    if (Role_entriesInitialized)
      return Unit_getInstance();
    Role_entriesInitialized = true;
    Role_SUPER_ADMIN_instance = new Role('SUPER_ADMIN', 0, 'super_admin');
    Role_IM_USER_READ_instance = new Role('IM_USER_READ', 1, 'im_read_user');
    Role_IM_USER_WRITE_instance = new Role('IM_USER_WRITE', 2, 'im_write_user');
    Role_IM_ORGANIZATION_READ_instance = new Role('IM_ORGANIZATION_READ', 3, 'im_read_organization');
    Role_IM_ORGANIZATION_WRITE_instance = new Role('IM_ORGANIZATION_WRITE', 4, 'im_write_organization');
    Role_IM_APIKEY_READ_instance = new Role('IM_APIKEY_READ', 5, 'im_read_apikey');
    Role_IM_APIKEY_WRITE_instance = new Role('IM_APIKEY_WRITE', 6, 'im_write_apikey');
    Role_IM_ROLE_READ_instance = new Role('IM_ROLE_READ', 7, 'im_read_role');
    Role_IM_ROLE_WRITE_instance = new Role('IM_ROLE_WRITE', 8, 'im_write_role');
    Role_IM_MY_ORGANIZATION_WRITE_instance = new Role('IM_MY_ORGANIZATION_WRITE', 9, 'im_write_my_organization');
  }
  function Role(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this.eu_1 = value;
  }
  function Role_IM_USER_READ_getInstance() {
    Role_initEntries();
    return Role_IM_USER_READ_instance;
  }
  function Role_IM_USER_WRITE_getInstance() {
    Role_initEntries();
    return Role_IM_USER_WRITE_instance;
  }
  function Role_IM_ORGANIZATION_READ_getInstance() {
    Role_initEntries();
    return Role_IM_ORGANIZATION_READ_instance;
  }
  function Role_IM_ORGANIZATION_WRITE_getInstance() {
    Role_initEntries();
    return Role_IM_ORGANIZATION_WRITE_instance;
  }
  function Role_IM_MY_ORGANIZATION_WRITE_getInstance() {
    Role_initEntries();
    return Role_IM_MY_ORGANIZATION_WRITE_instance;
  }
  function AddressDTO() {
  }
  function ClientJs$doCall$slambda($fnc, resultContinuation) {
    this.qu_1 = $fnc;
    CoroutineImpl.call(this, resultContinuation);
  }
  ClientJs$doCall$slambda.prototype.su = function ($this$promise, $cont) {
    var tmp = this.tu($this$promise, $cont);
    tmp.qb_1 = Unit_getInstance();
    tmp.rb_1 = null;
    return tmp.xb();
  };
  ClientJs$doCall$slambda.prototype.jc = function (p1, $cont) {
    return this.su((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $cont);
  };
  ClientJs$doCall$slambda.prototype.xb = function () {
    var suspendResult = this.qb_1;
    $sm: do
      try {
        var tmp = this.ob_1;
        switch (tmp) {
          case 0:
            this.pb_1 = 2;
            this.ob_1 = 1;
            suspendResult = this.qu_1(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var result = suspendResult;
            return JSON.parse(JSON.stringify(result));
          case 2:
            throw this.rb_1;
        }
      } catch ($p) {
        if (this.pb_1 === 2) {
          throw $p;
        } else {
          this.ob_1 = this.pb_1;
          this.rb_1 = $p;
        }
      }
     while (true);
  };
  ClientJs$doCall$slambda.prototype.tu = function ($this$promise, completion) {
    var i = new ClientJs$doCall$slambda(this.qu_1, completion);
    i.ru_1 = $this$promise;
    return i;
  };
  function ClientJs$doCall$slambda_0($fnc, resultContinuation) {
    var i = new ClientJs$doCall$slambda($fnc, resultContinuation);
    var l = function ($this$promise, $cont) {
      return i.su($this$promise, $cont);
    };
    l.$arity = 1;
    return l;
  }
  function ClientJs() {
  }
  ClientJs.prototype.doCall = function (fnc) {
    var tmp = GlobalScope_getInstance();
    return promise$default(tmp, null, null, ClientJs$doCall$slambda_0(fnc, null), 3, null);
  };
  function AuthRealm(serverUrl, realmId, clientId, redirectUrl) {
    this.uu_1 = serverUrl;
    this.vu_1 = realmId;
    this.wu_1 = clientId;
    this.xu_1 = redirectUrl;
  }
  AuthRealm.prototype.yu = function () {
    return this.uu_1;
  };
  AuthRealm.prototype.zu = function () {
    return this.vu_1;
  };
  AuthRealm.prototype.av = function () {
    return this.wu_1;
  };
  AuthRealm.prototype.bv = function () {
    return this.xu_1;
  };
  Object.defineProperty(AuthRealm.prototype, 'serverUrl', {
    configurable: true,
    get: function () {
      return this.yu();
    }
  });
  Object.defineProperty(AuthRealm.prototype, 'realmId', {
    configurable: true,
    get: function () {
      return this.zu();
    }
  });
  Object.defineProperty(AuthRealm.prototype, 'clientId', {
    configurable: true,
    get: function () {
      return this.av();
    }
  });
  Object.defineProperty(AuthRealm.prototype, 'redirectUrl', {
    configurable: true,
    get: function () {
      return this.bv();
    }
  });
  function AuthRealmPassword(serverUrl, realmId, redirectUrl, clientId, username, password) {
    AuthRealm.call(this, serverUrl, realmId, clientId, redirectUrl);
    this.gv_1 = serverUrl;
    this.hv_1 = realmId;
    this.iv_1 = redirectUrl;
    this.jv_1 = clientId;
    this.username = username;
    this.password = password;
  }
  AuthRealmPassword.prototype.yu = function () {
    return this.gv_1;
  };
  AuthRealmPassword.prototype.zu = function () {
    return this.hv_1;
  };
  AuthRealmPassword.prototype.bv = function () {
    return this.iv_1;
  };
  AuthRealmPassword.prototype.av = function () {
    return this.jv_1;
  };
  AuthRealmPassword.prototype.kv = function () {
    return this.username;
  };
  AuthRealmPassword.prototype.lv = function () {
    return this.password;
  };
  function AuthRealmClientSecret(serverUrl, realmId, clientId, redirectUrl, clientSecret) {
    AuthRealm.call(this, serverUrl, realmId, clientId, redirectUrl);
    this.qv_1 = serverUrl;
    this.rv_1 = realmId;
    this.sv_1 = clientId;
    this.tv_1 = redirectUrl;
    this.clientSecret = clientSecret;
  }
  AuthRealmClientSecret.prototype.yu = function () {
    return this.qv_1;
  };
  AuthRealmClientSecret.prototype.zu = function () {
    return this.rv_1;
  };
  AuthRealmClientSecret.prototype.av = function () {
    return this.sv_1;
  };
  AuthRealmClientSecret.prototype.bv = function () {
    return this.tv_1;
  };
  AuthRealmClientSecret.prototype.uv = function () {
    return this.clientSecret;
  };
  function F2Function() {
  }
  function F2Supplier() {
  }
  function F2Consumer() {
  }
  function KeycloakF2Message() {
  }
  function KeycloakF2Query() {
  }
  function KeycloakF2Command() {
  }
  function KeycloakF2Result() {
  }
  function Role_0(id, name, description, isClientRole) {
    this.id = id;
    this.name = name;
    this.description = description;
    this.isClientRole = isClientRole;
  }
  Role_0.prototype.ur = function () {
    return this.id;
  };
  Role_0.prototype.ta = function () {
    return this.name;
  };
  Role_0.prototype.wv = function () {
    return this.description;
  };
  Role_0.prototype.xv = function () {
    return this.isClientRole;
  };
  function RoleCompositesModel(assignedRole, effectiveRoles) {
    this.assignedRole = assignedRole;
    this.effectiveRoles = effectiveRoles;
  }
  RoleCompositesModel.prototype.yv = function () {
    return this.assignedRole;
  };
  RoleCompositesModel.prototype.zv = function () {
    return this.effectiveRoles;
  };
  function RolesCompositeModel(assignedRoles, effectiveRoles) {
    this.assignedRoles = assignedRoles;
    this.effectiveRoles = effectiveRoles;
  }
  RolesCompositeModel.prototype.aw = function () {
    return this.assignedRoles;
  };
  RolesCompositeModel.prototype.zv = function () {
    return this.effectiveRoles;
  };
  function RoleCompositeGetQuery(realmId, objId, objType, auth) {
    this.realmId = realmId;
    this.objId = objId;
    this.objType = objType;
    this.bw_1 = auth;
  }
  RoleCompositeGetQuery.prototype.zu = function () {
    return this.realmId;
  };
  RoleCompositeGetQuery.prototype.cw = function () {
    return this.objId;
  };
  RoleCompositeGetQuery.prototype.dw = function () {
    return this.objType;
  };
  RoleCompositeGetQuery.prototype.vv = function () {
    return this.bw_1;
  };
  Object.defineProperty(RoleCompositeGetQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function RoleCompositeGetResult(item) {
    this.item = item;
  }
  RoleCompositeGetResult.prototype.ew = function () {
    return this.item;
  };
  var RoleCompositeObjType_USER_instance;
  var RoleCompositeObjType_GROUP_instance;
  function values() {
    return [RoleCompositeObjType_USER_getInstance(), RoleCompositeObjType_GROUP_getInstance()];
  }
  function valueOf(value) {
    switch (value) {
      case 'USER':
        return RoleCompositeObjType_USER_getInstance();
      case 'GROUP':
        return RoleCompositeObjType_GROUP_getInstance();
      default:
        RoleCompositeObjType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var RoleCompositeObjType_entriesInitialized;
  function RoleCompositeObjType_initEntries() {
    if (RoleCompositeObjType_entriesInitialized)
      return Unit_getInstance();
    RoleCompositeObjType_entriesInitialized = true;
    RoleCompositeObjType_USER_instance = new RoleCompositeObjType('USER', 0);
    RoleCompositeObjType_GROUP_instance = new RoleCompositeObjType('GROUP', 1);
  }
  function RoleCompositeObjType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Object.defineProperty(RoleCompositeObjType.prototype, 'name', {
    configurable: true,
    get: RoleCompositeObjType.prototype.ta
  });
  Object.defineProperty(RoleCompositeObjType.prototype, 'ordinal', {
    configurable: true,
    get: RoleCompositeObjType.prototype.ua
  });
  function RoleCompositeObjType_USER_getInstance() {
    RoleCompositeObjType_initEntries();
    return RoleCompositeObjType_USER_instance;
  }
  function RoleCompositeObjType_GROUP_getInstance() {
    RoleCompositeObjType_initEntries();
    return RoleCompositeObjType_GROUP_instance;
  }
  function RoleGetByIdQuery(realmId, id, auth) {
    this.realmId = realmId;
    this.id = id;
    this.auth = auth;
  }
  RoleGetByIdQuery.prototype.zu = function () {
    return this.realmId;
  };
  RoleGetByIdQuery.prototype.ur = function () {
    return this.id;
  };
  RoleGetByIdQuery.prototype.vv = function () {
    return this.auth;
  };
  function RoleGetByIdResult(item) {
    this.item = item;
  }
  RoleGetByIdResult.prototype.ew = function () {
    return this.item;
  };
  function RoleGetByNameQuery(realmId, auth, name) {
    this.realmId = realmId;
    this.auth = auth;
    this.name = name;
  }
  RoleGetByNameQuery.prototype.zu = function () {
    return this.realmId;
  };
  RoleGetByNameQuery.prototype.vv = function () {
    return this.auth;
  };
  RoleGetByNameQuery.prototype.ta = function () {
    return this.name;
  };
  function RoleGetByNameResult(item) {
    this.item = item;
  }
  RoleGetByNameResult.prototype.ew = function () {
    return this.item;
  };
  function RolePageQuery(realmId, auth, page) {
    this.realmId = realmId;
    this.auth = auth;
    this.page = page;
  }
  RolePageQuery.prototype.zu = function () {
    return this.realmId;
  };
  RolePageQuery.prototype.vv = function () {
    return this.auth;
  };
  RolePageQuery.prototype.rt = function () {
    return this.page;
  };
  function RolePageResult(page) {
    this.page = page;
  }
  RolePageResult.prototype.rt = function () {
    return this.page;
  };
  function RoleAddCompositesCommand(roleName, composites, auth, realmId) {
    this.roleName = roleName;
    this.composites = composites;
    this.hw_1 = auth;
    this.realmId = realmId;
  }
  RoleAddCompositesCommand.prototype.iw = function () {
    return this.roleName;
  };
  RoleAddCompositesCommand.prototype.jw = function () {
    return this.composites;
  };
  RoleAddCompositesCommand.prototype.vv = function () {
    return this.hw_1;
  };
  RoleAddCompositesCommand.prototype.zu = function () {
    return this.realmId;
  };
  Object.defineProperty(RoleAddCompositesCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function RoleAddedCompositesEvent(id) {
    this.id = id;
  }
  RoleAddedCompositesEvent.prototype.ur = function () {
    return this.id;
  };
  function RoleCreateCommand(name, description, isClientRole, composites, auth, realmId) {
    this.name = name;
    this.description = description;
    this.isClientRole = isClientRole;
    this.composites = composites;
    this.kw_1 = auth;
    this.realmId = realmId;
  }
  RoleCreateCommand.prototype.ta = function () {
    return this.name;
  };
  RoleCreateCommand.prototype.wv = function () {
    return this.description;
  };
  RoleCreateCommand.prototype.xv = function () {
    return this.isClientRole;
  };
  RoleCreateCommand.prototype.jw = function () {
    return this.composites;
  };
  RoleCreateCommand.prototype.vv = function () {
    return this.kw_1;
  };
  RoleCreateCommand.prototype.zu = function () {
    return this.realmId;
  };
  Object.defineProperty(RoleCreateCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function RoleCreatedEvent(id) {
    this.id = id;
  }
  RoleCreatedEvent.prototype.ur = function () {
    return this.id;
  };
  function RoleUpdateCommand(name, description, isClientRole, composites, auth, realmId) {
    this.name = name;
    this.description = description;
    this.isClientRole = isClientRole;
    this.composites = composites;
    this.lw_1 = auth;
    this.realmId = realmId;
  }
  RoleUpdateCommand.prototype.ta = function () {
    return this.name;
  };
  RoleUpdateCommand.prototype.wv = function () {
    return this.description;
  };
  RoleUpdateCommand.prototype.xv = function () {
    return this.isClientRole;
  };
  RoleUpdateCommand.prototype.jw = function () {
    return this.composites;
  };
  RoleUpdateCommand.prototype.vv = function () {
    return this.lw_1;
  };
  RoleUpdateCommand.prototype.zu = function () {
    return this.realmId;
  };
  Object.defineProperty(RoleUpdateCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function RoleUpdatedEvent(id) {
    this.id = id;
  }
  RoleUpdatedEvent.prototype.ur = function () {
    return this.id;
  };
  function GroupCreateCommand(name, attributes, roles, auth, realmId, parentGroupId) {
    this.name = name;
    this.attributes = attributes;
    this.roles = roles;
    this.mw_1 = auth;
    this.realmId = realmId;
    this.parentGroupId = parentGroupId;
  }
  GroupCreateCommand.prototype.ta = function () {
    return this.name;
  };
  GroupCreateCommand.prototype.nw = function () {
    return this.attributes;
  };
  GroupCreateCommand.prototype.bu = function () {
    return this.roles;
  };
  GroupCreateCommand.prototype.vv = function () {
    return this.mw_1;
  };
  GroupCreateCommand.prototype.zu = function () {
    return this.realmId;
  };
  GroupCreateCommand.prototype.ow = function () {
    return this.parentGroupId;
  };
  Object.defineProperty(GroupCreateCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function GroupCreatedEvent(id) {
    this.id = id;
  }
  GroupCreatedEvent.prototype.ur = function () {
    return this.id;
  };
  function GroupDisableCommand(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.pw_1 = auth;
  }
  GroupDisableCommand.prototype.ur = function () {
    return this.id;
  };
  GroupDisableCommand.prototype.zu = function () {
    return this.realmId;
  };
  GroupDisableCommand.prototype.vv = function () {
    return this.pw_1;
  };
  Object.defineProperty(GroupDisableCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function GroupDisabledEvent(id) {
    this.id = id;
  }
  GroupDisabledEvent.prototype.ur = function () {
    return this.id;
  };
  function GroupSetAttributesCommand(id, attributes, realmId, auth) {
    this.id = id;
    this.attributes = attributes;
    this.realmId = realmId;
    this.qw_1 = auth;
  }
  GroupSetAttributesCommand.prototype.ur = function () {
    return this.id;
  };
  GroupSetAttributesCommand.prototype.nw = function () {
    return this.attributes;
  };
  GroupSetAttributesCommand.prototype.zu = function () {
    return this.realmId;
  };
  GroupSetAttributesCommand.prototype.vv = function () {
    return this.qw_1;
  };
  Object.defineProperty(GroupSetAttributesCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function GroupSetAttributesEvent(id) {
    this.id = id;
  }
  GroupSetAttributesEvent.prototype.ur = function () {
    return this.id;
  };
  function GroupUpdateCommand(id, name, attributes, roles, auth, realmId) {
    this.id = id;
    this.name = name;
    this.attributes = attributes;
    this.roles = roles;
    this.rw_1 = auth;
    this.realmId = realmId;
  }
  GroupUpdateCommand.prototype.ur = function () {
    return this.id;
  };
  GroupUpdateCommand.prototype.ta = function () {
    return this.name;
  };
  GroupUpdateCommand.prototype.nw = function () {
    return this.attributes;
  };
  GroupUpdateCommand.prototype.bu = function () {
    return this.roles;
  };
  GroupUpdateCommand.prototype.vv = function () {
    return this.rw_1;
  };
  GroupUpdateCommand.prototype.zu = function () {
    return this.realmId;
  };
  Object.defineProperty(GroupUpdateCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function GroupUpdatedEvent(id) {
    this.id = id;
  }
  GroupUpdatedEvent.prototype.ur = function () {
    return this.id;
  };
  function UserCreateCommand_init_$Init$(realmId, username, firstname, lastname, email, isEnable, isEmailVerified, attributes, auth, password, isPasswordTemporary, $mask0, $marker, $this) {
    if (!(($mask0 & 512) === 0))
      password = null;
    if (!(($mask0 & 1024) === 0))
      isPasswordTemporary = false;
    UserCreateCommand.call($this, realmId, username, firstname, lastname, email, isEnable, isEmailVerified, attributes, auth, password, isPasswordTemporary);
    return $this;
  }
  function UserCreateCommand_init_$Create$(realmId, username, firstname, lastname, email, isEnable, isEmailVerified, attributes, auth, password, isPasswordTemporary, $mask0, $marker) {
    return UserCreateCommand_init_$Init$(realmId, username, firstname, lastname, email, isEnable, isEmailVerified, attributes, auth, password, isPasswordTemporary, $mask0, $marker, Object.create(UserCreateCommand.prototype));
  }
  function UserCreateCommand(realmId, username, firstname, lastname, email, isEnable, isEmailVerified, attributes, auth, password, isPasswordTemporary) {
    var password_0 = password === void 1 ? null : password;
    var isPasswordTemporary_0 = isPasswordTemporary === void 1 ? false : isPasswordTemporary;
    this.realmId = realmId;
    this.username = username;
    this.firstname = firstname;
    this.lastname = lastname;
    this.email = email;
    this.isEnable = isEnable;
    this.isEmailVerified = isEmailVerified;
    this.attributes = attributes;
    this.auth = auth;
    this.password = password_0;
    this.isPasswordTemporary = isPasswordTemporary_0;
  }
  UserCreateCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserCreateCommand.prototype.kv = function () {
    return this.username;
  };
  UserCreateCommand.prototype.sw = function () {
    return this.firstname;
  };
  UserCreateCommand.prototype.tw = function () {
    return this.lastname;
  };
  UserCreateCommand.prototype.uw = function () {
    return this.email;
  };
  UserCreateCommand.prototype.vw = function () {
    return this.isEnable;
  };
  UserCreateCommand.prototype.ww = function () {
    return this.isEmailVerified;
  };
  UserCreateCommand.prototype.nw = function () {
    return this.attributes;
  };
  UserCreateCommand.prototype.vv = function () {
    return this.auth;
  };
  UserCreateCommand.prototype.lv = function () {
    return this.password;
  };
  UserCreateCommand.prototype.xw = function () {
    return this.isPasswordTemporary;
  };
  function UserCreatedEvent(id) {
    this.id = id;
  }
  UserCreatedEvent.prototype.ur = function () {
    return this.id;
  };
  function UserDeleteCommand(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.yw_1 = auth;
  }
  UserDeleteCommand.prototype.ur = function () {
    return this.id;
  };
  UserDeleteCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserDeleteCommand.prototype.vv = function () {
    return this.yw_1;
  };
  Object.defineProperty(UserDeleteCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserDeletedEvent(id) {
    this.id = id;
  }
  UserDeletedEvent.prototype.ur = function () {
    return this.id;
  };
  function UserDisableCommand(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.auth = auth;
  }
  UserDisableCommand.prototype.ur = function () {
    return this.id;
  };
  UserDisableCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserDisableCommand.prototype.vv = function () {
    return this.auth;
  };
  function UserDisabledEvent(id) {
    this.id = id;
  }
  UserDisabledEvent.prototype.ur = function () {
    return this.id;
  };
  function UserEmailSendActionsCommand(userId, clientId, redirectUri, actions, realmId, auth) {
    this.userId = userId;
    this.clientId = clientId;
    this.redirectUri = redirectUri;
    this.actions = actions;
    this.realmId = realmId;
    this.zw_1 = auth;
  }
  UserEmailSendActionsCommand.prototype.ax = function () {
    return this.userId;
  };
  UserEmailSendActionsCommand.prototype.av = function () {
    return this.clientId;
  };
  UserEmailSendActionsCommand.prototype.bx = function () {
    return this.redirectUri;
  };
  UserEmailSendActionsCommand.prototype.cx = function () {
    return this.actions;
  };
  UserEmailSendActionsCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserEmailSendActionsCommand.prototype.vv = function () {
    return this.zw_1;
  };
  Object.defineProperty(UserEmailSendActionsCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserEmailSentActionsEvent(id) {
    this.id = id;
  }
  UserEmailSentActionsEvent.prototype.ur = function () {
    return this.id;
  };
  function UserJoinGroupCommand_init_$Init$(id, groupId, leaveOtherGroups, realmId, auth, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      leaveOtherGroups = false;
    UserJoinGroupCommand.call($this, id, groupId, leaveOtherGroups, realmId, auth);
    return $this;
  }
  function UserJoinGroupCommand_init_$Create$(id, groupId, leaveOtherGroups, realmId, auth, $mask0, $marker) {
    return UserJoinGroupCommand_init_$Init$(id, groupId, leaveOtherGroups, realmId, auth, $mask0, $marker, Object.create(UserJoinGroupCommand.prototype));
  }
  function UserJoinGroupCommand(id, groupId, leaveOtherGroups, realmId, auth) {
    var leaveOtherGroups_0 = leaveOtherGroups === void 1 ? false : leaveOtherGroups;
    this.id = id;
    this.groupId = groupId;
    this.leaveOtherGroups = leaveOtherGroups_0;
    this.realmId = realmId;
    this.dx_1 = auth;
  }
  UserJoinGroupCommand.prototype.ur = function () {
    return this.id;
  };
  UserJoinGroupCommand.prototype.ex = function () {
    return this.groupId;
  };
  UserJoinGroupCommand.prototype.fx = function () {
    return this.leaveOtherGroups;
  };
  UserJoinGroupCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserJoinGroupCommand.prototype.vv = function () {
    return this.dx_1;
  };
  Object.defineProperty(UserJoinGroupCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserJoinedGroupEvent(id, groupId, groupsLeft) {
    this.id = id;
    this.groupId = groupId;
    this.groupsLeft = groupsLeft;
  }
  UserJoinedGroupEvent.prototype.ur = function () {
    return this.id;
  };
  UserJoinedGroupEvent.prototype.ex = function () {
    return this.groupId;
  };
  UserJoinedGroupEvent.prototype.gx = function () {
    return this.groupsLeft;
  };
  function UserRolesGrantCommand_init_$Init$(id, roles, auth, realmId, clientId, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      realmId = auth.realmId;
    if (!(($mask0 & 16) === 0))
      clientId = null;
    UserRolesGrantCommand.call($this, id, roles, auth, realmId, clientId);
    return $this;
  }
  function UserRolesGrantCommand_init_$Create$(id, roles, auth, realmId, clientId, $mask0, $marker) {
    return UserRolesGrantCommand_init_$Init$(id, roles, auth, realmId, clientId, $mask0, $marker, Object.create(UserRolesGrantCommand.prototype));
  }
  function UserRolesGrantCommand(id, roles, auth, realmId, clientId) {
    var realmId_0 = realmId === void 1 ? auth.realmId : realmId;
    var clientId_0 = clientId === void 1 ? null : clientId;
    this.id = id;
    this.roles = roles;
    this.hx_1 = auth;
    this.realmId = realmId_0;
    this.clientId = clientId_0;
  }
  UserRolesGrantCommand.prototype.ur = function () {
    return this.id;
  };
  UserRolesGrantCommand.prototype.bu = function () {
    return this.roles;
  };
  UserRolesGrantCommand.prototype.vv = function () {
    return this.hx_1;
  };
  UserRolesGrantCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserRolesGrantCommand.prototype.av = function () {
    return this.clientId;
  };
  Object.defineProperty(UserRolesGrantCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserRolesGrantedEvent(id) {
    this.id = id;
  }
  UserRolesGrantedEvent.prototype.ur = function () {
    return this.id;
  };
  function UserRolesRevokeCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      realmId = auth.realmId;
    UserRolesRevokeCommand.call($this, id, roles, auth, realmId);
    return $this;
  }
  function UserRolesRevokeCommand_init_$Create$(id, roles, auth, realmId, $mask0, $marker) {
    return UserRolesRevokeCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, Object.create(UserRolesRevokeCommand.prototype));
  }
  function UserRolesRevokeCommand(id, roles, auth, realmId) {
    var realmId_0 = realmId === void 1 ? auth.realmId : realmId;
    this.id = id;
    this.roles = roles;
    this.ix_1 = auth;
    this.realmId = realmId_0;
  }
  UserRolesRevokeCommand.prototype.ur = function () {
    return this.id;
  };
  UserRolesRevokeCommand.prototype.bu = function () {
    return this.roles;
  };
  UserRolesRevokeCommand.prototype.vv = function () {
    return this.ix_1;
  };
  UserRolesRevokeCommand.prototype.zu = function () {
    return this.realmId;
  };
  Object.defineProperty(UserRolesRevokeCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserRolesRevokedEvent(id) {
    this.id = id;
  }
  UserRolesRevokedEvent.prototype.ur = function () {
    return this.id;
  };
  function UserRolesSetCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      realmId = auth.realmId;
    UserRolesSetCommand.call($this, id, roles, auth, realmId);
    return $this;
  }
  function UserRolesSetCommand_init_$Create$(id, roles, auth, realmId, $mask0, $marker) {
    return UserRolesSetCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, Object.create(UserRolesSetCommand.prototype));
  }
  function UserRolesSetCommand(id, roles, auth, realmId) {
    var realmId_0 = realmId === void 1 ? auth.realmId : realmId;
    this.id = id;
    this.roles = roles;
    this.jx_1 = auth;
    this.realmId = realmId_0;
  }
  UserRolesSetCommand.prototype.ur = function () {
    return this.id;
  };
  UserRolesSetCommand.prototype.bu = function () {
    return this.roles;
  };
  UserRolesSetCommand.prototype.vv = function () {
    return this.jx_1;
  };
  UserRolesSetCommand.prototype.zu = function () {
    return this.realmId;
  };
  Object.defineProperty(UserRolesSetCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserRolesSetEvent(id) {
    this.id = id;
  }
  UserRolesSetEvent.prototype.ur = function () {
    return this.id;
  };
  function UserSetAttributesCommand(id, attributes, realmId, auth) {
    this.id = id;
    this.attributes = attributes;
    this.realmId = realmId;
    this.kx_1 = auth;
  }
  UserSetAttributesCommand.prototype.ur = function () {
    return this.id;
  };
  UserSetAttributesCommand.prototype.nw = function () {
    return this.attributes;
  };
  UserSetAttributesCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserSetAttributesCommand.prototype.vv = function () {
    return this.kx_1;
  };
  Object.defineProperty(UserSetAttributesCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserSetAttributesEvent(id) {
    this.id = id;
  }
  UserSetAttributesEvent.prototype.ur = function () {
    return this.id;
  };
  function UserUpdateEmailCommand_init_$Init$(userId, email, sendVerificationEmail, clientId, redirectUri, realmId, auth, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      clientId = null;
    if (!(($mask0 & 16) === 0))
      redirectUri = null;
    UserUpdateEmailCommand.call($this, userId, email, sendVerificationEmail, clientId, redirectUri, realmId, auth);
    return $this;
  }
  function UserUpdateEmailCommand_init_$Create$(userId, email, sendVerificationEmail, clientId, redirectUri, realmId, auth, $mask0, $marker) {
    return UserUpdateEmailCommand_init_$Init$(userId, email, sendVerificationEmail, clientId, redirectUri, realmId, auth, $mask0, $marker, Object.create(UserUpdateEmailCommand.prototype));
  }
  function UserUpdateEmailCommand(userId, email, sendVerificationEmail, clientId, redirectUri, realmId, auth) {
    var clientId_0 = clientId === void 1 ? null : clientId;
    var redirectUri_0 = redirectUri === void 1 ? null : redirectUri;
    this.userId = userId;
    this.email = email;
    this.sendVerificationEmail = sendVerificationEmail;
    this.clientId = clientId_0;
    this.redirectUri = redirectUri_0;
    this.realmId = realmId;
    this.lx_1 = auth;
  }
  UserUpdateEmailCommand.prototype.ax = function () {
    return this.userId;
  };
  UserUpdateEmailCommand.prototype.uw = function () {
    return this.email;
  };
  UserUpdateEmailCommand.prototype.mx = function () {
    return this.sendVerificationEmail;
  };
  UserUpdateEmailCommand.prototype.av = function () {
    return this.clientId;
  };
  UserUpdateEmailCommand.prototype.bx = function () {
    return this.redirectUri;
  };
  UserUpdateEmailCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserUpdateEmailCommand.prototype.vv = function () {
    return this.lx_1;
  };
  Object.defineProperty(UserUpdateEmailCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserUpdatedEmailEvent(userId) {
    this.userId = userId;
  }
  UserUpdatedEmailEvent.prototype.ax = function () {
    return this.userId;
  };
  function UserUpdateCommand(userId, realmId, auth, firstname, lastname, attributes) {
    this.userId = userId;
    this.realmId = realmId;
    this.auth = auth;
    this.firstname = firstname;
    this.lastname = lastname;
    this.attributes = attributes;
  }
  UserUpdateCommand.prototype.ax = function () {
    return this.userId;
  };
  UserUpdateCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserUpdateCommand.prototype.vv = function () {
    return this.auth;
  };
  UserUpdateCommand.prototype.sw = function () {
    return this.firstname;
  };
  UserUpdateCommand.prototype.tw = function () {
    return this.lastname;
  };
  UserUpdateCommand.prototype.nw = function () {
    return this.attributes;
  };
  function UserUpdatedEvent(id) {
    this.id = id;
  }
  UserUpdatedEvent.prototype.ur = function () {
    return this.id;
  };
  function UserUpdatePasswordCommand(userId, password, realmId, auth) {
    this.userId = userId;
    this.password = password;
    this.realmId = realmId;
    this.nx_1 = auth;
  }
  UserUpdatePasswordCommand.prototype.ax = function () {
    return this.userId;
  };
  UserUpdatePasswordCommand.prototype.lv = function () {
    return this.password;
  };
  UserUpdatePasswordCommand.prototype.zu = function () {
    return this.realmId;
  };
  UserUpdatePasswordCommand.prototype.vv = function () {
    return this.nx_1;
  };
  Object.defineProperty(UserUpdatePasswordCommand.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserUpdatedPasswordEvent(userId) {
    this.userId = userId;
  }
  UserUpdatedPasswordEvent.prototype.ax = function () {
    return this.userId;
  };
  function UserGetByEmailQuery(email, realmId, auth) {
    this.email = email;
    this.realmId = realmId;
    this.ox_1 = auth;
  }
  UserGetByEmailQuery.prototype.uw = function () {
    return this.email;
  };
  UserGetByEmailQuery.prototype.zu = function () {
    return this.realmId;
  };
  UserGetByEmailQuery.prototype.vv = function () {
    return this.ox_1;
  };
  Object.defineProperty(UserGetByEmailQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserGetByEmailQueryResult(item) {
    this.item = item;
  }
  UserGetByEmailQueryResult.prototype.ew = function () {
    return this.item;
  };
  function UserGetByUsernameQuery(realmId, username, auth) {
    this.realmId = realmId;
    this.username = username;
    this.px_1 = auth;
  }
  UserGetByUsernameQuery.prototype.zu = function () {
    return this.realmId;
  };
  UserGetByUsernameQuery.prototype.kv = function () {
    return this.username;
  };
  UserGetByUsernameQuery.prototype.vv = function () {
    return this.px_1;
  };
  Object.defineProperty(UserGetByUsernameQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserGetByUsernameResult(item) {
    this.item = item;
  }
  UserGetByUsernameResult.prototype.ew = function () {
    return this.item;
  };
  function UserGetQuery(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.qx_1 = auth;
  }
  UserGetQuery.prototype.ur = function () {
    return this.id;
  };
  UserGetQuery.prototype.zu = function () {
    return this.realmId;
  };
  UserGetQuery.prototype.vv = function () {
    return this.qx_1;
  };
  Object.defineProperty(UserGetQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserGetResult(item) {
    this.item = item;
  }
  UserGetResult.prototype.ew = function () {
    return this.item;
  };
  function UserGetGroupsQuery(userId, realmId, auth) {
    this.userId = userId;
    this.realmId = realmId;
    this.rx_1 = auth;
  }
  UserGetGroupsQuery.prototype.ax = function () {
    return this.userId;
  };
  UserGetGroupsQuery.prototype.zu = function () {
    return this.realmId;
  };
  UserGetGroupsQuery.prototype.vv = function () {
    return this.rx_1;
  };
  Object.defineProperty(UserGetGroupsQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserGetGroupsResult(items) {
    this.items = items;
  }
  UserGetGroupsResult.prototype.ws = function () {
    return this.items;
  };
  function UserGetRolesQuery(userId, realmId, auth) {
    this.userId = userId;
    this.realmId = realmId;
    this.sx_1 = auth;
  }
  UserGetRolesQuery.prototype.ax = function () {
    return this.userId;
  };
  UserGetRolesQuery.prototype.zu = function () {
    return this.realmId;
  };
  UserGetRolesQuery.prototype.vv = function () {
    return this.sx_1;
  };
  Object.defineProperty(UserGetRolesQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserGetRolesResult(roles) {
    this.roles = roles;
  }
  UserGetRolesResult.prototype.bu = function () {
    return this.roles;
  };
  function UserPageQuery_init_$Init$(groupId, search, roles, attributes, withDisabled, page, realmId, auth, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      groupId = null;
    if (!(($mask0 & 2) === 0))
      search = null;
    if (!(($mask0 & 4) === 0))
      roles = null;
    if (!(($mask0 & 8) === 0))
      attributes = emptyMap();
    UserPageQuery.call($this, groupId, search, roles, attributes, withDisabled, page, realmId, auth);
    return $this;
  }
  function UserPageQuery_init_$Create$(groupId, search, roles, attributes, withDisabled, page, realmId, auth, $mask0, $marker) {
    return UserPageQuery_init_$Init$(groupId, search, roles, attributes, withDisabled, page, realmId, auth, $mask0, $marker, Object.create(UserPageQuery.prototype));
  }
  function UserPageQuery(groupId, search, roles, attributes, withDisabled, page, realmId, auth) {
    var groupId_0 = groupId === void 1 ? null : groupId;
    var search_0 = search === void 1 ? null : search;
    var roles_0 = roles === void 1 ? null : roles;
    var attributes_0 = attributes === void 1 ? emptyMap() : attributes;
    this.groupId = groupId_0;
    this.search = search_0;
    this.roles = roles_0;
    this.attributes = attributes_0;
    this.withDisabled = withDisabled;
    this.page = page;
    this.realmId = realmId;
    this.tx_1 = auth;
  }
  UserPageQuery.prototype.ex = function () {
    return this.groupId;
  };
  UserPageQuery.prototype.ux = function () {
    return this.search;
  };
  UserPageQuery.prototype.bu = function () {
    return this.roles;
  };
  UserPageQuery.prototype.nw = function () {
    return this.attributes;
  };
  UserPageQuery.prototype.vx = function () {
    return this.withDisabled;
  };
  UserPageQuery.prototype.rt = function () {
    return this.page;
  };
  UserPageQuery.prototype.zu = function () {
    return this.realmId;
  };
  UserPageQuery.prototype.vv = function () {
    return this.tx_1;
  };
  Object.defineProperty(UserPageQuery.prototype, 'auth', {
    configurable: true,
    get: function () {
      return this.vv();
    }
  });
  function UserPageResult(items) {
    this.items = items;
  }
  UserPageResult.prototype.ws = function () {
    return this.items;
  };
  function UserGroup(id, name, roles) {
    this.id = id;
    this.name = name;
    this.roles = roles;
  }
  UserGroup.prototype.ur = function () {
    return this.id;
  };
  UserGroup.prototype.ta = function () {
    return this.name;
  };
  UserGroup.prototype.bu = function () {
    return this.roles;
  };
  function UserModel(id, email, firstName, lastName, roles, attributes, enabled, creationDate) {
    this.id = id;
    this.email = email;
    this.firstName = firstName;
    this.lastName = lastName;
    this.roles = roles;
    this.attributes = attributes;
    this.enabled = enabled;
    this.creationDate = creationDate;
  }
  UserModel.prototype.ur = function () {
    return this.id;
  };
  UserModel.prototype.uw = function () {
    return this.email;
  };
  UserModel.prototype.wx = function () {
    return this.firstName;
  };
  UserModel.prototype.xx = function () {
    return this.lastName;
  };
  UserModel.prototype.bu = function () {
    return this.roles;
  };
  UserModel.prototype.nw = function () {
    return this.attributes;
  };
  UserModel.prototype.yx = function () {
    return this.enabled;
  };
  UserModel.prototype.zx = function () {
    return this.creationDate;
  };
  function ClientModel(id, clientIdentifier) {
    this.id = id;
    this.clientIdentifier = clientIdentifier;
  }
  ClientModel.prototype.ur = function () {
    return this.id;
  };
  ClientModel.prototype.ay = function () {
    return this.clientIdentifier;
  };
  function ClientGetByClientIdentifierQuery(clientIdentifier, realmId, auth) {
    this.clientIdentifier = clientIdentifier;
    this.realmId = realmId;
    this.auth = auth;
  }
  ClientGetByClientIdentifierQuery.prototype.ay = function () {
    return this.clientIdentifier;
  };
  ClientGetByClientIdentifierQuery.prototype.zu = function () {
    return this.realmId;
  };
  ClientGetByClientIdentifierQuery.prototype.vv = function () {
    return this.auth;
  };
  function ClientGetByClientIdentifierResult(item) {
    this.item = item;
  }
  ClientGetByClientIdentifierResult.prototype.ew = function () {
    return this.item;
  };
  function ClientGetQuery(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.auth = auth;
  }
  ClientGetQuery.prototype.ur = function () {
    return this.id;
  };
  ClientGetQuery.prototype.zu = function () {
    return this.realmId;
  };
  ClientGetQuery.prototype.vv = function () {
    return this.auth;
  };
  function ClientGetResult(item) {
    this.item = item;
  }
  ClientGetResult.prototype.ew = function () {
    return this.item;
  };
  function ClientGetSecretQuery(clientId, realmId, auth) {
    this.clientId = clientId;
    this.realmId = realmId;
    this.auth = auth;
  }
  ClientGetSecretQuery.prototype.av = function () {
    return this.clientId;
  };
  ClientGetSecretQuery.prototype.zu = function () {
    return this.realmId;
  };
  ClientGetSecretQuery.prototype.vv = function () {
    return this.auth;
  };
  function ClientGetSecretResult(secret) {
    this.secret = secret;
  }
  ClientGetSecretResult.prototype.by = function () {
    return this.secret;
  };
  function ClientGetServiceAccountQuery(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.auth = auth;
  }
  ClientGetServiceAccountQuery.prototype.ur = function () {
    return this.id;
  };
  ClientGetServiceAccountQuery.prototype.zu = function () {
    return this.realmId;
  };
  ClientGetServiceAccountQuery.prototype.vv = function () {
    return this.auth;
  };
  function ClientGetServiceAccountResult(item) {
    this.item = item;
  }
  ClientGetServiceAccountResult.prototype.ew = function () {
    return this.item;
  };
  function ClientPageQuery(realmId, page, auth) {
    this.realmId = realmId;
    this.page = page;
    this.auth = auth;
  }
  ClientPageQuery.prototype.zu = function () {
    return this.realmId;
  };
  ClientPageQuery.prototype.rt = function () {
    return this.page;
  };
  ClientPageQuery.prototype.vv = function () {
    return this.auth;
  };
  function ClientPageResult(page) {
    this.page = page;
  }
  ClientPageResult.prototype.rt = function () {
    return this.page;
  };
  function ClientCreateCommand_init_$Init$(auth, realmId, clientIdentifier, secret, isPublicClient, isDirectAccessGrantsEnabled, isServiceAccountsEnabled, authorizationServicesEnabled, isStandardFlowEnabled, rootUrl, redirectUris, baseUrl, adminUrl, webOrigins, protocolMappers, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      secret = null;
    if (!(($mask0 & 16) === 0))
      isPublicClient = true;
    if (!(($mask0 & 32) === 0))
      isDirectAccessGrantsEnabled = true;
    if (!(($mask0 & 64) === 0))
      isServiceAccountsEnabled = true;
    if (!(($mask0 & 128) === 0))
      authorizationServicesEnabled = false;
    if (!(($mask0 & 256) === 0))
      isStandardFlowEnabled = false;
    if (!(($mask0 & 512) === 0))
      rootUrl = null;
    if (!(($mask0 & 1024) === 0))
      redirectUris = emptyList();
    if (!(($mask0 & 2048) === 0))
      baseUrl = '';
    if (!(($mask0 & 4096) === 0))
      adminUrl = '';
    if (!(($mask0 & 8192) === 0))
      webOrigins = emptyList();
    if (!(($mask0 & 16384) === 0))
      protocolMappers = emptyMap();
    ClientCreateCommand.call($this, auth, realmId, clientIdentifier, secret, isPublicClient, isDirectAccessGrantsEnabled, isServiceAccountsEnabled, authorizationServicesEnabled, isStandardFlowEnabled, rootUrl, redirectUris, baseUrl, adminUrl, webOrigins, protocolMappers);
    return $this;
  }
  function ClientCreateCommand_init_$Create$(auth, realmId, clientIdentifier, secret, isPublicClient, isDirectAccessGrantsEnabled, isServiceAccountsEnabled, authorizationServicesEnabled, isStandardFlowEnabled, rootUrl, redirectUris, baseUrl, adminUrl, webOrigins, protocolMappers, $mask0, $marker) {
    return ClientCreateCommand_init_$Init$(auth, realmId, clientIdentifier, secret, isPublicClient, isDirectAccessGrantsEnabled, isServiceAccountsEnabled, authorizationServicesEnabled, isStandardFlowEnabled, rootUrl, redirectUris, baseUrl, adminUrl, webOrigins, protocolMappers, $mask0, $marker, Object.create(ClientCreateCommand.prototype));
  }
  function ClientCreateCommand(auth, realmId, clientIdentifier, secret, isPublicClient, isDirectAccessGrantsEnabled, isServiceAccountsEnabled, authorizationServicesEnabled, isStandardFlowEnabled, rootUrl, redirectUris, baseUrl, adminUrl, webOrigins, protocolMappers) {
    var secret_0 = secret === void 1 ? null : secret;
    var isPublicClient_0 = isPublicClient === void 1 ? true : isPublicClient;
    var isDirectAccessGrantsEnabled_0 = isDirectAccessGrantsEnabled === void 1 ? true : isDirectAccessGrantsEnabled;
    var isServiceAccountsEnabled_0 = isServiceAccountsEnabled === void 1 ? true : isServiceAccountsEnabled;
    var authorizationServicesEnabled_0 = authorizationServicesEnabled === void 1 ? false : authorizationServicesEnabled;
    var isStandardFlowEnabled_0 = isStandardFlowEnabled === void 1 ? false : isStandardFlowEnabled;
    var rootUrl_0 = rootUrl === void 1 ? null : rootUrl;
    var redirectUris_0 = redirectUris === void 1 ? emptyList() : redirectUris;
    var baseUrl_0 = baseUrl === void 1 ? '' : baseUrl;
    var adminUrl_0 = adminUrl === void 1 ? '' : adminUrl;
    var webOrigins_0 = webOrigins === void 1 ? emptyList() : webOrigins;
    var protocolMappers_0 = protocolMappers === void 1 ? emptyMap() : protocolMappers;
    this.auth = auth;
    this.realmId = realmId;
    this.clientIdentifier = clientIdentifier;
    this.secret = secret_0;
    this.isPublicClient = isPublicClient_0;
    this.isDirectAccessGrantsEnabled = isDirectAccessGrantsEnabled_0;
    this.isServiceAccountsEnabled = isServiceAccountsEnabled_0;
    this.authorizationServicesEnabled = authorizationServicesEnabled_0;
    this.isStandardFlowEnabled = isStandardFlowEnabled_0;
    this.rootUrl = rootUrl_0;
    this.redirectUris = redirectUris_0;
    this.baseUrl = baseUrl_0;
    this.adminUrl = adminUrl_0;
    this.webOrigins = webOrigins_0;
    this.protocolMappers = protocolMappers_0;
  }
  ClientCreateCommand.prototype.vv = function () {
    return this.auth;
  };
  ClientCreateCommand.prototype.zu = function () {
    return this.realmId;
  };
  ClientCreateCommand.prototype.ay = function () {
    return this.clientIdentifier;
  };
  ClientCreateCommand.prototype.by = function () {
    return this.secret;
  };
  ClientCreateCommand.prototype.cy = function () {
    return this.isPublicClient;
  };
  ClientCreateCommand.prototype.dy = function () {
    return this.isDirectAccessGrantsEnabled;
  };
  ClientCreateCommand.prototype.ey = function () {
    return this.isServiceAccountsEnabled;
  };
  ClientCreateCommand.prototype.fy = function () {
    return this.authorizationServicesEnabled;
  };
  ClientCreateCommand.prototype.gy = function () {
    return this.isStandardFlowEnabled;
  };
  ClientCreateCommand.prototype.hy = function () {
    return this.rootUrl;
  };
  ClientCreateCommand.prototype.iy = function () {
    return this.redirectUris;
  };
  ClientCreateCommand.prototype.jy = function () {
    return this.baseUrl;
  };
  ClientCreateCommand.prototype.ky = function () {
    return this.adminUrl;
  };
  ClientCreateCommand.prototype.ly = function () {
    return this.webOrigins;
  };
  ClientCreateCommand.prototype.my = function () {
    return this.protocolMappers;
  };
  function ClientCreatedEvent(id) {
    this.id = id;
  }
  ClientCreatedEvent.prototype.ur = function () {
    return this.id;
  };
  function ClientDeleteCommand(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.auth = auth;
  }
  ClientDeleteCommand.prototype.ur = function () {
    return this.id;
  };
  ClientDeleteCommand.prototype.zu = function () {
    return this.realmId;
  };
  ClientDeleteCommand.prototype.vv = function () {
    return this.auth;
  };
  function ClientDeletedEvent(id) {
    this.id = id;
  }
  ClientDeletedEvent.prototype.ur = function () {
    return this.id;
  };
  function ClientGenerateSecretCommand(id, realmId, auth) {
    this.id = id;
    this.realmId = realmId;
    this.auth = auth;
  }
  ClientGenerateSecretCommand.prototype.ur = function () {
    return this.id;
  };
  ClientGenerateSecretCommand.prototype.zu = function () {
    return this.realmId;
  };
  ClientGenerateSecretCommand.prototype.vv = function () {
    return this.auth;
  };
  function ClientGeneratedSecretEvent(secret) {
    this.secret = secret;
  }
  ClientGeneratedSecretEvent.prototype.by = function () {
    return this.secret;
  };
  function ClientRealmManagementRolesGrantCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      realmId = auth.realmId;
    ClientRealmManagementRolesGrantCommand.call($this, id, roles, auth, realmId);
    return $this;
  }
  function ClientRealmManagementRolesGrantCommand_init_$Create$(id, roles, auth, realmId, $mask0, $marker) {
    return ClientRealmManagementRolesGrantCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, Object.create(ClientRealmManagementRolesGrantCommand.prototype));
  }
  function ClientRealmManagementRolesGrantCommand(id, roles, auth, realmId) {
    var realmId_0 = realmId === void 1 ? auth.realmId : realmId;
    this.id = id;
    this.roles = roles;
    this.auth = auth;
    this.realmId = realmId_0;
  }
  ClientRealmManagementRolesGrantCommand.prototype.ur = function () {
    return this.id;
  };
  ClientRealmManagementRolesGrantCommand.prototype.bu = function () {
    return this.roles;
  };
  ClientRealmManagementRolesGrantCommand.prototype.vv = function () {
    return this.auth;
  };
  ClientRealmManagementRolesGrantCommand.prototype.zu = function () {
    return this.realmId;
  };
  function ClientRealmManagementRolesGrantedEvent(id) {
    this.id = id;
  }
  ClientRealmManagementRolesGrantedEvent.prototype.ur = function () {
    return this.id;
  };
  function ClientServiceAccountRolesGrantCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      realmId = auth.realmId;
    ClientServiceAccountRolesGrantCommand.call($this, id, roles, auth, realmId);
    return $this;
  }
  function ClientServiceAccountRolesGrantCommand_init_$Create$(id, roles, auth, realmId, $mask0, $marker) {
    return ClientServiceAccountRolesGrantCommand_init_$Init$(id, roles, auth, realmId, $mask0, $marker, Object.create(ClientServiceAccountRolesGrantCommand.prototype));
  }
  function ClientServiceAccountRolesGrantCommand(id, roles, auth, realmId) {
    var realmId_0 = realmId === void 1 ? auth.realmId : realmId;
    this.id = id;
    this.roles = roles;
    this.auth = auth;
    this.realmId = realmId_0;
  }
  ClientServiceAccountRolesGrantCommand.prototype.ur = function () {
    return this.id;
  };
  ClientServiceAccountRolesGrantCommand.prototype.bu = function () {
    return this.roles;
  };
  ClientServiceAccountRolesGrantCommand.prototype.vv = function () {
    return this.auth;
  };
  ClientServiceAccountRolesGrantCommand.prototype.zu = function () {
    return this.realmId;
  };
  function ClientServiceAccountRolesGrantedEvent(id) {
    this.id = id;
  }
  ClientServiceAccountRolesGrantedEvent.prototype.ur = function () {
    return this.id;
  };
  function ClientUpdateUrisCommand(id, realmId, auth, rootUrl, redirectUris, baseUrl) {
    this.id = id;
    this.realmId = realmId;
    this.auth = auth;
    this.rootUrl = rootUrl;
    this.redirectUris = redirectUris;
    this.baseUrl = baseUrl;
  }
  ClientUpdateUrisCommand.prototype.ur = function () {
    return this.id;
  };
  ClientUpdateUrisCommand.prototype.zu = function () {
    return this.realmId;
  };
  ClientUpdateUrisCommand.prototype.vv = function () {
    return this.auth;
  };
  ClientUpdateUrisCommand.prototype.hy = function () {
    return this.rootUrl;
  };
  ClientUpdateUrisCommand.prototype.iy = function () {
    return this.redirectUris;
  };
  ClientUpdateUrisCommand.prototype.jy = function () {
    return this.baseUrl;
  };
  function ClientUpdatedUrisEvent(id) {
    this.id = id;
  }
  ClientUpdatedUrisEvent.prototype.ur = function () {
    return this.id;
  };
  function OrganizationCreateCommandDTO() {
  }
  function OrganizationCreatedEventDTO() {
  }
  function OrganizationDeleteCommandDTO() {
  }
  function OrganizationDeletedEventDTO() {
  }
  function OrganizationDisableCommandDTO() {
  }
  function OrganizationDisabledEventDTO() {
  }
  function OrganizationUpdateCommandDTO() {
  }
  function OrganizationUpdatedResultDTO() {
  }
  function OrganizationUploadLogoCommandDTO() {
  }
  function OrganizationUploadedLogoEventDTO() {
  }
  function OrganizationGetFromInseeQueryDTO() {
  }
  function OrganizationGetFromInseeResultDTO() {
  }
  function OrganizationGetQueryDTO() {
  }
  function OrganizationGetResultDTO() {
  }
  function OrganizationPageQueryDTO() {
  }
  function OrganizationPageResultDTO() {
  }
  function OrganizationRefListQueryDTO() {
  }
  function OrganizationRefListResultDTO() {
  }
  function OrganizationDTO() {
  }
  function OrganizationRefDTO() {
  }
  function OrganizationPolicies() {
    OrganizationPolicies_instance = this;
  }
  OrganizationPolicies.prototype.canGet = function (authedUser, organizationId) {
    return hasRole(authedUser, Role_IM_ORGANIZATION_READ_getInstance()) ? true : authedUser.memberOf === organizationId;
  };
  OrganizationPolicies.prototype.canList = function (authedUser) {
    return hasRole(authedUser, Role_IM_ORGANIZATION_READ_getInstance());
  };
  OrganizationPolicies.prototype.checkRefList = function (authedUser) {
    return true;
  };
  OrganizationPolicies.prototype.canCreate = function (authedUser) {
    return hasRole(authedUser, Role_IM_ORGANIZATION_WRITE_getInstance());
  };
  OrganizationPolicies.prototype.canUpdate = function (authedUser, organizationId) {
    return hasRole(authedUser, Role_IM_ORGANIZATION_WRITE_getInstance()) ? true : hasRole(authedUser, Role_IM_MY_ORGANIZATION_WRITE_getInstance()) ? authedUser.memberOf === organizationId : false;
  };
  OrganizationPolicies.prototype.canDisable = function (authedUser, organizationId) {
    return hasRole(authedUser, Role_IM_ORGANIZATION_WRITE_getInstance());
  };
  OrganizationPolicies.prototype.canDelete = function (authedUser, organizationId) {
    return hasRole(authedUser, Role_IM_ORGANIZATION_WRITE_getInstance());
  };
  var OrganizationPolicies_instance;
  function OrganizationPolicies_getInstance() {
    if (OrganizationPolicies_instance == null)
      new OrganizationPolicies();
    return OrganizationPolicies_instance;
  }
  function UserCreateCommandDTO() {
  }
  function UserCreatedEventDTO() {
  }
  function UserDeleteCommandDTO() {
  }
  function UserDeletedEventDTO() {
  }
  function UserDisableCommandDTO() {
  }
  function UserDisabledEventDTO() {
  }
  function UserResetPasswordCommandDTO() {
  }
  function UserResetPasswordEventDTO() {
  }
  function UserUpdateEmailCommandDTO() {
  }
  function UserUpdatedEmailEventDTO() {
  }
  function UserUpdateCommandDTO() {
  }
  function UserUpdatedEventDTO() {
  }
  function UserUpdatePasswordCommandDTO() {
  }
  function UserUpdatedPasswordEventDTO() {
  }
  function UserUploadLogoCommandDTO() {
  }
  function UserUploadedLogoEventDTO() {
  }
  function UserExistsByEmailQueryDTO() {
  }
  function UserExistsByEmailResultDTO() {
  }
  function UserGetByEmailQueryDTO() {
  }
  function UserGetByEmailResultDTO() {
  }
  function UserGetQueryDTO() {
  }
  function UserGetResultDTO() {
  }
  function UserPageQueryDTO() {
  }
  function UserPageResultDTO() {
  }
  function UserDTO() {
  }
  function UserPolicies() {
    UserPolicies_instance = this;
  }
  UserPolicies.prototype.canGet = function (authedUser, user) {
    var tmp;
    var tmp_0;
    if (hasRole(authedUser, Role_IM_USER_READ_getInstance())) {
      tmp_0 = true;
    } else {
      var tmp_1 = authedUser.id;
      var tmp0_safe_receiver = user;
      tmp_0 = tmp_1 === (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.id);
    }
    if (tmp_0) {
      tmp = true;
    } else {
      var tmp1_safe_receiver = user;
      var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.memberOf;
      tmp = (tmp2_safe_receiver == null ? null : tmp2_safe_receiver.id) == authedUser.memberOf;
    }
    return tmp;
  };
  UserPolicies.prototype.canPage = function (authedUser) {
    return hasOneOfRoles(authedUser, [Role_IM_USER_READ_getInstance()]);
  };
  UserPolicies.prototype.checkRefList = function (authedUser) {
    return true;
  };
  UserPolicies.prototype.canCreate = function (authedUser) {
    return hasRole(authedUser, Role_IM_USER_WRITE_getInstance());
  };
  UserPolicies.prototype.canUpdate = function (authedUser, userId) {
    return hasRole(authedUser, Role_IM_USER_WRITE_getInstance()) ? true : authedUser.id === userId;
  };
  UserPolicies.prototype.canDisable = function (authedUser, userId) {
    return hasRole(authedUser, Role_IM_USER_WRITE_getInstance());
  };
  UserPolicies.prototype.canDelete = function (authedUser, userId) {
    return hasRole(authedUser, Role_IM_USER_WRITE_getInstance());
  };
  var UserPolicies_instance;
  function UserPolicies_getInstance() {
    if (UserPolicies_instance == null)
      new UserPolicies();
    return UserPolicies_instance;
  }
  function SsmChaincodeQueries() {
  }
  function SsmQueryDTO() {
  }
  function SsmItemResultDTO() {
  }
  function SsmItemsResultDTO() {
  }
  function BlockDTO() {
  }
  function Block(blockId, previousHash, dataHash, transactions) {
    this.mz_1 = blockId;
    this.nz_1 = previousHash;
    this.oz_1 = dataHash;
    this.pz_1 = transactions;
  }
  Block.prototype.iz = function () {
    return this.mz_1;
  };
  Block.prototype.jz = function () {
    return this.nz_1;
  };
  Block.prototype.kz = function () {
    return this.oz_1;
  };
  Block.prototype.lz = function () {
    return this.pz_1;
  };
  Object.defineProperty(Block.prototype, 'blockId', {
    configurable: true,
    get: function () {
      return this.iz();
    }
  });
  Object.defineProperty(Block.prototype, 'previousHash', {
    configurable: true,
    get: function () {
      return this.jz();
    }
  });
  Object.defineProperty(Block.prototype, 'dataHash', {
    configurable: true,
    get: function () {
      return this.kz();
    }
  });
  Object.defineProperty(Block.prototype, 'transactions', {
    configurable: true,
    get: function () {
      return this.lz();
    }
  });
  var EnvelopeType_TRANSACTION_ENVELOPE_instance;
  var EnvelopeType_ENVELOPE_instance;
  function values_0() {
    return [EnvelopeType_TRANSACTION_ENVELOPE_getInstance(), EnvelopeType_ENVELOPE_getInstance()];
  }
  function valueOf_0(value) {
    switch (value) {
      case 'TRANSACTION_ENVELOPE':
        return EnvelopeType_TRANSACTION_ENVELOPE_getInstance();
      case 'ENVELOPE':
        return EnvelopeType_ENVELOPE_getInstance();
      default:
        EnvelopeType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var EnvelopeType_entriesInitialized;
  function EnvelopeType_initEntries() {
    if (EnvelopeType_entriesInitialized)
      return Unit_getInstance();
    EnvelopeType_entriesInitialized = true;
    EnvelopeType_TRANSACTION_ENVELOPE_instance = new EnvelopeType('TRANSACTION_ENVELOPE', 0);
    EnvelopeType_ENVELOPE_instance = new EnvelopeType('ENVELOPE', 1);
  }
  function EnvelopeType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Object.defineProperty(EnvelopeType.prototype, 'name', {
    configurable: true,
    get: EnvelopeType.prototype.ta
  });
  Object.defineProperty(EnvelopeType.prototype, 'ordinal', {
    configurable: true,
    get: EnvelopeType.prototype.ua
  });
  function EnvelopeType_TRANSACTION_ENVELOPE_getInstance() {
    EnvelopeType_initEntries();
    return EnvelopeType_TRANSACTION_ENVELOPE_instance;
  }
  function EnvelopeType_ENVELOPE_getInstance() {
    EnvelopeType_initEntries();
    return EnvelopeType_ENVELOPE_instance;
  }
  function IdentitiesInfoDTO() {
  }
  function IdentitiesInfo(id, mspid) {
    this.tz_1 = id;
    this.uz_1 = mspid;
  }
  IdentitiesInfo.prototype.ur = function () {
    return this.tz_1;
  };
  IdentitiesInfo.prototype.sz = function () {
    return this.uz_1;
  };
  Object.defineProperty(IdentitiesInfo.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  Object.defineProperty(IdentitiesInfo.prototype, 'mspid', {
    configurable: true,
    get: function () {
      return this.sz();
    }
  });
  function TransactionDTO() {
  }
  function Transaction(transactionId, blockId, timestamp, isValid, channelId, creator, nonce, type, validationCode) {
    this.c10_1 = transactionId;
    this.d10_1 = blockId;
    this.e10_1 = timestamp;
    this.f10_1 = isValid;
    this.g10_1 = channelId;
    this.h10_1 = creator;
    this.i10_1 = nonce;
    this.j10_1 = type;
    this.k10_1 = validationCode;
  }
  Transaction.prototype.vz = function () {
    return this.c10_1;
  };
  Transaction.prototype.iz = function () {
    return this.d10_1;
  };
  Transaction.prototype.vr = function () {
    return this.e10_1;
  };
  Transaction.prototype.wz = function () {
    return this.f10_1;
  };
  Transaction.prototype.xz = function () {
    return this.g10_1;
  };
  Transaction.prototype.yz = function () {
    return this.h10_1;
  };
  Transaction.prototype.zz = function () {
    return this.i10_1;
  };
  Transaction.prototype.a10 = function () {
    return this.j10_1;
  };
  Transaction.prototype.b10 = function () {
    return this.k10_1;
  };
  Object.defineProperty(Transaction.prototype, 'transactionId', {
    configurable: true,
    get: function () {
      return this.vz();
    }
  });
  Object.defineProperty(Transaction.prototype, 'blockId', {
    configurable: true,
    get: function () {
      return this.iz();
    }
  });
  Object.defineProperty(Transaction.prototype, 'timestamp', {
    configurable: true,
    get: function () {
      return this.vr();
    }
  });
  Object.defineProperty(Transaction.prototype, 'isValid', {
    configurable: true,
    get: function () {
      return this.wz();
    }
  });
  Object.defineProperty(Transaction.prototype, 'channelId', {
    configurable: true,
    get: function () {
      return this.xz();
    }
  });
  Object.defineProperty(Transaction.prototype, 'creator', {
    configurable: true,
    get: function () {
      return this.yz();
    }
  });
  Object.defineProperty(Transaction.prototype, 'nonce', {
    configurable: true,
    get: function () {
      return this.zz();
    }
  });
  Object.defineProperty(Transaction.prototype, 'type', {
    configurable: true,
    get: function () {
      return this.a10();
    }
  });
  Object.defineProperty(Transaction.prototype, 'validationCode', {
    configurable: true,
    get: function () {
      return this.b10();
    }
  });
  function SsmChaincodePropertiesDTO() {
  }
  function ChaincodeSsmConfig(url) {
    this.l10_1 = url;
  }
  ChaincodeSsmConfig.prototype.xy = function () {
    return this.l10_1;
  };
  Object.defineProperty(ChaincodeSsmConfig.prototype, 'url', {
    configurable: true,
    get: function () {
      return this.xy();
    }
  });
  function AgentDTO() {
  }
  function Companion_20() {
    Companion_instance_20 = this;
  }
  var Companion_instance_20;
  function Companion_getInstance_20() {
    if (Companion_instance_20 == null)
      new Companion_20();
    return Companion_instance_20;
  }
  function Agent(name, pub) {
    Companion_getInstance_20();
    this.n10_1 = name;
    this.o10_1 = pub;
  }
  Agent.prototype.ta = function () {
    return this.n10_1;
  };
  Agent.prototype.m10 = function () {
    return this.o10_1;
  };
  Agent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof Agent)
      other;
    else
      THROW_CCE();
    if (!(this.n10_1 === other.n10_1))
      return false;
    if (!contentEquals_0(this.o10_1, other.o10_1))
      return false;
    return true;
  };
  Agent.prototype.hashCode = function () {
    var result = getStringHashCode(this.n10_1);
    result = imul(31, result) + contentHashCode_0(this.o10_1) | 0;
    return result;
  };
  Agent.prototype.component1 = function () {
    return this.n10_1;
  };
  Agent.prototype.component2 = function () {
    return this.o10_1;
  };
  Agent.prototype.copy = function (name, pub) {
    return this.p10(name === void 1 ? this.n10_1 : name, pub === void 1 ? this.o10_1 : pub);
  };
  Agent.prototype.p10 = function (name, pub) {
    return new Agent(name, pub);
  };
  Agent.prototype.q10 = function (name, pub, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = this.n10_1;
    if (!(($mask0 & 2) === 0))
      pub = this.o10_1;
    return this.p10(name, pub);
  };
  Agent.prototype.toString = function () {
    return 'Agent(name=' + this.n10_1 + ', pub=' + toString_3(this.o10_1) + ')';
  };
  Object.defineProperty(Agent.prototype, 'name', {
    configurable: true,
    get: function () {
      return this.ta();
    }
  });
  Object.defineProperty(Agent.prototype, 'pub', {
    configurable: true,
    get: function () {
      return this.m10();
    }
  });
  function ChaincodeDTO() {
  }
  function Chaincode(id, channelId) {
    this.r10_1 = id;
    this.s10_1 = channelId;
  }
  Chaincode.prototype.ur = function () {
    return this.r10_1;
  };
  Chaincode.prototype.xz = function () {
    return this.s10_1;
  };
  Chaincode.prototype.component1 = function () {
    return this.r10_1;
  };
  Chaincode.prototype.component2 = function () {
    return this.s10_1;
  };
  Chaincode.prototype.copy = function (id, channelId) {
    return this.t10(id === void 1 ? this.r10_1 : id, channelId === void 1 ? this.s10_1 : channelId);
  };
  Chaincode.prototype.t10 = function (id, channelId) {
    return new Chaincode(id, channelId);
  };
  Chaincode.prototype.u10 = function (id, channelId, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      id = this.r10_1;
    if (!(($mask0 & 2) === 0))
      channelId = this.s10_1;
    return this.t10(id, channelId);
  };
  Chaincode.prototype.toString = function () {
    return 'Chaincode(id=' + this.r10_1 + ', channelId=' + this.s10_1 + ')';
  };
  Chaincode.prototype.hashCode = function () {
    var result = getStringHashCode(this.r10_1);
    result = imul(result, 31) + getStringHashCode(this.s10_1) | 0;
    return result;
  };
  Chaincode.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Chaincode))
      return false;
    var tmp0_other_with_cast = other instanceof Chaincode ? other : THROW_CCE();
    if (!(this.r10_1 === tmp0_other_with_cast.r10_1))
      return false;
    if (!(this.s10_1 === tmp0_other_with_cast.s10_1))
      return false;
    return true;
  };
  Object.defineProperty(Chaincode.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  Object.defineProperty(Chaincode.prototype, 'channelId', {
    configurable: true,
    get: function () {
      return this.xz();
    }
  });
  function SsmDTO() {
  }
  function Ssm(name, transitions) {
    this.w10_1 = name;
    this.x10_1 = transitions;
  }
  Ssm.prototype.ta = function () {
    return this.w10_1;
  };
  Ssm.prototype.v10 = function () {
    return this.x10_1;
  };
  Ssm.prototype.component1 = function () {
    return this.w10_1;
  };
  Ssm.prototype.component2 = function () {
    return this.x10_1;
  };
  Ssm.prototype.copy = function (name, transitions) {
    return this.y10(name === void 1 ? this.w10_1 : name, transitions === void 1 ? this.x10_1 : transitions);
  };
  Ssm.prototype.y10 = function (name, transitions) {
    return new Ssm(name, transitions);
  };
  Ssm.prototype.z10 = function (name, transitions, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      name = this.w10_1;
    if (!(($mask0 & 2) === 0))
      transitions = this.x10_1;
    return this.y10(name, transitions);
  };
  Ssm.prototype.toString = function () {
    return 'Ssm(name=' + this.w10_1 + ', transitions=' + this.x10_1 + ')';
  };
  Ssm.prototype.hashCode = function () {
    var result = getStringHashCode(this.w10_1);
    result = imul(result, 31) + hashCode(this.x10_1) | 0;
    return result;
  };
  Ssm.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Ssm))
      return false;
    var tmp0_other_with_cast = other instanceof Ssm ? other : THROW_CCE();
    if (!(this.w10_1 === tmp0_other_with_cast.w10_1))
      return false;
    if (!equals_0(this.x10_1, tmp0_other_with_cast.x10_1))
      return false;
    return true;
  };
  Object.defineProperty(Ssm.prototype, 'name', {
    configurable: true,
    get: function () {
      return this.ta();
    }
  });
  Object.defineProperty(Ssm.prototype, 'transitions', {
    configurable: true,
    get: function () {
      return this.v10();
    }
  });
  function SsmContextDTO() {
  }
  function SsmContext_init_$Init$(session, public_0, iteration, private_0, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      private_0 = null;
    SsmContext.call($this, session, public_0, iteration, private_0);
    return $this;
  }
  function SsmContext_init_$Create$(session, public_0, iteration, private_0, $mask0, $marker) {
    return SsmContext_init_$Init$(session, public_0, iteration, private_0, $mask0, $marker, Object.create(SsmContext.prototype));
  }
  function SsmContext(session, public_0, iteration, private_0) {
    var private_1 = private_0 === void 1 ? null : private_0;
    this.e11_1 = session;
    this.f11_1 = public_0;
    this.g11_1 = iteration;
    this.h11_1 = private_1;
  }
  SsmContext.prototype.a11 = function () {
    return this.e11_1;
  };
  SsmContext.prototype.b11 = function () {
    return this.f11_1;
  };
  SsmContext.prototype.c11 = function () {
    return this.g11_1;
  };
  SsmContext.prototype.d11 = function () {
    return this.h11_1;
  };
  SsmContext.prototype.component1 = function () {
    return this.e11_1;
  };
  SsmContext.prototype.component2 = function () {
    return this.f11_1;
  };
  SsmContext.prototype.component3 = function () {
    return this.g11_1;
  };
  SsmContext.prototype.component4 = function () {
    return this.h11_1;
  };
  SsmContext.prototype.copy = function (session, public_0, iteration, private_0) {
    return this.i11(session === void 1 ? this.e11_1 : session, public_0 === void 1 ? this.f11_1 : public_0, iteration === void 1 ? this.g11_1 : iteration, private_0 === void 1 ? this.h11_1 : private_0);
  };
  SsmContext.prototype.i11 = function (session, public_0, iteration, private_0) {
    return new SsmContext(session, public_0, iteration, private_0);
  };
  SsmContext.prototype.j11 = function (session, public_0, iteration, private_0, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      session = this.e11_1;
    if (!(($mask0 & 2) === 0))
      public_0 = this.f11_1;
    if (!(($mask0 & 4) === 0))
      iteration = this.g11_1;
    if (!(($mask0 & 8) === 0))
      private_0 = this.h11_1;
    return this.i11(session, public_0, iteration, private_0);
  };
  SsmContext.prototype.toString = function () {
    return 'SsmContext(session=' + this.e11_1 + ', public=' + this.f11_1 + ', iteration=' + this.g11_1 + ', private=' + this.h11_1 + ')';
  };
  SsmContext.prototype.hashCode = function () {
    var result = getStringHashCode(this.e11_1);
    result = imul(result, 31) + getStringHashCode(this.f11_1) | 0;
    result = imul(result, 31) + this.g11_1 | 0;
    result = imul(result, 31) + (this.h11_1 == null ? 0 : hashCode(this.h11_1)) | 0;
    return result;
  };
  SsmContext.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmContext))
      return false;
    var tmp0_other_with_cast = other instanceof SsmContext ? other : THROW_CCE();
    if (!(this.e11_1 === tmp0_other_with_cast.e11_1))
      return false;
    if (!(this.f11_1 === tmp0_other_with_cast.f11_1))
      return false;
    if (!(this.g11_1 === tmp0_other_with_cast.g11_1))
      return false;
    if (!equals_0(this.h11_1, tmp0_other_with_cast.h11_1))
      return false;
    return true;
  };
  Object.defineProperty(SsmContext.prototype, 'session', {
    configurable: true,
    get: function () {
      return this.a11();
    }
  });
  Object.defineProperty(SsmContext.prototype, 'public', {
    configurable: true,
    get: function () {
      return this.b11();
    }
  });
  Object.defineProperty(SsmContext.prototype, 'iteration', {
    configurable: true,
    get: function () {
      return this.c11();
    }
  });
  Object.defineProperty(SsmContext.prototype, 'private', {
    configurable: true,
    get: function () {
      return this.d11();
    }
  });
  function SsmGrantDTO() {
  }
  function SsmGrant(user, iteration, credits) {
    this.user = user;
    this.iteration = iteration;
    this.credits = credits;
  }
  SsmGrant.prototype.k11 = function () {
    return this.user;
  };
  SsmGrant.prototype.c11 = function () {
    return this.iteration;
  };
  SsmGrant.prototype.l11 = function () {
    return this.credits;
  };
  SsmGrant.prototype.component1 = function () {
    return this.user;
  };
  SsmGrant.prototype.component2 = function () {
    return this.iteration;
  };
  SsmGrant.prototype.component3 = function () {
    return this.credits;
  };
  SsmGrant.prototype.copy = function (user, iteration, credits) {
    return this.m11(user === void 1 ? this.user : user, iteration === void 1 ? this.iteration : iteration, credits === void 1 ? this.credits : credits);
  };
  SsmGrant.prototype.m11 = function (user, iteration, credits) {
    return new SsmGrant(user, iteration, credits);
  };
  SsmGrant.prototype.n11 = function (user, iteration, credits, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      user = this.user;
    if (!(($mask0 & 2) === 0))
      iteration = this.iteration;
    if (!(($mask0 & 4) === 0))
      credits = this.credits;
    return this.m11(user, iteration, credits);
  };
  SsmGrant.prototype.toString = function () {
    return 'SsmGrant(user=' + this.user + ', iteration=' + this.iteration + ', credits=' + this.credits + ')';
  };
  SsmGrant.prototype.hashCode = function () {
    var result = getStringHashCode(this.user);
    result = imul(result, 31) + this.iteration | 0;
    result = imul(result, 31) + hashCode(this.credits) | 0;
    return result;
  };
  SsmGrant.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmGrant))
      return false;
    var tmp0_other_with_cast = other instanceof SsmGrant ? other : THROW_CCE();
    if (!(this.user === tmp0_other_with_cast.user))
      return false;
    if (!(this.iteration === tmp0_other_with_cast.iteration))
      return false;
    if (!equals_0(this.credits, tmp0_other_with_cast.credits))
      return false;
    return true;
  };
  function CreditDTO() {
  }
  function Credit(amount) {
    this.p11_1 = amount;
  }
  Credit.prototype.o11 = function () {
    return this.p11_1;
  };
  Credit.prototype.component1 = function () {
    return this.p11_1;
  };
  Credit.prototype.copy = function (amount) {
    return this.q11(amount === void 1 ? this.p11_1 : amount);
  };
  Credit.prototype.q11 = function (amount) {
    return new Credit(amount);
  };
  Credit.prototype.r11 = function (amount, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      amount = this.p11_1;
    return this.q11(amount);
  };
  Credit.prototype.toString = function () {
    return 'Credit(amount=' + this.p11_1 + ')';
  };
  Credit.prototype.hashCode = function () {
    return this.p11_1;
  };
  Credit.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Credit))
      return false;
    var tmp0_other_with_cast = other instanceof Credit ? other : THROW_CCE();
    if (!(this.p11_1 === tmp0_other_with_cast.p11_1))
      return false;
    return true;
  };
  Object.defineProperty(Credit.prototype, 'amount', {
    configurable: true,
    get: function () {
      return this.o11();
    }
  });
  function SsmSessionDTO() {
  }
  function SsmSession_init_$Init$(ssm, session, roles, public_0, private_0, $mask0, $marker, $this) {
    if (!(($mask0 & 16) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0 = HashMap_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      private_0 = tmp$ret$0;
    }
    SsmSession.call($this, ssm, session, roles, public_0, private_0);
    return $this;
  }
  function SsmSession_init_$Create$(ssm, session, roles, public_0, private_0, $mask0, $marker) {
    return SsmSession_init_$Init$(ssm, session, roles, public_0, private_0, $mask0, $marker, Object.create(SsmSession.prototype));
  }
  function SsmSession(ssm, session, roles, public_0, private_0) {
    var tmp;
    if (private_0 === void 1) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0 = HashMap_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = private_0;
    }
    var private_1 = tmp;
    this.t11_1 = ssm;
    this.u11_1 = session;
    this.v11_1 = roles;
    this.w11_1 = public_0;
    this.x11_1 = private_1;
  }
  SsmSession.prototype.s11 = function () {
    return this.t11_1;
  };
  SsmSession.prototype.a11 = function () {
    return this.u11_1;
  };
  SsmSession.prototype.bu = function () {
    return this.v11_1;
  };
  SsmSession.prototype.b11 = function () {
    return this.w11_1;
  };
  SsmSession.prototype.d11 = function () {
    return this.x11_1;
  };
  Object.defineProperty(SsmSession.prototype, 'ssm', {
    configurable: true,
    get: function () {
      return this.s11();
    }
  });
  Object.defineProperty(SsmSession.prototype, 'session', {
    configurable: true,
    get: function () {
      return this.a11();
    }
  });
  Object.defineProperty(SsmSession.prototype, 'roles', {
    configurable: true,
    get: function () {
      return this.bu();
    }
  });
  Object.defineProperty(SsmSession.prototype, 'public', {
    configurable: true,
    get: function () {
      return this.b11();
    }
  });
  Object.defineProperty(SsmSession.prototype, 'private', {
    configurable: true,
    get: function () {
      return this.d11();
    }
  });
  function SsmSessionStateDTO() {
  }
  function SsmSessionState_init_$Init$(ssm, session, roles, public_0, private_0, origin, current, iteration, $mask0, $marker, $this) {
    if (!(($mask0 & 16) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0 = HashMap_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      private_0 = tmp$ret$0;
    }
    SsmSessionState.call($this, ssm, session, roles, public_0, private_0, origin, current, iteration);
    return $this;
  }
  function SsmSessionState_init_$Create$(ssm, session, roles, public_0, private_0, origin, current, iteration, $mask0, $marker) {
    return SsmSessionState_init_$Init$(ssm, session, roles, public_0, private_0, origin, current, iteration, $mask0, $marker, Object.create(SsmSessionState.prototype));
  }
  function SsmSessionState(ssm, session, roles, public_0, private_0, origin, current, iteration) {
    var tmp;
    if (private_0 === void 1) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0 = HashMap_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = private_0;
    }
    var private_1 = tmp;
    this.a12_1 = ssm;
    this.b12_1 = session;
    this.c12_1 = roles;
    this.d12_1 = public_0;
    this.e12_1 = private_1;
    this.f12_1 = origin;
    this.g12_1 = current;
    this.h12_1 = iteration;
  }
  SsmSessionState.prototype.s11 = function () {
    return this.a12_1;
  };
  SsmSessionState.prototype.a11 = function () {
    return this.b12_1;
  };
  SsmSessionState.prototype.bu = function () {
    return this.c12_1;
  };
  SsmSessionState.prototype.b11 = function () {
    return this.d12_1;
  };
  SsmSessionState.prototype.d11 = function () {
    return this.e12_1;
  };
  SsmSessionState.prototype.y11 = function () {
    return this.f12_1;
  };
  SsmSessionState.prototype.z11 = function () {
    return this.g12_1;
  };
  SsmSessionState.prototype.c11 = function () {
    return this.h12_1;
  };
  SsmSessionState.prototype.component1 = function () {
    return this.a12_1;
  };
  SsmSessionState.prototype.component2 = function () {
    return this.b12_1;
  };
  SsmSessionState.prototype.component3 = function () {
    return this.c12_1;
  };
  SsmSessionState.prototype.component4 = function () {
    return this.d12_1;
  };
  SsmSessionState.prototype.component5 = function () {
    return this.e12_1;
  };
  SsmSessionState.prototype.component6 = function () {
    return this.f12_1;
  };
  SsmSessionState.prototype.component7 = function () {
    return this.g12_1;
  };
  SsmSessionState.prototype.component8 = function () {
    return this.h12_1;
  };
  SsmSessionState.prototype.copy = function (ssm, session, roles, public_0, private_0, origin, current, iteration) {
    return this.i12(ssm === void 1 ? this.a12_1 : ssm, session === void 1 ? this.b12_1 : session, roles === void 1 ? this.c12_1 : roles, public_0 === void 1 ? this.d12_1 : public_0, private_0 === void 1 ? this.e12_1 : private_0, origin === void 1 ? this.f12_1 : origin, current === void 1 ? this.g12_1 : current, iteration === void 1 ? this.h12_1 : iteration);
  };
  SsmSessionState.prototype.i12 = function (ssm, session, roles, public_0, private_0, origin, current, iteration) {
    return new SsmSessionState(ssm, session, roles, public_0, private_0, origin, current, iteration);
  };
  SsmSessionState.prototype.j12 = function (ssm, session, roles, public_0, private_0, origin, current, iteration, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      ssm = this.a12_1;
    if (!(($mask0 & 2) === 0))
      session = this.b12_1;
    if (!(($mask0 & 4) === 0))
      roles = this.c12_1;
    if (!(($mask0 & 8) === 0))
      public_0 = this.d12_1;
    if (!(($mask0 & 16) === 0))
      private_0 = this.e12_1;
    if (!(($mask0 & 32) === 0))
      origin = this.f12_1;
    if (!(($mask0 & 64) === 0))
      current = this.g12_1;
    if (!(($mask0 & 128) === 0))
      iteration = this.h12_1;
    return this.i12(ssm, session, roles, public_0, private_0, origin, current, iteration);
  };
  SsmSessionState.prototype.toString = function () {
    return 'SsmSessionState(ssm=' + this.a12_1 + ', session=' + this.b12_1 + ', roles=' + this.c12_1 + ', public=' + toString_2(this.d12_1) + ', private=' + this.e12_1 + ', origin=' + this.f12_1 + ', current=' + this.g12_1 + ', iteration=' + this.h12_1 + ')';
  };
  SsmSessionState.prototype.hashCode = function () {
    var result = this.a12_1 == null ? 0 : getStringHashCode(this.a12_1);
    result = imul(result, 31) + getStringHashCode(this.b12_1) | 0;
    result = imul(result, 31) + (this.c12_1 == null ? 0 : hashCode(this.c12_1)) | 0;
    result = imul(result, 31) + (this.d12_1 == null ? 0 : hashCode(this.d12_1)) | 0;
    result = imul(result, 31) + (this.e12_1 == null ? 0 : hashCode(this.e12_1)) | 0;
    result = imul(result, 31) + (this.f12_1 == null ? 0 : this.f12_1.hashCode()) | 0;
    result = imul(result, 31) + this.g12_1 | 0;
    result = imul(result, 31) + this.h12_1 | 0;
    return result;
  };
  SsmSessionState.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmSessionState))
      return false;
    var tmp0_other_with_cast = other instanceof SsmSessionState ? other : THROW_CCE();
    if (!(this.a12_1 == tmp0_other_with_cast.a12_1))
      return false;
    if (!(this.b12_1 === tmp0_other_with_cast.b12_1))
      return false;
    if (!equals_0(this.c12_1, tmp0_other_with_cast.c12_1))
      return false;
    if (!equals_0(this.d12_1, tmp0_other_with_cast.d12_1))
      return false;
    if (!equals_0(this.e12_1, tmp0_other_with_cast.e12_1))
      return false;
    if (!equals_0(this.f12_1, tmp0_other_with_cast.f12_1))
      return false;
    if (!(this.g12_1 === tmp0_other_with_cast.g12_1))
      return false;
    if (!(this.h12_1 === tmp0_other_with_cast.h12_1))
      return false;
    return true;
  };
  Object.defineProperty(SsmSessionState.prototype, 'ssm', {
    configurable: true,
    get: function () {
      return this.s11();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'session', {
    configurable: true,
    get: function () {
      return this.a11();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'roles', {
    configurable: true,
    get: function () {
      return this.bu();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'public', {
    configurable: true,
    get: function () {
      return this.b11();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'private', {
    configurable: true,
    get: function () {
      return this.d11();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'origin', {
    configurable: true,
    get: function () {
      return this.y11();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'current', {
    configurable: true,
    get: function () {
      return this.z11();
    }
  });
  Object.defineProperty(SsmSessionState.prototype, 'iteration', {
    configurable: true,
    get: function () {
      return this.c11();
    }
  });
  function SsmSessionStateLogDTO() {
  }
  function SsmSessionStateLog(txId, state) {
    this.l12_1 = txId;
    this.m12_1 = state;
  }
  SsmSessionStateLog.prototype.k12 = function () {
    return this.l12_1;
  };
  SsmSessionStateLog.prototype.od = function () {
    return this.m12_1;
  };
  SsmSessionStateLog.prototype.component1 = function () {
    return this.l12_1;
  };
  SsmSessionStateLog.prototype.component2 = function () {
    return this.m12_1;
  };
  SsmSessionStateLog.prototype.copy = function (txId, state) {
    return this.n12(txId === void 1 ? this.l12_1 : txId, state === void 1 ? this.m12_1 : state);
  };
  SsmSessionStateLog.prototype.n12 = function (txId, state) {
    return new SsmSessionStateLog(txId, state);
  };
  SsmSessionStateLog.prototype.o12 = function (txId, state, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      txId = this.l12_1;
    if (!(($mask0 & 2) === 0))
      state = this.m12_1;
    return this.n12(txId, state);
  };
  SsmSessionStateLog.prototype.toString = function () {
    return 'SsmSessionStateLog(txId=' + this.l12_1 + ', state=' + this.m12_1 + ')';
  };
  SsmSessionStateLog.prototype.hashCode = function () {
    var result = getStringHashCode(this.l12_1);
    result = imul(result, 31) + this.m12_1.hashCode() | 0;
    return result;
  };
  SsmSessionStateLog.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmSessionStateLog))
      return false;
    var tmp0_other_with_cast = other instanceof SsmSessionStateLog ? other : THROW_CCE();
    if (!(this.l12_1 === tmp0_other_with_cast.l12_1))
      return false;
    if (!this.m12_1.equals(tmp0_other_with_cast.m12_1))
      return false;
    return true;
  };
  Object.defineProperty(SsmSessionStateLog.prototype, 'txId', {
    configurable: true,
    get: function () {
      return this.k12();
    }
  });
  Object.defineProperty(SsmSessionStateLog.prototype, 'state', {
    configurable: true,
    get: function () {
      return this.od();
    }
  });
  function SsmTransitionDTO() {
  }
  function SsmTransition(from, to, role, action) {
    this.s12_1 = from;
    this.t12_1 = to;
    this.u12_1 = role;
    this.v12_1 = action;
  }
  SsmTransition.prototype.p12 = function () {
    return this.s12_1;
  };
  SsmTransition.prototype.q12 = function () {
    return this.t12_1;
  };
  SsmTransition.prototype.yy = function () {
    return this.u12_1;
  };
  SsmTransition.prototype.r12 = function () {
    return this.v12_1;
  };
  SsmTransition.prototype.component1 = function () {
    return this.s12_1;
  };
  SsmTransition.prototype.component2 = function () {
    return this.t12_1;
  };
  SsmTransition.prototype.component3 = function () {
    return this.u12_1;
  };
  SsmTransition.prototype.component4 = function () {
    return this.v12_1;
  };
  SsmTransition.prototype.copy = function (from, to, role, action) {
    return this.w12(from === void 1 ? this.s12_1 : from, to === void 1 ? this.t12_1 : to, role === void 1 ? this.u12_1 : role, action === void 1 ? this.v12_1 : action);
  };
  SsmTransition.prototype.w12 = function (from, to, role, action) {
    return new SsmTransition(from, to, role, action);
  };
  SsmTransition.prototype.x12 = function (from, to, role, action, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      from = this.s12_1;
    if (!(($mask0 & 2) === 0))
      to = this.t12_1;
    if (!(($mask0 & 4) === 0))
      role = this.u12_1;
    if (!(($mask0 & 8) === 0))
      action = this.v12_1;
    return this.w12(from, to, role, action);
  };
  SsmTransition.prototype.toString = function () {
    return 'SsmTransition(from=' + this.s12_1 + ', to=' + this.t12_1 + ', role=' + this.u12_1 + ', action=' + this.v12_1 + ')';
  };
  SsmTransition.prototype.hashCode = function () {
    var result = this.s12_1;
    result = imul(result, 31) + this.t12_1 | 0;
    result = imul(result, 31) + getStringHashCode(this.u12_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.v12_1) | 0;
    return result;
  };
  SsmTransition.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmTransition))
      return false;
    var tmp0_other_with_cast = other instanceof SsmTransition ? other : THROW_CCE();
    if (!(this.s12_1 === tmp0_other_with_cast.s12_1))
      return false;
    if (!(this.t12_1 === tmp0_other_with_cast.t12_1))
      return false;
    if (!(this.u12_1 === tmp0_other_with_cast.u12_1))
      return false;
    if (!(this.v12_1 === tmp0_other_with_cast.v12_1))
      return false;
    return true;
  };
  Object.defineProperty(SsmTransition.prototype, 'from', {
    configurable: true,
    get: function () {
      return this.p12();
    }
  });
  Object.defineProperty(SsmTransition.prototype, 'to', {
    configurable: true,
    get: function () {
      return this.q12();
    }
  });
  Object.defineProperty(SsmTransition.prototype, 'role', {
    configurable: true,
    get: function () {
      return this.yy();
    }
  });
  Object.defineProperty(SsmTransition.prototype, 'action', {
    configurable: true,
    get: function () {
      return this.r12();
    }
  });
  function WithPrivate() {
  }
  function ChaincodeUriDTO() {
  }
  function Companion_21() {
    Companion_instance_21 = this;
    this.PARTS = 3;
    this.PREFIX = 'chaincode';
  }
  Companion_21.prototype.z12 = function () {
    return this.PARTS;
  };
  Companion_21.prototype.a13 = function () {
    return this.PREFIX;
  };
  var Companion_instance_21;
  function Companion_getInstance_21() {
    if (Companion_instance_21 == null)
      new Companion_21();
    return Companion_instance_21;
  }
  function ChaincodeUri(uri) {
    Companion_getInstance_21();
    this.b13_1 = uri;
    var tmp = this;
    tmp.c13_1 = split$default(this.b13_1, [':'], false, 0, 6, null);
    // Inline function 'kotlin.require' call
    var tmp_0 = this.c13_1.f();
    Companion_getInstance_21();
    var tmp0_require = tmp_0 === 3;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$0 = 'Failed requirement.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    // Inline function 'kotlin.require' call
    var tmp_1 = first(this.c13_1);
    Companion_getInstance_21();
    var tmp1_require = tmp_1 === 'chaincode';
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$1 = 'Failed requirement.';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString_3(message_0));
    }
  }
  ChaincodeUri.prototype.y12 = function () {
    return this.b13_1;
  };
  ChaincodeUri.prototype.xz = function () {
    return this.c13_1.l(1);
  };
  ChaincodeUri.prototype.d13 = function () {
    return this.c13_1.l(2);
  };
  Object.defineProperty(ChaincodeUri.prototype, 'uri', {
    configurable: true,
    get: function () {
      return this.y12();
    }
  });
  Object.defineProperty(ChaincodeUri.prototype, 'channelId', {
    configurable: true,
    get: ChaincodeUri.prototype.xz
  });
  Object.defineProperty(ChaincodeUri.prototype, 'chaincodeId', {
    configurable: true,
    get: ChaincodeUri.prototype.d13
  });
  function from(_this__u8e3s4, channelId, chaincodeId) {
    return new ChaincodeUri('chaincode:' + channelId + ':' + chaincodeId);
  }
  function SsmUriDTO() {
  }
  function Companion_22() {
    Companion_instance_22 = this;
    this.PARTS = 4;
    this.PREFIX = 'ssm';
  }
  Companion_22.prototype.z12 = function () {
    return this.PARTS;
  };
  Companion_22.prototype.a13 = function () {
    return this.PREFIX;
  };
  var Companion_instance_22;
  function Companion_getInstance_22() {
    if (Companion_instance_22 == null)
      new Companion_22();
    return Companion_instance_22;
  }
  function SsmUri(uri) {
    Companion_getInstance_22();
    this.e13_1 = uri;
    var tmp = this;
    tmp.f13_1 = split$default(this.e13_1, [':'], false, 0, 6, null);
    // Inline function 'kotlin.require' call
    var tmp_0 = this.f13_1.f();
    Companion_getInstance_22();
    var tmp0_require = tmp_0 === 4;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$0 = 'Failed requirement.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString_3(message));
    }
    // Inline function 'kotlin.require' call
    var tmp_1 = first(this.f13_1);
    Companion_getInstance_22();
    var tmp1_require = tmp_1 === 'ssm';
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$1 = 'Failed requirement.';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString_3(message_0));
    }
  }
  SsmUri.prototype.y12 = function () {
    return this.e13_1;
  };
  SsmUri.prototype.xz = function () {
    return this.f13_1.l(1);
  };
  SsmUri.prototype.d13 = function () {
    return this.f13_1.l(2);
  };
  SsmUri.prototype.g13 = function () {
    return this.f13_1.l(3);
  };
  SsmUri.prototype.h13 = function () {
    return '1.0.0';
  };
  SsmUri.prototype.hz = function () {
    return from(Companion_getInstance_21(), this.channelId, this.chaincodeId);
  };
  SsmUri.prototype.component1 = function () {
    return this.e13_1;
  };
  SsmUri.prototype.copy = function (uri) {
    return this.i13(uri === void 1 ? this.e13_1 : uri);
  };
  SsmUri.prototype.i13 = function (uri) {
    return new SsmUri(uri);
  };
  SsmUri.prototype.j13 = function (uri, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      uri = this.e13_1;
    return this.i13(uri);
  };
  SsmUri.prototype.toString = function () {
    return 'SsmUri(uri=' + this.e13_1 + ')';
  };
  SsmUri.prototype.hashCode = function () {
    return getStringHashCode(this.e13_1);
  };
  SsmUri.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmUri))
      return false;
    var tmp0_other_with_cast = other instanceof SsmUri ? other : THROW_CCE();
    if (!(this.e13_1 === tmp0_other_with_cast.e13_1))
      return false;
    return true;
  };
  Object.defineProperty(SsmUri.prototype, 'uri', {
    configurable: true,
    get: function () {
      return this.y12();
    }
  });
  Object.defineProperty(SsmUri.prototype, 'channelId', {
    configurable: true,
    get: SsmUri.prototype.xz
  });
  Object.defineProperty(SsmUri.prototype, 'chaincodeId', {
    configurable: true,
    get: SsmUri.prototype.d13
  });
  Object.defineProperty(SsmUri.prototype, 'ssmName', {
    configurable: true,
    get: SsmUri.prototype.g13
  });
  Object.defineProperty(SsmUri.prototype, 'ssmVersion', {
    configurable: true,
    get: SsmUri.prototype.h13
  });
  Object.defineProperty(SsmUri.prototype, 'chaincodeUri', {
    configurable: true,
    get: SsmUri.prototype.hz
  });
  function SsmGetAdminQuery(chaincodeUri, name) {
    this.k13_1 = chaincodeUri;
    this.name = name;
  }
  SsmGetAdminQuery.prototype.hz = function () {
    return this.k13_1;
  };
  SsmGetAdminQuery.prototype.ta = function () {
    return this.name;
  };
  Object.defineProperty(SsmGetAdminQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmGetAdminResult(item) {
    this.l13_1 = item;
  }
  SsmGetAdminResult.prototype.ew = function () {
    return this.l13_1;
  };
  Object.defineProperty(SsmGetAdminResult.prototype, 'item', {
    configurable: true,
    get: function () {
      return this.ew();
    }
  });
  function SsmGetQuery(chaincodeUri, name) {
    this.m13_1 = chaincodeUri;
    this.name = name;
  }
  SsmGetQuery.prototype.hz = function () {
    return this.m13_1;
  };
  SsmGetQuery.prototype.ta = function () {
    return this.name;
  };
  Object.defineProperty(SsmGetQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmGetResult(item) {
    this.n13_1 = item;
  }
  SsmGetResult.prototype.ew = function () {
    return this.n13_1;
  };
  Object.defineProperty(SsmGetResult.prototype, 'item', {
    configurable: true,
    get: function () {
      return this.ew();
    }
  });
  function SsmGetSessionLogsQuery(chaincodeUri, ssmName, sessionName) {
    this.o13_1 = chaincodeUri;
    this.ssmName = ssmName;
    this.sessionName = sessionName;
  }
  SsmGetSessionLogsQuery.prototype.hz = function () {
    return this.o13_1;
  };
  SsmGetSessionLogsQuery.prototype.g13 = function () {
    return this.ssmName;
  };
  SsmGetSessionLogsQuery.prototype.p13 = function () {
    return this.sessionName;
  };
  Object.defineProperty(SsmGetSessionLogsQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmGetSessionLogsQueryResult(ssmName, sessionName, logs) {
    this.ssmName = ssmName;
    this.sessionName = sessionName;
    this.logs = logs;
  }
  SsmGetSessionLogsQueryResult.prototype.g13 = function () {
    return this.ssmName;
  };
  SsmGetSessionLogsQueryResult.prototype.p13 = function () {
    return this.sessionName;
  };
  SsmGetSessionLogsQueryResult.prototype.q13 = function () {
    return this.logs;
  };
  SsmGetSessionLogsQueryResult.prototype.component1 = function () {
    return this.ssmName;
  };
  SsmGetSessionLogsQueryResult.prototype.component2 = function () {
    return this.sessionName;
  };
  SsmGetSessionLogsQueryResult.prototype.component3 = function () {
    return this.logs;
  };
  SsmGetSessionLogsQueryResult.prototype.copy = function (ssmName, sessionName, logs) {
    return this.r13(ssmName === void 1 ? this.ssmName : ssmName, sessionName === void 1 ? this.sessionName : sessionName, logs === void 1 ? this.logs : logs);
  };
  SsmGetSessionLogsQueryResult.prototype.r13 = function (ssmName, sessionName, logs) {
    return new SsmGetSessionLogsQueryResult(ssmName, sessionName, logs);
  };
  SsmGetSessionLogsQueryResult.prototype.s13 = function (ssmName, sessionName, logs, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      ssmName = this.ssmName;
    if (!(($mask0 & 2) === 0))
      sessionName = this.sessionName;
    if (!(($mask0 & 4) === 0))
      logs = this.logs;
    return this.r13(ssmName, sessionName, logs);
  };
  SsmGetSessionLogsQueryResult.prototype.toString = function () {
    return 'SsmGetSessionLogsQueryResult(ssmName=' + this.ssmName + ', sessionName=' + this.sessionName + ', logs=' + this.logs + ')';
  };
  SsmGetSessionLogsQueryResult.prototype.hashCode = function () {
    var result = getStringHashCode(this.ssmName);
    result = imul(result, 31) + getStringHashCode(this.sessionName) | 0;
    result = imul(result, 31) + hashCode(this.logs) | 0;
    return result;
  };
  SsmGetSessionLogsQueryResult.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmGetSessionLogsQueryResult))
      return false;
    var tmp0_other_with_cast = other instanceof SsmGetSessionLogsQueryResult ? other : THROW_CCE();
    if (!(this.ssmName === tmp0_other_with_cast.ssmName))
      return false;
    if (!(this.sessionName === tmp0_other_with_cast.sessionName))
      return false;
    if (!equals_0(this.logs, tmp0_other_with_cast.logs))
      return false;
    return true;
  };
  function SsmGetSessionQuery(chaincodeUri, sessionName) {
    this.t13_1 = chaincodeUri;
    this.sessionName = sessionName;
  }
  SsmGetSessionQuery.prototype.hz = function () {
    return this.t13_1;
  };
  SsmGetSessionQuery.prototype.p13 = function () {
    return this.sessionName;
  };
  Object.defineProperty(SsmGetSessionQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmGetSessionResult(item) {
    this.u13_1 = item;
  }
  SsmGetSessionResult.prototype.ew = function () {
    return this.u13_1;
  };
  Object.defineProperty(SsmGetSessionResult.prototype, 'item', {
    configurable: true,
    get: function () {
      return this.ew();
    }
  });
  function SsmGetTransactionQuery(chaincodeUri, id) {
    this.v13_1 = chaincodeUri;
    this.id = id;
  }
  SsmGetTransactionQuery.prototype.hz = function () {
    return this.v13_1;
  };
  SsmGetTransactionQuery.prototype.ur = function () {
    return this.id;
  };
  SsmGetTransactionQuery.prototype.component1 = function () {
    return this.v13_1;
  };
  SsmGetTransactionQuery.prototype.component2 = function () {
    return this.id;
  };
  SsmGetTransactionQuery.prototype.copy = function (chaincodeUri, id) {
    return this.w13(chaincodeUri === void 1 ? this.v13_1 : chaincodeUri, id === void 1 ? this.id : id);
  };
  SsmGetTransactionQuery.prototype.w13 = function (chaincodeUri, id) {
    return new SsmGetTransactionQuery(chaincodeUri, id);
  };
  SsmGetTransactionQuery.prototype.x13 = function (chaincodeUri, id, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      chaincodeUri = this.v13_1;
    if (!(($mask0 & 2) === 0))
      id = this.id;
    return this.w13(chaincodeUri, id);
  };
  SsmGetTransactionQuery.prototype.toString = function () {
    return 'SsmGetTransactionQuery(chaincodeUri=' + this.v13_1 + ', id=' + this.id + ')';
  };
  SsmGetTransactionQuery.prototype.hashCode = function () {
    var result = hashCode(this.v13_1);
    result = imul(result, 31) + getStringHashCode(this.id) | 0;
    return result;
  };
  SsmGetTransactionQuery.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SsmGetTransactionQuery))
      return false;
    var tmp0_other_with_cast = other instanceof SsmGetTransactionQuery ? other : THROW_CCE();
    if (!equals_0(this.v13_1, tmp0_other_with_cast.v13_1))
      return false;
    if (!(this.id === tmp0_other_with_cast.id))
      return false;
    return true;
  };
  Object.defineProperty(SsmGetTransactionQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmGetTransactionQueryResult(item) {
    this.y13_1 = item;
  }
  SsmGetTransactionQueryResult.prototype.ew = function () {
    return this.y13_1;
  };
  Object.defineProperty(SsmGetTransactionQueryResult.prototype, 'item', {
    configurable: true,
    get: function () {
      return this.ew();
    }
  });
  function SsmGetUserQuery(chaincodeUri, name) {
    this.z13_1 = chaincodeUri;
    this.name = name;
  }
  SsmGetUserQuery.prototype.hz = function () {
    return this.z13_1;
  };
  SsmGetUserQuery.prototype.ta = function () {
    return this.name;
  };
  Object.defineProperty(SsmGetUserQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmGetUserResult(item) {
    this.a14_1 = item;
  }
  SsmGetUserResult.prototype.ew = function () {
    return this.a14_1;
  };
  Object.defineProperty(SsmGetUserResult.prototype, 'item', {
    configurable: true,
    get: function () {
      return this.ew();
    }
  });
  function SsmListAdminQuery(chaincodeUri) {
    this.b14_1 = chaincodeUri;
  }
  SsmListAdminQuery.prototype.hz = function () {
    return this.b14_1;
  };
  Object.defineProperty(SsmListAdminQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmListAdminResult(items) {
    this.c14_1 = items;
  }
  SsmListAdminResult.prototype.ws = function () {
    return this.c14_1;
  };
  Object.defineProperty(SsmListAdminResult.prototype, 'items', {
    configurable: true,
    get: function () {
      return this.ws();
    }
  });
  function SsmListSessionQuery(chaincodeUri) {
    this.d14_1 = chaincodeUri;
  }
  SsmListSessionQuery.prototype.hz = function () {
    return this.d14_1;
  };
  Object.defineProperty(SsmListSessionQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmListSessionResult(items) {
    this.e14_1 = items;
  }
  SsmListSessionResult.prototype.ws = function () {
    return this.e14_1;
  };
  Object.defineProperty(SsmListSessionResult.prototype, 'items', {
    configurable: true,
    get: function () {
      return this.ws();
    }
  });
  function SsmListSsmQuery(chaincodeUri) {
    this.f14_1 = chaincodeUri;
  }
  SsmListSsmQuery.prototype.hz = function () {
    return this.f14_1;
  };
  Object.defineProperty(SsmListSsmQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmListSsmResult(items) {
    this.g14_1 = items;
  }
  SsmListSsmResult.prototype.ws = function () {
    return this.g14_1;
  };
  Object.defineProperty(SsmListSsmResult.prototype, 'items', {
    configurable: true,
    get: function () {
      return this.ws();
    }
  });
  function SsmListUserQuery(chaincodeUri) {
    this.h14_1 = chaincodeUri;
  }
  SsmListUserQuery.prototype.hz = function () {
    return this.h14_1;
  };
  Object.defineProperty(SsmListUserQuery.prototype, 'chaincodeUri', {
    configurable: true,
    get: function () {
      return this.hz();
    }
  });
  function SsmListUserResult(items) {
    this.i14_1 = items;
  }
  SsmListUserResult.prototype.ws = function () {
    return this.i14_1;
  };
  Object.defineProperty(SsmListUserResult.prototype, 'items', {
    configurable: true,
    get: function () {
      return this.ws();
    }
  });
  function Automate() {
  }
  function isInstance(_this__u8e3s4, $this, msg) {
    var msgAction = toValue(getKClassFromExpression(msg));
    return msgAction.name === _this__u8e3s4.name;
  }
  function isSame(_this__u8e3s4, $this, to) {
    var tmp0_safe_receiver = _this__u8e3s4;
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.position) === to.position;
  }
  function Companion_23() {
    Companion_instance_23 = this;
  }
  Companion_23.prototype.serializer = function () {
    return $serializer_getInstance_3();
  };
  var Companion_instance_23;
  function Companion_getInstance_23() {
    if (Companion_instance_23 == null)
      new Companion_23();
    return Companion_instance_23;
  }
  function $serializer_5() {
    $serializer_instance_3 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('s2.dsl.automate.S2Automate', this, 3);
    tmp0_serialDesc.dp('name', false);
    tmp0_serialDesc.dp('version', false);
    tmp0_serialDesc.dp('transitions', false);
    this.j14_1 = tmp0_serialDesc;
  }
  $serializer_5.prototype.al = function () {
    return this.j14_1;
  };
  $serializer_5.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), get_nullable(StringSerializer_getInstance()), new ReferenceArraySerializer(getKClass(S2Transition), $serializer_getInstance_4())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_5.prototype.zr = function (decoder) {
    var tmp0_desc = this.j14_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.as(tmp0_desc);
    if (tmp7_input.bn()) {
      tmp4_local0 = tmp7_input.en(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.gn(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.fn(tmp0_desc, 2, new ReferenceArraySerializer(getKClass(S2Transition), $serializer_getInstance_4()), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.en(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.gn(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.fn(tmp0_desc, 2, new ReferenceArraySerializer(getKClass(S2Transition), $serializer_getInstance_4()), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.an(tmp0_desc);
    return S2Automate_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer_5.prototype.k14 = function (encoder, value) {
    var tmp0_desc = this.j14_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.jn(tmp0_desc, 0, value.name);
    tmp1_output.ln(tmp0_desc, 1, StringSerializer_getInstance(), value.version);
    tmp1_output.kn(tmp0_desc, 2, new ReferenceArraySerializer(getKClass(S2Transition), $serializer_getInstance_4()), value.transitions);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_5.prototype.cs = function (encoder, value) {
    return this.k14(encoder, value instanceof S2Automate ? value : THROW_CCE());
  };
  var $serializer_instance_3;
  function $serializer_getInstance_3() {
    if ($serializer_instance_3 == null)
      new $serializer_5();
    return $serializer_instance_3;
  }
  function S2Automate_init_$Init$(seen1, name, version, transitions, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1))) {
      throwMissingFieldException(seen1, 7, $serializer_getInstance_3().j14_1);
    }
    $this.name = name;
    $this.version = version;
    $this.transitions = transitions;
    return $this;
  }
  function S2Automate_init_$Create$(seen1, name, version, transitions, serializationConstructorMarker) {
    return S2Automate_init_$Init$(seen1, name, version, transitions, serializationConstructorMarker, Object.create(S2Automate.prototype));
  }
  function S2Automate(name, version, transitions) {
    Companion_getInstance_23();
    this.name = name;
    this.version = version;
    this.transitions = transitions;
  }
  S2Automate.prototype.ta = function () {
    return this.name;
  };
  S2Automate.prototype.l14 = function () {
    return this.version;
  };
  S2Automate.prototype.v10 = function () {
    return this.transitions;
  };
  S2Automate.prototype.getAvailableTransitions = function (state) {
    var tmp$ret$3;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = this.transitions;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var indexedObject = tmp0_filter;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      // Inline function 's2.dsl.automate.S2Automate.getAvailableTransitions.<anonymous>' call
      tmp$ret$0 = isSame(element.from, this, state);
      if (tmp$ret$0) {
        tmp0_filterTo.e(element);
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_toTypedArray = tmp$ret$2;
    tmp$ret$3 = copyToArray(tmp1_toTypedArray);
    return tmp$ret$3;
  };
  S2Automate.prototype.isAvailableTransition = function (currentState, msg) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.getAvailableTransitions(currentState);
      var indexedObject = tmp0_any;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 's2.dsl.automate.S2Automate.isAvailableTransition.<anonymous>' call
        tmp$ret$0 = isInstance(element.action, this, msg);
        if (tmp$ret$0) {
          tmp$ret$1 = true;
          break $l$block;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  };
  S2Automate.prototype.isAvailableInitTransition = function (command) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.transitions;
      var indexedObject = tmp0_any;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 's2.dsl.automate.S2Automate.isAvailableInitTransition.<anonymous>' call
        tmp$ret$0 = element.from == null ? isInstance(element.action, this, command) : false;
        if (tmp$ret$0) {
          tmp$ret$1 = true;
          break $l$block;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  };
  S2Automate.prototype.isFinalState = function (state) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isEmpty' call
    var tmp0_isEmpty = this.getAvailableTransitions(state);
    tmp$ret$0 = tmp0_isEmpty.length === 0;
    return tmp$ret$0;
  };
  S2Automate.prototype.isSameState = function (from, to) {
    var tmp0_safe_receiver = from;
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.position) === to.position;
  };
  function S2InitCommand() {
  }
  function S2Command() {
  }
  function S2Error() {
  }
  function S2ErrorBase(type, description, date, payload) {
    this.o14_1 = type;
    this.p14_1 = description;
    this.q14_1 = date;
    this.r14_1 = payload;
  }
  S2ErrorBase.prototype.a10 = function () {
    return this.o14_1;
  };
  S2ErrorBase.prototype.wv = function () {
    return this.p14_1;
  };
  S2ErrorBase.prototype.m14 = function () {
    return this.q14_1;
  };
  S2ErrorBase.prototype.n14 = function () {
    return this.r14_1;
  };
  S2ErrorBase.prototype.toString = function () {
    return "S2ErrorBase(type='" + this.o14_1 + "', description='" + this.p14_1 + "', date='" + this.q14_1 + "', payload=" + this.r14_1 + ')';
  };
  Object.defineProperty(S2ErrorBase.prototype, 'type', {
    configurable: true,
    get: function () {
      return this.a10();
    }
  });
  Object.defineProperty(S2ErrorBase.prototype, 'description', {
    configurable: true,
    get: function () {
      return this.wv();
    }
  });
  Object.defineProperty(S2ErrorBase.prototype, 'date', {
    configurable: true,
    get: function () {
      return this.m14();
    }
  });
  Object.defineProperty(S2ErrorBase.prototype, 'payload', {
    configurable: true,
    get: function () {
      return this.n14();
    }
  });
  function S2Event() {
  }
  function S2EventSuccess(id, type, from, to) {
    this.id = id;
    this.type = type;
    this.from = from;
    this.to = to;
  }
  S2EventSuccess.prototype.ur = function () {
    return this.id;
  };
  S2EventSuccess.prototype.a10 = function () {
    return this.type;
  };
  S2EventSuccess.prototype.p12 = function () {
    return this.from;
  };
  S2EventSuccess.prototype.q12 = function () {
    return this.to;
  };
  function S2EventError(id, type, from, to, error) {
    this.id = id;
    this.type = type;
    this.from = from;
    this.to = to;
    this.error = error;
  }
  S2EventError.prototype.ur = function () {
    return this.id;
  };
  S2EventError.prototype.a10 = function () {
    return this.type;
  };
  S2EventError.prototype.p12 = function () {
    return this.from;
  };
  S2EventError.prototype.q12 = function () {
    return this.to;
  };
  S2EventError.prototype.ks = function () {
    return this.error;
  };
  function S2Role() {
  }
  function S2State() {
  }
  function S2SubMachine_init_$Init$(automate, startsOn, endsOn, autostart, blocking, singleton, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      startsOn = emptyList();
    if (!(($mask0 & 4) === 0))
      endsOn = emptyList();
    if (!(($mask0 & 8) === 0))
      autostart = false;
    if (!(($mask0 & 16) === 0))
      blocking = false;
    if (!(($mask0 & 32) === 0))
      singleton = false;
    S2SubMachine.call($this, automate, startsOn, endsOn, autostart, blocking, singleton);
    return $this;
  }
  function S2SubMachine_init_$Create$(automate, startsOn, endsOn, autostart, blocking, singleton, $mask0, $marker) {
    return S2SubMachine_init_$Init$(automate, startsOn, endsOn, autostart, blocking, singleton, $mask0, $marker, Object.create(S2SubMachine.prototype));
  }
  function S2SubMachine(automate, startsOn, endsOn, autostart, blocking, singleton) {
    var startsOn_0 = startsOn === void 1 ? emptyList() : startsOn;
    var endsOn_0 = endsOn === void 1 ? emptyList() : endsOn;
    var autostart_0 = autostart === void 1 ? false : autostart;
    var blocking_0 = blocking === void 1 ? false : blocking;
    var singleton_0 = singleton === void 1 ? false : singleton;
    this.t14_1 = automate;
    this.u14_1 = startsOn_0;
    this.v14_1 = endsOn_0;
    this.w14_1 = autostart_0;
    this.x14_1 = blocking_0;
    this.y14_1 = singleton_0;
  }
  S2SubMachine.prototype.z14 = function () {
    return this.t14_1;
  };
  S2SubMachine.prototype.a15 = function () {
    return this.u14_1;
  };
  S2SubMachine.prototype.b15 = function () {
    return this.v14_1;
  };
  S2SubMachine.prototype.c15 = function () {
    return this.w14_1;
  };
  S2SubMachine.prototype.d15 = function () {
    return this.x14_1;
  };
  S2SubMachine.prototype.e15 = function () {
    return this.y14_1;
  };
  Object.defineProperty(S2SubMachine.prototype, 'automate', {
    configurable: true,
    get: function () {
      return this.z14();
    }
  });
  Object.defineProperty(S2SubMachine.prototype, 'startsOn', {
    configurable: true,
    get: function () {
      return this.a15();
    }
  });
  Object.defineProperty(S2SubMachine.prototype, 'endsOn', {
    configurable: true,
    get: function () {
      return this.b15();
    }
  });
  Object.defineProperty(S2SubMachine.prototype, 'autostart', {
    configurable: true,
    get: function () {
      return this.c15();
    }
  });
  Object.defineProperty(S2SubMachine.prototype, 'blocking', {
    configurable: true,
    get: function () {
      return this.d15();
    }
  });
  Object.defineProperty(S2SubMachine.prototype, 'singleton', {
    configurable: true,
    get: function () {
      return this.e15();
    }
  });
  function S2InitTransition(to, role, action) {
    this.f15_1 = to;
    this.g15_1 = role;
    this.h15_1 = action;
  }
  S2InitTransition.prototype.q12 = function () {
    return this.f15_1;
  };
  S2InitTransition.prototype.yy = function () {
    return this.g15_1;
  };
  S2InitTransition.prototype.r12 = function () {
    return this.h15_1;
  };
  Object.defineProperty(S2InitTransition.prototype, 'to', {
    configurable: true,
    get: function () {
      return this.q12();
    }
  });
  Object.defineProperty(S2InitTransition.prototype, 'role', {
    configurable: true,
    get: function () {
      return this.yy();
    }
  });
  Object.defineProperty(S2InitTransition.prototype, 'action', {
    configurable: true,
    get: function () {
      return this.r12();
    }
  });
  function Companion_24() {
    Companion_instance_24 = this;
  }
  Companion_24.prototype.serializer = function () {
    return $serializer_getInstance_4();
  };
  var Companion_instance_24;
  function Companion_getInstance_24() {
    if (Companion_instance_24 == null)
      new Companion_24();
    return Companion_instance_24;
  }
  function $serializer_6() {
    $serializer_instance_4 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('s2.dsl.automate.S2Transition', this, 5);
    tmp0_serialDesc.dp('from', false);
    tmp0_serialDesc.dp('to', false);
    tmp0_serialDesc.dp('role', false);
    tmp0_serialDesc.dp('action', false);
    tmp0_serialDesc.dp('result', false);
    this.i15_1 = tmp0_serialDesc;
  }
  $serializer_6.prototype.al = function () {
    return this.i15_1;
  };
  $serializer_6.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [get_nullable($serializer_getInstance_7()), $serializer_getInstance_7(), $serializer_getInstance_6(), $serializer_getInstance_5(), get_nullable($serializer_getInstance_5())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_6.prototype.zr = function (decoder) {
    var tmp0_desc = this.i15_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.as(tmp0_desc);
    if (tmp9_input.bn()) {
      tmp4_local0 = tmp9_input.gn(tmp0_desc, 0, $serializer_getInstance_7(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.fn(tmp0_desc, 1, $serializer_getInstance_7(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.fn(tmp0_desc, 2, $serializer_getInstance_6(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.fn(tmp0_desc, 3, $serializer_getInstance_5(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.gn(tmp0_desc, 4, $serializer_getInstance_5(), tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.gn(tmp0_desc, 0, $serializer_getInstance_7(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.fn(tmp0_desc, 1, $serializer_getInstance_7(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.fn(tmp0_desc, 2, $serializer_getInstance_6(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.fn(tmp0_desc, 3, $serializer_getInstance_5(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.gn(tmp0_desc, 4, $serializer_getInstance_5(), tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.an(tmp0_desc);
    return S2Transition_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  $serializer_6.prototype.j15 = function (encoder, value) {
    var tmp0_desc = this.i15_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.ln(tmp0_desc, 0, $serializer_getInstance_7(), value.from);
    tmp1_output.kn(tmp0_desc, 1, $serializer_getInstance_7(), value.to);
    tmp1_output.kn(tmp0_desc, 2, $serializer_getInstance_6(), value.role);
    tmp1_output.kn(tmp0_desc, 3, $serializer_getInstance_5(), value.action);
    tmp1_output.ln(tmp0_desc, 4, $serializer_getInstance_5(), value.result);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_6.prototype.cs = function (encoder, value) {
    return this.j15(encoder, value instanceof S2Transition ? value : THROW_CCE());
  };
  var $serializer_instance_4;
  function $serializer_getInstance_4() {
    if ($serializer_instance_4 == null)
      new $serializer_6();
    return $serializer_instance_4;
  }
  function S2Transition_init_$Init$(seen1, from, to, role, action, result, serializationConstructorMarker, $this) {
    if (!(31 === (31 & seen1))) {
      throwMissingFieldException(seen1, 31, $serializer_getInstance_4().i15_1);
    }
    $this.k15_1 = from;
    $this.l15_1 = to;
    $this.m15_1 = role;
    $this.n15_1 = action;
    $this.o15_1 = result;
    return $this;
  }
  function S2Transition_init_$Create$(seen1, from, to, role, action, result, serializationConstructorMarker) {
    return S2Transition_init_$Init$(seen1, from, to, role, action, result, serializationConstructorMarker, Object.create(S2Transition.prototype));
  }
  function S2Transition(from, to, role, action, result) {
    Companion_getInstance_24();
    this.k15_1 = from;
    this.l15_1 = to;
    this.m15_1 = role;
    this.n15_1 = action;
    this.o15_1 = result;
  }
  S2Transition.prototype.p12 = function () {
    return this.k15_1;
  };
  S2Transition.prototype.q12 = function () {
    return this.l15_1;
  };
  S2Transition.prototype.yy = function () {
    return this.m15_1;
  };
  S2Transition.prototype.r12 = function () {
    return this.n15_1;
  };
  S2Transition.prototype.p15 = function () {
    return this.o15_1;
  };
  Object.defineProperty(S2Transition.prototype, 'from', {
    configurable: true,
    get: function () {
      return this.p12();
    }
  });
  Object.defineProperty(S2Transition.prototype, 'to', {
    configurable: true,
    get: function () {
      return this.q12();
    }
  });
  Object.defineProperty(S2Transition.prototype, 'role', {
    configurable: true,
    get: function () {
      return this.yy();
    }
  });
  Object.defineProperty(S2Transition.prototype, 'action', {
    configurable: true,
    get: function () {
      return this.r12();
    }
  });
  Object.defineProperty(S2Transition.prototype, 'result', {
    configurable: true,
    get: function () {
      return this.p15();
    }
  });
  function Companion_25() {
    Companion_instance_25 = this;
  }
  Companion_25.prototype.serializer = function () {
    return $serializer_getInstance_5();
  };
  var Companion_instance_25;
  function Companion_getInstance_25() {
    if (Companion_instance_25 == null)
      new Companion_25();
    return Companion_instance_25;
  }
  function $serializer_7() {
    $serializer_instance_5 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('s2.dsl.automate.S2TransitionValue', this, 1);
    tmp0_serialDesc.dp('name', false);
    this.q15_1 = tmp0_serialDesc;
  }
  $serializer_7.prototype.al = function () {
    return this.q15_1;
  };
  $serializer_7.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_7.prototype.zr = function (decoder) {
    var tmp0_desc = this.q15_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.as(tmp0_desc);
    if (tmp5_input.bn()) {
      tmp4_local0 = tmp5_input.en(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.en(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.an(tmp0_desc);
    return S2TransitionValue_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_7.prototype.r15 = function (encoder, value) {
    var tmp0_desc = this.q15_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.jn(tmp0_desc, 0, value.name);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_7.prototype.cs = function (encoder, value) {
    return this.r15(encoder, value instanceof S2TransitionValue ? value : THROW_CCE());
  };
  var $serializer_instance_5;
  function $serializer_getInstance_5() {
    if ($serializer_instance_5 == null)
      new $serializer_7();
    return $serializer_instance_5;
  }
  function S2TransitionValue_init_$Init$(seen1, name, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_5().q15_1);
    }
    $this.name = name;
    return $this;
  }
  function S2TransitionValue_init_$Create$(seen1, name, serializationConstructorMarker) {
    return S2TransitionValue_init_$Init$(seen1, name, serializationConstructorMarker, Object.create(S2TransitionValue.prototype));
  }
  function S2TransitionValue(name) {
    Companion_getInstance_25();
    this.name = name;
  }
  S2TransitionValue.prototype.ta = function () {
    return this.name;
  };
  function Companion_26() {
    Companion_instance_26 = this;
  }
  Companion_26.prototype.serializer = function () {
    return $serializer_getInstance_6();
  };
  var Companion_instance_26;
  function Companion_getInstance_26() {
    if (Companion_instance_26 == null)
      new Companion_26();
    return Companion_instance_26;
  }
  function $serializer_8() {
    $serializer_instance_6 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('s2.dsl.automate.S2RoleValue', this, 1);
    tmp0_serialDesc.dp('name', false);
    this.s15_1 = tmp0_serialDesc;
  }
  $serializer_8.prototype.al = function () {
    return this.s15_1;
  };
  $serializer_8.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_8.prototype.zr = function (decoder) {
    var tmp0_desc = this.s15_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.as(tmp0_desc);
    if (tmp5_input.bn()) {
      tmp4_local0 = tmp5_input.en(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.en(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.an(tmp0_desc);
    return S2RoleValue_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  $serializer_8.prototype.t15 = function (encoder, value) {
    var tmp0_desc = this.s15_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.jn(tmp0_desc, 0, value.name);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_8.prototype.cs = function (encoder, value) {
    return this.t15(encoder, value instanceof S2RoleValue ? value : THROW_CCE());
  };
  var $serializer_instance_6;
  function $serializer_getInstance_6() {
    if ($serializer_instance_6 == null)
      new $serializer_8();
    return $serializer_instance_6;
  }
  function S2RoleValue_init_$Init$(seen1, name, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_6().s15_1);
    }
    $this.name = name;
    return $this;
  }
  function S2RoleValue_init_$Create$(seen1, name, serializationConstructorMarker) {
    return S2RoleValue_init_$Init$(seen1, name, serializationConstructorMarker, Object.create(S2RoleValue.prototype));
  }
  function S2RoleValue(name) {
    Companion_getInstance_26();
    this.name = name;
  }
  S2RoleValue.prototype.ta = function () {
    return this.name;
  };
  function Companion_27() {
    Companion_instance_27 = this;
  }
  Companion_27.prototype.serializer = function () {
    return $serializer_getInstance_7();
  };
  var Companion_instance_27;
  function Companion_getInstance_27() {
    if (Companion_instance_27 == null)
      new Companion_27();
    return Companion_instance_27;
  }
  function $serializer_9() {
    $serializer_instance_7 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('s2.dsl.automate.S2StateValue', this, 2);
    tmp0_serialDesc.dp('name', false);
    tmp0_serialDesc.dp('position', false);
    this.u15_1 = tmp0_serialDesc;
  }
  $serializer_9.prototype.al = function () {
    return this.u15_1;
  };
  $serializer_9.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), IntSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_9.prototype.zr = function (decoder) {
    var tmp0_desc = this.u15_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = 0;
    var tmp6_input = decoder.as(tmp0_desc);
    if (tmp6_input.bn()) {
      tmp4_local0 = tmp6_input.en(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.dn(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.en(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.dn(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.an(tmp0_desc);
    return S2StateValue_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  $serializer_9.prototype.v15 = function (encoder, value) {
    var tmp0_desc = this.u15_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.jn(tmp0_desc, 0, value.name);
    tmp1_output.in(tmp0_desc, 1, value.position);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_9.prototype.cs = function (encoder, value) {
    return this.v15(encoder, value instanceof S2StateValue ? value : THROW_CCE());
  };
  var $serializer_instance_7;
  function $serializer_getInstance_7() {
    if ($serializer_instance_7 == null)
      new $serializer_9();
    return $serializer_instance_7;
  }
  function S2StateValue_init_$Init$(seen1, name, position, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1))) {
      throwMissingFieldException(seen1, 3, $serializer_getInstance_7().u15_1);
    }
    $this.name = name;
    $this.position = position;
    return $this;
  }
  function S2StateValue_init_$Create$(seen1, name, position, serializationConstructorMarker) {
    return S2StateValue_init_$Init$(seen1, name, position, serializationConstructorMarker, Object.create(S2StateValue.prototype));
  }
  function S2StateValue(name, position) {
    Companion_getInstance_27();
    this.name = name;
    this.position = position;
  }
  S2StateValue.prototype.ta = function () {
    return this.name;
  };
  S2StateValue.prototype.s14 = function () {
    return this.position;
  };
  function toValue(_this__u8e3s4) {
    return new S2TransitionValue(ensureNotNull(_this__u8e3s4.c9()));
  }
  function toValue_0(_this__u8e3s4) {
    return new S2StateValue(ensureNotNull(getKClassFromExpression(_this__u8e3s4).c9()), _this__u8e3s4.position);
  }
  function toValue_1(_this__u8e3s4) {
    return new S2RoleValue(ensureNotNull(getKClassFromExpression(_this__u8e3s4).c9()));
  }
  function WithId() {
  }
  function s2(exec) {
    var builder = new S2AutomateBuilder();
    exec(builder);
    var tmp = builder.ta();
    var tmp_0 = builder.x15_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray = builder.y15_1;
    tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    return new S2Automate(tmp, tmp_0, tmp$ret$0);
  }
  function S2AutomateBuilder() {
    this.x15_1 = null;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    tmp.y15_1 = tmp$ret$0;
  }
  S2AutomateBuilder.prototype.ta = function () {
    var tmp = this.w15_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('name');
    }
  };
  function s2Sourcing(exec) {
    var builder = new S2SourcingAutomateBuilder();
    exec(builder);
    var tmp = builder.ta();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray = builder.b16_1;
    tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    return new S2Automate(tmp, builder.a16_1, tmp$ret$0);
  }
  function S2SourcingAutomateBuilder() {
    this.a16_1 = null;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    tmp.b16_1 = tmp$ret$0;
  }
  S2SourcingAutomateBuilder.prototype.ta = function () {
    var tmp = this.z15_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('name');
    }
  };
  function S2InitTransitionBuilder() {
    this.e16_1 = null;
  }
  S2InitTransitionBuilder.prototype.q12 = function () {
    var tmp = this.c16_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('to');
    }
  };
  S2InitTransitionBuilder.prototype.yy = function () {
    var tmp = this.d16_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('role');
    }
  };
  function S2TransitionBuilder() {
    this.f16_1 = null;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    tmp.g16_1 = tmp$ret$0;
    this.j16_1 = null;
  }
  S2TransitionBuilder.prototype.q12 = function () {
    var tmp = this.h16_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('to');
    }
  };
  S2TransitionBuilder.prototype.yy = function () {
    var tmp = this.i16_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('role');
    }
  };
  function S2SelfTransitionBuilder() {
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    tmp.k16_1 = tmp$ret$0;
    this.m16_1 = null;
  }
  S2SelfTransitionBuilder.prototype.yy = function () {
    var tmp = this.l16_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('role');
    }
  };
  function isAvailableTransition(_this__u8e3s4, state, type) {
    return !(state == null) ? isAvailableTransition_0(_this__u8e3s4, state.s2State(), type) : false;
  }
  function isAvailableTransition_0(_this__u8e3s4, currentState, type) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = _this__u8e3s4.getAvailableTransitions(currentState);
      var indexedObject = tmp0_any;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 's2.dsl.automate.extention.isAvailableTransition.<anonymous>' call
        var tmp;
        var tmp0_safe_receiver = element.result;
        if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.name) === type) {
          tmp = true;
        } else {
          tmp = element.action.name === type;
        }
        tmp$ret$0 = tmp;
        if (tmp$ret$0) {
          tmp$ret$1 = true;
          break $l$block;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function WithS2Id() {
  }
  function WithS2IdAndStatus() {
  }
  function WithS2State() {
  }
  function Decide() {
  }
  function Creator() {
  }
  function CommonBigNumberOperations() {
  }
  var SignificantDecider_FIVE_instance;
  var SignificantDecider_LESS_THAN_FIVE_instance;
  var SignificantDecider_MORE_THAN_FIVE_instance;
  var SignificantDecider_entriesInitialized;
  function SignificantDecider_initEntries() {
    if (SignificantDecider_entriesInitialized)
      return Unit_getInstance();
    SignificantDecider_entriesInitialized = true;
    SignificantDecider_FIVE_instance = new SignificantDecider('FIVE', 0);
    SignificantDecider_LESS_THAN_FIVE_instance = new SignificantDecider('LESS_THAN_FIVE', 1);
    SignificantDecider_MORE_THAN_FIVE_instance = new SignificantDecider('MORE_THAN_FIVE', 2);
  }
  function roundOrDont($this, significand, exponent, decimalMode) {
    var tmp;
    if (decimalMode.n17_1) {
      tmp = BigDecimal_init_$Create$(significand, exponent, null, 4, null);
    } else {
      tmp = roundSignificand($this, significand, exponent, decimalMode);
    }
    return tmp;
  }
  function SignificantDecider(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function determineDecider($this, discarded) {
    var tmp = Companion_getInstance_30().t17_1;
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = discarded.z17();
    tmp$ret$0 = tmp0_minus.c4(new Long(1, 0));
    var scale = tmp.a18(tmp$ret$0);
    var divrem = discarded.b18(scale);
    var significant = divrem.c18_1.e18().f18(true);
    var rest = divrem.d18_1.e18();
    var tmp_0;
    if (significant === 5) {
      var tmp_1;
      if (rest.equals(Companion_getInstance_30().q17_1)) {
        tmp_1 = SignificantDecider_FIVE_getInstance();
      } else {
        tmp_1 = SignificantDecider_MORE_THAN_FIVE_getInstance();
      }
      tmp_0 = tmp_1;
    } else if (significant > 5) {
      tmp_0 = SignificantDecider_MORE_THAN_FIVE_getInstance();
    } else if (significant < 5) {
      tmp_0 = SignificantDecider_LESS_THAN_FIVE_getInstance();
    } else {
      throw RuntimeException_init_$Create$("Couldn't determine decider");
    }
    return tmp_0;
  }
  function roundDiscarded($this, significand, discarded, decimalMode) {
    var toDiscard = significand.z17().c4(decimalMode.k17_1);
    var tmp;
    if (toDiscard.z3(new Long(0, 0)) > 0) {
      var additionallyDiscarded = significand.b18(Companion_getInstance_30().t17_1.a18(toDiscard));
      tmp = new Pair(additionallyDiscarded.c18_1, additionallyDiscarded.d18_1);
    } else {
      tmp = new Pair(significand, discarded);
    }
    var tmp0_container = tmp;
    var result = tmp0_container.o2();
    var remainder = tmp0_container.p2();
    var tmp_0;
    if (significand.equals(Companion_getInstance_30().q17_1)) {
      tmp_0 = discarded.w17_1;
    } else {
      tmp_0 = significand.w17_1;
    }
    var sign = tmp_0;
    if (!decimalMode.l17_1.equals(RoundingMode_AWAY_FROM_ZERO_getInstance()) ? !decimalMode.l17_1.equals(RoundingMode_TOWARDS_ZERO_getInstance()) : false) {
      if (remainder.g18()) {
        return result;
      }
    } else {
      if (remainder.g18() ? discarded.g18() : false) {
        return result;
      }
    }
    var decider = determineDecider($this, remainder);
    var tmp1_subject = decimalMode.l17_1;
    var tmp0 = tmp1_subject.k3_1;
    switch (tmp0) {
      case 2:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
          var tmp2 = result;
          result = tmp2.eb();
        } else {
          var tmp3 = result;
          result = tmp3.fb();
        }

        break;
      case 3:
        ;
        break;
      case 1:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
          var tmp4 = result;
          result = tmp4.eb();
        } else {
        }

        break;
      case 0:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
        } else {
          var tmp5 = result;
          result = tmp5.fb();
        }

        break;
      case 5:
        var tmp6_subject = sign;
        var tmp0_0 = tmp6_subject.k3_1;
        switch (tmp0_0) {
          case 0:
            if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
              var tmp7 = result;
              result = tmp7.eb();
            }

            break;
          case 1:
            if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
              var tmp8 = result;
              result = tmp8.fb();
            }

            break;
          case 2:
            break;
        }

        break;
      case 6:
        var tmp9_subject = sign;
        var tmp0_1 = tmp9_subject.k3_1;
        switch (tmp0_1) {
          case 0:
            if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
              var tmp10 = result;
              result = tmp10.eb();
            }

            break;
          case 1:
            if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
              var tmp11 = result;
              result = tmp11.fb();
            }

            break;
          case 2:
            break;
        }

        break;
      case 7:
        var tmp12_subject = sign;
        var tmp0_2 = tmp12_subject.k3_1;
        switch (tmp0_2) {
          case 0:
            if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
              var tmp13 = result;
              result = tmp13.eb();
            }

            break;
          case 1:
            if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
              var tmp14 = result;
              result = tmp14.fb();
            }

            break;
          case 2:
            break;
        }

        break;
      case 8:
        var tmp15_subject = sign;
        var tmp0_3 = tmp15_subject.k3_1;
        switch (tmp0_3) {
          case 0:
            if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
              var tmp16 = result;
              result = tmp16.eb();
            }

            break;
          case 1:
            if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
              var tmp17 = result;
              result = tmp17.fb();
            }

            break;
          case 2:
            break;
        }

        break;
      case 9:
        if (decider.equals(SignificantDecider_FIVE_getInstance())) {
          if (significand.i17(2).equals(Companion_getInstance_30().r17_1)) {
            var tmp18_subject = sign;
            var tmp0_4 = tmp18_subject.k3_1;
            switch (tmp0_4) {
              case 0:
                if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
                  var tmp19 = result;
                  result = tmp19.eb();
                }

                break;
              case 1:
                if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
                  var tmp20 = result;
                  result = tmp20.fb();
                }

                break;
              case 2:
                break;
            }
          } else {
            var tmp21_subject = sign;
            var tmp0_5 = tmp21_subject.k3_1;
            switch (tmp0_5) {
              case 0:
                if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
                  var tmp22 = result;
                  result = tmp22.eb();
                }

                break;
              case 1:
                if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
                  var tmp23 = result;
                  result = tmp23.fb();
                }

                break;
              case 2:
                break;
            }
          }
        } else if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
          if (sign.equals(Sign_POSITIVE_getInstance())) {
            var tmp24 = result;
            result = tmp24.eb();
          }
          if (sign.equals(Sign_NEGATIVE_getInstance())) {
            var tmp25 = result;
            result = tmp25.fb();
          }
        }

        break;
      case 10:
        if (decider.equals(SignificantDecider_FIVE_getInstance())) {
          if (significand.i17(2).equals(Companion_getInstance_30().q17_1)) {
            var tmp26_subject = sign;
            var tmp0_6 = tmp26_subject.k3_1;
            switch (tmp0_6) {
              case 0:
                if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
                  var tmp27 = result;
                  result = tmp27.eb();
                }

                break;
              case 1:
                if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
                  var tmp28 = result;
                  result = tmp28.fb();
                }

                break;
              case 2:
                break;
            }
          } else {
            var tmp29_subject = sign;
            var tmp0_7 = tmp29_subject.k3_1;
            switch (tmp0_7) {
              case 0:
                if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
                  var tmp30 = result;
                  result = tmp30.eb();
                }

                break;
              case 1:
                if (!decider.equals(SignificantDecider_LESS_THAN_FIVE_getInstance())) {
                  var tmp31 = result;
                  result = tmp31.fb();
                }

                break;
              case 2:
                break;
            }
          }
        } else if (decider.equals(SignificantDecider_MORE_THAN_FIVE_getInstance())) {
          if (sign.equals(Sign_POSITIVE_getInstance())) {
            var tmp32 = result;
            result = tmp32.eb();
          }
          if (sign.equals(Sign_NEGATIVE_getInstance())) {
            var tmp33 = result;
            result = tmp33.fb();
          }
        }

        break;
      case 4:
        throw ArithmeticException_init_$Create$('Non-terminating result of division operation. Specify decimalPrecision');
    }
    return result;
  }
  function roundSignificand($this, significand, exponent, decimalMode) {
    if (significand.equals(Companion_getInstance_30().q17_1)) {
      return new BigDecimal(Companion_getInstance_30().q17_1, exponent, decimalMode);
    }
    var significandDigits = significand.z17();
    var tmp;
    if (decimalMode.o17_1) {
      tmp = decimalMode.k17_1.b4(decimalMode.m17_1);
    } else {
      tmp = decimalMode.k17_1;
    }
    var desiredPrecision = tmp;
    var tmp_0;
    if (desiredPrecision.z3(significandDigits) > 0) {
      var extendedSignificand = significand.a17(Companion_getInstance_30().t17_1.a18(desiredPrecision.c4(significandDigits)));
      tmp_0 = new BigDecimal(extendedSignificand, exponent, decimalMode);
    } else if (desiredPrecision.z3(significandDigits) < 0) {
      var divRem = significand.b18(Companion_getInstance_30().t17_1.a18(significandDigits.c4(desiredPrecision)));
      var resolvedRemainder = divRem.d18_1;
      if (divRem.d18_1.equals(Companion_getInstance_30().q17_1)) {
        return new BigDecimal(divRem.c18_1, exponent, decimalMode);
      }
      var tmp_1;
      if (significand.z17().equals(divRem.c18_1.z17().b4(divRem.d18_1.z17()))) {
        var newSignificand = roundDiscarded($this, divRem.c18_1, resolvedRemainder, decimalMode);
        var exponentModifier = newSignificand.z17().c4(divRem.c18_1.z17());
        tmp_1 = new BigDecimal(newSignificand, exponent.b4(exponentModifier), decimalMode);
      } else {
        tmp_1 = $this.s18(divRem.c18_1, exponent, decimalMode);
      }
      tmp_0 = tmp_1;
    } else {
      tmp_0 = new BigDecimal(significand, exponent, decimalMode);
    }
    return tmp_0;
  }
  function applyScale($this, significand, exponent, decimalMode) {
    if (!decimalMode.o17_1) {
      return new BigDecimal(significand, exponent, decimalMode);
    }
    var tmp;
    if (exponent.z3(new Long(0, 0)) >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      var tmp0_plus = exponent.b4(decimalMode.m17_1);
      tmp$ret$0 = tmp0_plus.b4(new Long(1, 0));
      var tmp_0 = tmp$ret$0;
      tmp = DecimalMode_init_$Create$(tmp_0, decimalMode.l17_1, new Long(0, 0), 4, null);
    } else if (exponent.z3(new Long(0, 0)) < 0) {
      var tmp$ret$1;
      // Inline function 'kotlin.Long.plus' call
      var tmp1_plus = decimalMode.m17_1;
      tmp$ret$1 = tmp1_plus.b4(new Long(1, 0));
      var tmp_1 = tmp$ret$1;
      tmp = DecimalMode_init_$Create$(tmp_1, decimalMode.l17_1, new Long(0, 0), 4, null);
    } else {
      throw RuntimeException_init_$Create$('Unexpected state');
    }
    var workMode = tmp;
    var tmp_2;
    if (exponent.z3(new Long(0, 0)) >= 0) {
      tmp_2 = roundSignificand($this, significand, exponent, workMode);
    } else {
      var temp = BigDecimal_init_$Create$(significand, exponent, null, 4, null).e17(significand.t18());
      tmp_2 = roundSignificand($this, temp.v18_1, temp.w18_1, workMode).g17(significand.t18());
    }
    return tmp_2;
  }
  function resolveDecimalMode($this, firstDecimalMode, secondDecimalMode, suppliedDecimalMode) {
    var tmp;
    if (!(suppliedDecimalMode == null)) {
      tmp = suppliedDecimalMode;
    } else {
      if (firstDecimalMode == null ? secondDecimalMode == null : false) {
        var tmp_0 = new Long(0, 0);
        return DecimalMode_init_$Create$(tmp_0, null, new Long(0, 0), 7, null);
      }
      if (firstDecimalMode == null ? !(secondDecimalMode == null) : false) {
        return secondDecimalMode;
      }
      if (secondDecimalMode == null ? !(firstDecimalMode == null) : false) {
        return firstDecimalMode;
      }
      if (!ensureNotNull(firstDecimalMode).l17_1.equals(ensureNotNull(secondDecimalMode).l17_1)) {
        throw ArithmeticException_init_$Create$('Different rounding modes! This: ' + firstDecimalMode.l17_1 + ' Other: ' + secondDecimalMode.l17_1);
      }
      var tmp_1;
      if (firstDecimalMode.k17_1.z3(secondDecimalMode.k17_1) >= 0) {
        tmp_1 = firstDecimalMode;
      } else {
        tmp_1 = secondDecimalMode;
      }
      var unifiedDecimalMode = tmp_1;
      tmp = unifiedDecimalMode;
    }
    return tmp;
  }
  function SignificantDecider_FIVE_getInstance() {
    SignificantDecider_initEntries();
    return SignificantDecider_FIVE_instance;
  }
  function SignificantDecider_LESS_THAN_FIVE_getInstance() {
    SignificantDecider_initEntries();
    return SignificantDecider_LESS_THAN_FIVE_instance;
  }
  function SignificantDecider_MORE_THAN_FIVE_getInstance() {
    SignificantDecider_initEntries();
    return SignificantDecider_MORE_THAN_FIVE_instance;
  }
  var ScaleOps_Max_instance;
  var ScaleOps_Min_instance;
  var ScaleOps_Add_instance;
  var ScaleOps_entriesInitialized;
  function ScaleOps_initEntries() {
    if (ScaleOps_entriesInitialized)
      return Unit_getInstance();
    ScaleOps_entriesInitialized = true;
    ScaleOps_Max_instance = new ScaleOps('Max', 0);
    ScaleOps_Min_instance = new ScaleOps('Min', 1);
    ScaleOps_Add_instance = new ScaleOps('Add', 2);
  }
  function BigDecimal_init_$Init$(_significand, _exponent, _decimalMode, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      _exponent = new Long(0, 0);
    if (!(($mask0 & 4) === 0))
      _decimalMode = null;
    BigDecimal.call($this, _significand, _exponent, _decimalMode);
    return $this;
  }
  function BigDecimal_init_$Create$(_significand, _exponent, _decimalMode, $mask0, $marker) {
    return BigDecimal_init_$Init$(_significand, _exponent, _decimalMode, $mask0, $marker, Object.create(BigDecimal.prototype));
  }
  function Companion_28() {
    Companion_instance_28 = this;
    var tmp = this;
    var tmp_0 = Companion_getInstance_30().q17_1;
    var tmp_1 = new Long(0, 0);
    tmp.h18_1 = BigDecimal_init_$Create$(tmp_0, tmp_1, null, 6, null);
    var tmp_2 = this;
    var tmp_3 = Companion_getInstance_30().r17_1;
    var tmp_4 = new Long(0, 0);
    tmp_2.i18_1 = BigDecimal_init_$Create$(tmp_3, tmp_4, null, 6, null);
    var tmp_5 = this;
    var tmp_6 = Companion_getInstance_30().s17_1;
    var tmp_7 = new Long(0, 0);
    tmp_5.j18_1 = BigDecimal_init_$Create$(tmp_6, tmp_7, null, 6, null);
    var tmp_8 = this;
    var tmp_9 = Companion_getInstance_30().t17_1;
    var tmp_10 = new Long(1, 0);
    tmp_8.k18_1 = BigDecimal_init_$Create$(tmp_9, tmp_10, null, 4, null);
    this.l18_1 = false;
    var tmp_11 = this;
    var tmp$ret$0;
    // Inline function 'kotlin.doubleArrayOf' call
    tmp$ret$0 = new Float64Array([1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 1.0E7, 1.0E8, 1.0E9, 1.0E10, 1.0E11, 1.0E12, 1.0E13, 1.0E14, 1.0E15, 1.0E16, 1.0E17, 1.0E18, 1.0E19, 1.0E20, 1.0E21, 1.0E22]);
    tmp_11.m18_1 = tmp$ret$0;
    var tmp_12 = this;
    DoubleCompanionObject_getInstance();
    tmp_12.n18_1 = this.c19(1.7976931348623157E308, null, 2, null);
    var tmp_13 = this;
    DoubleCompanionObject_getInstance();
    tmp_13.o18_1 = this.c19(4.9E-324, null, 2, null);
    var tmp_14 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.floatArrayOf' call
    tmp$ret$1 = new Float32Array([1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 1.0E7, 1.0E8, 1.0E9, 1.0E10]);
    tmp_14.p18_1 = tmp$ret$1;
    var tmp_15 = this;
    FloatCompanionObject_getInstance();
    tmp_15.q18_1 = this.d19(3.4028235E38, null, 2, null);
    var tmp_16 = this;
    FloatCompanionObject_getInstance();
    tmp_16.r18_1 = this.d19(1.4E-45, null, 2, null);
  }
  Companion_28.prototype.s18 = function (significand, exponent, decimalMode) {
    var tmp;
    if (significand.w17_1.equals(Sign_POSITIVE_getInstance())) {
      var tmp0_subject = decimalMode.l17_1;
      var tmp0 = tmp0_subject.k3_1;
      var tmp_0;
      switch (tmp0) {
        case 1:
        case 2:
          var increasedSignificand = significand.eb();
          var exponentModifier = increasedSignificand.z17().c4(significand.z17());
          tmp_0 = new BigDecimal(increasedSignificand, exponent.b4(exponentModifier), decimalMode);
          break;
        default:
          tmp_0 = new BigDecimal(significand, exponent, decimalMode);
          break;
      }
      tmp = tmp_0;
    } else if (significand.w17_1.equals(Sign_NEGATIVE_getInstance())) {
      var tmp1_subject = decimalMode.l17_1;
      var tmp0_0 = tmp1_subject.k3_1;
      var tmp_1;
      switch (tmp0_0) {
        case 0:
        case 2:
          var increasedSignificand_0 = significand.fb();
          var exponentModifier_0 = increasedSignificand_0.z17().c4(significand.z17());
          tmp_1 = new BigDecimal(increasedSignificand_0, exponent.b4(exponentModifier_0), decimalMode);
          break;
        default:
          tmp_1 = new BigDecimal(significand, exponent, decimalMode);
          break;
      }
      tmp = tmp_1;
    } else {
      tmp = new BigDecimal(significand, exponent, decimalMode);
    }
    return tmp;
  };
  Companion_28.prototype.e19 = function (long, decimalMode) {
    var bigint = Companion_getInstance_30().f19(long);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.z17();
    tmp$ret$0 = tmp0_minus.c4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).g19(decimalMode);
  };
  Companion_28.prototype.h19 = function (int, decimalMode) {
    var bigint = Companion_getInstance_30().p16(int);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.z17();
    tmp$ret$0 = tmp0_minus.c4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).g19(decimalMode);
  };
  Companion_28.prototype.i19 = function (short, decimalMode) {
    var bigint = Companion_getInstance_30().j19(short);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.z17();
    tmp$ret$0 = tmp0_minus.c4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).g19(decimalMode);
  };
  Companion_28.prototype.k19 = function (byte, decimalMode) {
    var bigint = Companion_getInstance_30().l19(byte);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.z17();
    tmp$ret$0 = tmp0_minus.c4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).g19(decimalMode);
  };
  Companion_28.prototype.m19 = function (float, decimalMode) {
    var floatString = float.toString();
    var tmp;
    var tmp_0;
    var tmp_1 = _Char___init__impl__6a9atx(46);
    if (contains$default(floatString, tmp_1, false, 2, null)) {
      tmp_0 = !contains_3(floatString, _Char___init__impl__6a9atx(69), true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.dropLastWhile' call
        var inductionVariable = get_lastIndex_1(floatString);
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var tmp$ret$0;
            // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.fromFloat.<anonymous>' call
            var tmp0__anonymous__q1qw7t = charSequenceGet(floatString, index);
            tmp$ret$0 = equals_0(new Char(tmp0__anonymous__q1qw7t), new Char(_Char___init__impl__6a9atx(48)));
            if (!tmp$ret$0) {
              var tmp$ret$2;
              // Inline function 'kotlin.text.substring' call
              var tmp0_substring = index + 1 | 0;
              var tmp$ret$1;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$1 = floatString;
              tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
              tmp$ret$3 = tmp$ret$2;
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$3 = '';
      }
      tmp = this.n19(tmp$ret$3, decimalMode).g19(decimalMode);
    } else {
      tmp = this.n19(floatString, decimalMode).g19(decimalMode);
    }
    return tmp;
  };
  Companion_28.prototype.d19 = function (float, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return this.m19(float, decimalMode);
  };
  Companion_28.prototype.o19 = function (double, decimalMode) {
    var doubleString = double.toString();
    var tmp;
    var tmp_0;
    var tmp_1 = _Char___init__impl__6a9atx(46);
    if (contains$default(doubleString, tmp_1, false, 2, null)) {
      tmp_0 = !contains_3(doubleString, _Char___init__impl__6a9atx(69), true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.dropLastWhile' call
        var inductionVariable = get_lastIndex_1(doubleString);
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var tmp$ret$0;
            // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.fromDouble.<anonymous>' call
            var tmp0__anonymous__q1qw7t = charSequenceGet(doubleString, index);
            tmp$ret$0 = equals_0(new Char(tmp0__anonymous__q1qw7t), new Char(_Char___init__impl__6a9atx(48)));
            if (!tmp$ret$0) {
              var tmp$ret$2;
              // Inline function 'kotlin.text.substring' call
              var tmp0_substring = index + 1 | 0;
              var tmp$ret$1;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$1 = doubleString;
              tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
              tmp$ret$3 = tmp$ret$2;
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$3 = '';
      }
      tmp = this.n19(tmp$ret$3, decimalMode).g19(decimalMode);
    } else {
      tmp = this.n19(doubleString, decimalMode).g19(decimalMode).g19(decimalMode);
    }
    return tmp;
  };
  Companion_28.prototype.c19 = function (double, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return this.o19(double, decimalMode);
  };
  Companion_28.prototype.f19 = function (long) {
    return this.e19(long, null);
  };
  Companion_28.prototype.p16 = function (int) {
    return this.h19(int, null);
  };
  Companion_28.prototype.j19 = function (short) {
    return this.i19(short, null);
  };
  Companion_28.prototype.l19 = function (byte) {
    return this.k19(byte, null);
  };
  Companion_28.prototype.q16 = function (float, exactRequired) {
    return this.m19(float, null);
  };
  Companion_28.prototype.s16 = function (double, exactRequired) {
    return this.o19(double, null);
  };
  Companion_28.prototype.n16 = function (string, base) {
    return this.n19(string, null);
  };
  Companion_28.prototype.p19 = function (string) {
    return this.q19(string, null, 2, null);
  };
  Companion_28.prototype.n19 = function (floatingPointString, decimalMode) {
    var tmp$ret$0;
    // Inline function 'kotlin.text.isEmpty' call
    tmp$ret$0 = charSequenceLength(floatingPointString) === 0;
    if (tmp$ret$0) {
      throw ArithmeticException_init_$Create$('Empty string is not a valid decimal number');
    }
    if (contains_3(floatingPointString, _Char___init__impl__6a9atx(69), true)) {
      var tmp;
      var tmp_0 = _Char___init__impl__6a9atx(46);
      if (!contains$default(floatingPointString, tmp_0, false, 2, null)) {
        var tmp_1 = charArrayOf([_Char___init__impl__6a9atx(69), _Char___init__impl__6a9atx(101)]);
        var splitAroundE = split$default_0(floatingPointString, tmp_1, false, 0, 6, null);
        tmp = listOf([splitAroundE.l(0), '0E' + splitAroundE.l(1)]);
      } else {
        var tmp_2 = charArrayOf([_Char___init__impl__6a9atx(46)]);
        tmp = split$default_0(floatingPointString, tmp_2, false, 0, 6, null);
      }
      var split = tmp;
      var tmp0_subject = split.f();
      if (tmp0_subject === 2) {
        var signPresent = equals_0(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals_0(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(43)));
        var tmp_3;
        if (signPresent) {
          tmp_3 = 1;
        } else {
          tmp_3 = 0;
        }
        var leftStart = tmp_3;
        var tmp_4;
        if (signPresent) {
          var tmp_5;
          if (equals_0(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
            tmp_5 = Sign_NEGATIVE_getInstance();
          } else {
            tmp_5 = Sign_POSITIVE_getInstance();
          }
          tmp_4 = tmp_5;
        } else {
          tmp_4 = Sign_POSITIVE_getInstance();
        }
        var sign = tmp_4;
        var tmp$ret$2;
        // Inline function 'kotlin.text.substring' call
        var tmp0_substring = split.l(0);
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_substring;
        tmp$ret$2 = tmp$ret$1.substring(leftStart);
        var left = tmp$ret$2;
        var tmp_6 = split.l(1);
        var tmp_7 = charArrayOf([_Char___init__impl__6a9atx(69), _Char___init__impl__6a9atx(101)]);
        var rightSplit = split$default_0(tmp_6, tmp_7, false, 0, 6, null);
        var right = rightSplit.l(0);
        var exponentSplit = rightSplit.l(1);
        var exponentSignPresent = equals_0(new Char(charSequenceGet(exponentSplit, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals_0(new Char(charSequenceGet(exponentSplit, 0)), new Char(_Char___init__impl__6a9atx(43)));
        var tmp_8;
        if (equals_0(new Char(charSequenceGet(exponentSplit, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
          tmp_8 = Sign_NEGATIVE_getInstance();
        } else {
          tmp_8 = Sign_POSITIVE_getInstance();
        }
        var exponentSign = tmp_8;
        var tmp_9;
        if (exponentSignPresent) {
          tmp_9 = 1;
        } else {
          tmp_9 = 0;
        }
        var skipSignIfPresent = tmp_9;
        var tmp$ret$4;
        // Inline function 'kotlin.text.substring' call
        var tmp$ret$3;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$3 = exponentSplit;
        tmp$ret$4 = tmp$ret$3.substring(skipSignIfPresent);
        var exponentString = tmp$ret$4;
        var tmp_10;
        if (exponentSign.equals(Sign_POSITIVE_getInstance())) {
          tmp_10 = toLong(exponentString, 10);
        } else {
          var tmp$ret$5;
          // Inline function 'kotlin.Long.times' call
          var tmp1_times = toLong(exponentString, 10);
          tmp$ret$5 = tmp1_times.a4(new Long(-1, -1));
          tmp_10 = tmp$ret$5;
        }
        var exponent = tmp_10;
        var tmp$ret$7;
        $l$block: {
          // Inline function 'kotlin.text.indexOfFirst' call
          var inductionVariable = 0;
          var last = charSequenceLength(left) - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp$ret$6;
              // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
              var tmp2__anonymous__z9zvc9 = charSequenceGet(left, index);
              tmp$ret$6 = !equals_0(new Char(tmp2__anonymous__z9zvc9), new Char(_Char___init__impl__6a9atx(48)));
              if (tmp$ret$6) {
                tmp$ret$7 = index;
                break $l$block;
              }
            }
             while (inductionVariable <= last);
          tmp$ret$7 = -1;
        }
        var leftFirstNonZero = tmp$ret$7;
        if (leftFirstNonZero === -1) {
          leftFirstNonZero = 0;
        }
        var tmp$ret$9;
        $l$block_0: {
          // Inline function 'kotlin.text.indexOfLast' call
          var inductionVariable_0 = charSequenceLength(right) - 1 | 0;
          if (0 <= inductionVariable_0)
            do {
              var index_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + -1 | 0;
              var tmp$ret$8;
              // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
              var tmp3__anonymous__ufb84q = charSequenceGet(right, index_0);
              tmp$ret$8 = !equals_0(new Char(tmp3__anonymous__ufb84q), new Char(_Char___init__impl__6a9atx(48)));
              if (tmp$ret$8) {
                tmp$ret$9 = index_0;
                break $l$block_0;
              }
            }
             while (0 <= inductionVariable_0);
          tmp$ret$9 = -1;
        }
        var rightLastNonZero = tmp$ret$9;
        if (rightLastNonZero === -1) {
          rightLastNonZero = right.length - 1 | 0;
        }
        var tmp$ret$11;
        // Inline function 'kotlin.text.substring' call
        var tmp4_substring = leftFirstNonZero;
        var tmp5_substring = left.length;
        var tmp$ret$10;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$10 = left;
        tmp$ret$11 = tmp$ret$10.substring(tmp4_substring, tmp5_substring);
        var leftTruncated = tmp$ret$11;
        var tmp$ret$13;
        // Inline function 'kotlin.text.substring' call
        var tmp6_substring = rightLastNonZero + 1 | 0;
        var tmp$ret$12;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$12 = right;
        tmp$ret$13 = tmp$ret$12.substring(0, tmp6_substring);
        var rightTruncated = tmp$ret$13;
        var significand = Companion_getInstance_30().n16(leftTruncated + rightTruncated, 10);
        if (significand.equals(Companion_getInstance_30().q17_1)) {
          sign = Sign_ZERO_getInstance();
        }
        if (sign.equals(Sign_NEGATIVE_getInstance())) {
          significand = significand.r19();
        }
        var tmp_11;
        if (!(leftTruncated === '0')) {
          var tmp$ret$15;
          // Inline function 'kotlin.Long.minus' call
          var tmp$ret$14;
          // Inline function 'kotlin.Long.plus' call
          var tmp7_plus = leftTruncated.length;
          tmp$ret$14 = exponent.b4(toLong_0(tmp7_plus));
          var tmp8_minus = tmp$ret$14;
          tmp$ret$15 = tmp8_minus.c4(new Long(1, 0));
          tmp_11 = tmp$ret$15;
        } else {
          var tmp$ret$16;
          // Inline function 'kotlin.Long.minus' call
          var tmp9_minus = exponent.c4(numberToLong(rightTruncated.length).c4(significand.z17()));
          tmp$ret$16 = tmp9_minus.c4(new Long(1, 0));
          tmp_11 = tmp$ret$16;
        }
        var exponentModifiedByFloatingPointPosition = tmp_11;
        return new BigDecimal(significand, exponentModifiedByFloatingPointPosition, decimalMode);
      } else
        throw ArithmeticException_init_$Create$('Invalid (or unsupported) floating point number format: ' + floatingPointString);
    } else {
      var tmp_12 = _Char___init__impl__6a9atx(46);
      if (contains$default(floatingPointString, tmp_12, false, 2, null)) {
        var tmp_13 = charArrayOf([_Char___init__impl__6a9atx(46)]);
        var split_0 = split$default_0(floatingPointString, tmp_13, false, 0, 6, null);
        var tmp1_subject = split_0.f();
        if (tmp1_subject === 2) {
          var signPresent_0 = equals_0(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals_0(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(43)));
          var tmp_14;
          if (signPresent_0) {
            tmp_14 = 1;
          } else {
            tmp_14 = 0;
          }
          var leftStart_0 = tmp_14;
          var tmp_15;
          if (signPresent_0) {
            var tmp_16;
            if (equals_0(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
              tmp_16 = Sign_NEGATIVE_getInstance();
            } else {
              tmp_16 = Sign_POSITIVE_getInstance();
            }
            tmp_15 = tmp_16;
          } else {
            tmp_15 = Sign_POSITIVE_getInstance();
          }
          var sign_0 = tmp_15;
          var tmp$ret$18;
          // Inline function 'kotlin.text.substring' call
          var tmp10_substring = split_0.l(0);
          var tmp$ret$17;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$17 = tmp10_substring;
          tmp$ret$18 = tmp$ret$17.substring(leftStart_0);
          var left_0 = tmp$ret$18;
          var right_0 = split_0.l(1);
          var tmp$ret$20;
          $l$block_1: {
            // Inline function 'kotlin.text.indexOfFirst' call
            var inductionVariable_1 = 0;
            var last_0 = charSequenceLength(left_0) - 1 | 0;
            if (inductionVariable_1 <= last_0)
              do {
                var index_1 = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                var tmp$ret$19;
                // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                var tmp11__anonymous__tkubxh = charSequenceGet(left_0, index_1);
                tmp$ret$19 = !equals_0(new Char(tmp11__anonymous__tkubxh), new Char(_Char___init__impl__6a9atx(48)));
                if (tmp$ret$19) {
                  tmp$ret$20 = index_1;
                  break $l$block_1;
                }
              }
               while (inductionVariable_1 <= last_0);
            tmp$ret$20 = -1;
          }
          var leftFirstNonZero_0 = tmp$ret$20;
          if (leftFirstNonZero_0 === -1) {
            leftFirstNonZero_0 = 0;
          }
          var tmp$ret$22;
          $l$block_2: {
            // Inline function 'kotlin.text.indexOfLast' call
            var inductionVariable_2 = charSequenceLength(right_0) - 1 | 0;
            if (0 <= inductionVariable_2)
              do {
                var index_2 = inductionVariable_2;
                inductionVariable_2 = inductionVariable_2 + -1 | 0;
                var tmp$ret$21;
                // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                var tmp12__anonymous__oq5opy = charSequenceGet(right_0, index_2);
                tmp$ret$21 = !equals_0(new Char(tmp12__anonymous__oq5opy), new Char(_Char___init__impl__6a9atx(48)));
                if (tmp$ret$21) {
                  tmp$ret$22 = index_2;
                  break $l$block_2;
                }
              }
               while (0 <= inductionVariable_2);
            tmp$ret$22 = -1;
          }
          var rightLastNonZero_0 = tmp$ret$22;
          if (rightLastNonZero_0 === -1) {
            rightLastNonZero_0 = right_0.length - 1 | 0;
          }
          var tmp$ret$24;
          // Inline function 'kotlin.text.substring' call
          var tmp13_substring = leftFirstNonZero_0;
          var tmp14_substring = left_0.length;
          var tmp$ret$23;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$23 = left_0;
          tmp$ret$24 = tmp$ret$23.substring(tmp13_substring, tmp14_substring);
          var leftTruncated_0 = tmp$ret$24;
          var tmp$ret$26;
          // Inline function 'kotlin.text.substring' call
          var tmp15_substring = rightLastNonZero_0 + 1 | 0;
          var tmp$ret$25;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$25 = right_0;
          tmp$ret$26 = tmp$ret$25.substring(0, tmp15_substring);
          var rightTruncated_0 = tmp$ret$26;
          var significand_0 = Companion_getInstance_30().n16(leftTruncated_0 + rightTruncated_0, 10);
          var tmp_17;
          var tmp_18;
          var tmp$ret$27;
          // Inline function 'kotlin.text.isNotEmpty' call
          tmp$ret$27 = charSequenceLength(leftTruncated_0) > 0;
          if (tmp$ret$27) {
            tmp_18 = !equals_0(new Char(charSequenceGet(leftTruncated_0, 0)), new Char(_Char___init__impl__6a9atx(48)));
          } else {
            tmp_18 = false;
          }
          if (tmp_18) {
            tmp_17 = leftTruncated_0.length - 1 | 0;
          } else {
            var tmp$ret$29;
            $l$block_3: {
              // Inline function 'kotlin.text.indexOfFirst' call
              var inductionVariable_3 = 0;
              var last_1 = charSequenceLength(rightTruncated_0) - 1 | 0;
              if (inductionVariable_3 <= last_1)
                do {
                  var index_3 = inductionVariable_3;
                  inductionVariable_3 = inductionVariable_3 + 1 | 0;
                  var tmp$ret$28;
                  // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                  var tmp16__anonymous__5bf3vu = charSequenceGet(rightTruncated_0, index_3);
                  tmp$ret$28 = !equals_0(new Char(tmp16__anonymous__5bf3vu), new Char(_Char___init__impl__6a9atx(48)));
                  if (tmp$ret$28) {
                    tmp$ret$29 = index_3;
                    break $l$block_3;
                  }
                }
                 while (inductionVariable_3 <= last_1);
              tmp$ret$29 = -1;
            }
            tmp_17 = imul(tmp$ret$29 + 1 | 0, -1);
          }
          var exponent_0 = tmp_17;
          if (significand_0.equals(Companion_getInstance_30().q17_1)) {
            sign_0 = Sign_ZERO_getInstance();
          }
          if (sign_0.equals(Sign_NEGATIVE_getInstance())) {
            significand_0 = significand_0.r19();
          }
          return new BigDecimal(significand_0, toLong_0(exponent_0), decimalMode);
        } else
          throw ArithmeticException_init_$Create$('Invalid (or unsupported) floating point number format: ' + floatingPointString);
      } else {
        var significand_1 = Companion_getInstance_30().n16(floatingPointString, 10);
        var tmp$ret$30;
        // Inline function 'kotlin.Long.minus' call
        var tmp17_minus = significand_1.z17();
        tmp$ret$30 = tmp17_minus.c4(new Long(1, 0));
        return new BigDecimal(significand_1, tmp$ret$30, decimalMode);
      }
    }
  };
  Companion_28.prototype.q19 = function (floatingPointString, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return this.n19(floatingPointString, decimalMode);
  };
  var Companion_instance_28;
  function Companion_getInstance_28() {
    if (Companion_instance_28 == null)
      new Companion_28();
    return Companion_instance_28;
  }
  function removeTrailingZeroes($this, bigDecimal) {
    if (bigDecimal.equals(Companion_getInstance_28().h18_1))
      return $this;
    var significand = bigDecimal.v18_1;
    var divisionResult = new QuotientAndRemainder(bigDecimal.v18_1, Companion_getInstance_30().q17_1);
    do {
      divisionResult = divisionResult.c18_1.b18(Companion_getInstance_30().t17_1);
      if (divisionResult.d18_1.equals(Companion_getInstance_30().q17_1)) {
        significand = divisionResult.c18_1;
      }
    }
     while (divisionResult.d18_1.equals(Companion_getInstance_30().q17_1));
    var tmp = significand;
    return BigDecimal_init_$Create$(tmp, bigDecimal.w18_1, null, 4, null);
  }
  function ScaleOps(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function computeMode($this, other, op) {
    var tmp;
    if ((($this.x18_1 == null ? true : $this.x18_1.n17_1) ? true : other.x18_1 == null) ? true : other.x18_1.n17_1) {
      tmp = Companion_getInstance_29().s19_1;
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.math.max' call
      var tmp0_max = $this.x18_1.k17_1;
      var tmp1_max = other.x18_1.k17_1;
      tmp$ret$0 = tmp0_max.z3(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
      var tmp_0 = tmp$ret$0;
      var tmp_1;
      if ($this.x18_1.o17_1 ? other.x18_1.o17_1 : false) {
        var tmp0_subject = op;
        var tmp0 = tmp0_subject.k3_1;
        var tmp_2;
        switch (tmp0) {
          case 0:
            var tmp$ret$1;
            // Inline function 'kotlin.math.max' call
            var tmp2_max = $this.x18_1.m17_1;
            var tmp3_max = other.x18_1.m17_1;
            tmp$ret$1 = tmp2_max.z3(tmp3_max) >= 0 ? tmp2_max : tmp3_max;

            tmp_2 = tmp$ret$1;
            break;
          case 1:
            var tmp$ret$2;
            // Inline function 'kotlin.math.min' call
            var tmp4_min = $this.x18_1.m17_1;
            var tmp5_min = other.x18_1.m17_1;
            tmp$ret$2 = tmp4_min.z3(tmp5_min) <= 0 ? tmp4_min : tmp5_min;

            tmp_2 = tmp$ret$2;
            break;
          case 2:
            tmp_2 = $this.x18_1.m17_1.b4(other.x18_1.m17_1);
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_1 = tmp_2;
      } else {
        tmp_1 = new Long(-1, -1);
      }
      tmp = new DecimalMode(tmp_0, $this.x18_1.l17_1, tmp_1);
    }
    return tmp;
  }
  function getRidOfRadix($this, bigDecimal) {
    var precision = bigDecimal.v18_1.z17();
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    var tmp0_plus = bigDecimal.w18_1.c4(precision);
    tmp$ret$0 = tmp0_plus.b4(new Long(1, 0));
    var newExponent = tmp$ret$0;
    return BigDecimal_init_$Create$(bigDecimal.v18_1, newExponent, null, 4, null);
  }
  function bringSignificandToSameExponent($this, first, second) {
    var firstPrepared = getRidOfRadix($this, first);
    var secondPrepared = getRidOfRadix($this, second);
    var firstPreparedExponent = firstPrepared.w18_1;
    var secondPreparedExponent = secondPrepared.w18_1;
    var tmp;
    if (first.w18_1.z3(second.w18_1) > 0) {
      var moveFirstBy = firstPreparedExponent.c4(secondPreparedExponent);
      var tmp_0;
      if (moveFirstBy.z3(new Long(0, 0)) >= 0) {
        var movedFirst = firstPrepared.v18_1.a17(toBigInteger(10).a18(moveFirstBy));
        return new Triple(movedFirst, second.v18_1, secondPreparedExponent);
      } else {
        var tmp_1 = toBigInteger(10);
        var tmp$ret$0;
        // Inline function 'kotlin.Long.times' call
        tmp$ret$0 = moveFirstBy.a4(new Long(-1, -1));
        var movedSecond = secondPrepared.v18_1.a17(tmp_1.a18(tmp$ret$0));
        tmp_0 = new Triple(first.v18_1, movedSecond, firstPreparedExponent);
      }
      tmp = tmp_0;
    } else if (first.w18_1.z3(second.w18_1) < 0) {
      var moveSecondBy = secondPreparedExponent.c4(firstPreparedExponent);
      var tmp_2;
      if (moveSecondBy.z3(new Long(0, 0)) >= 0) {
        var movedSecond_0 = secondPrepared.v18_1.a17(toBigInteger(10).a18(moveSecondBy));
        tmp_2 = new Triple(first.v18_1, movedSecond_0, firstPreparedExponent);
      } else {
        var tmp_3 = toBigInteger(10);
        var tmp$ret$1;
        // Inline function 'kotlin.Long.times' call
        tmp$ret$1 = moveSecondBy.a4(new Long(-1, -1));
        var movedFirst_0 = firstPrepared.v18_1.a17(tmp_3.a18(tmp$ret$1));
        tmp_2 = new Triple(movedFirst_0, second.v18_1, firstPreparedExponent);
      }
      return tmp_2;
    } else if (first.w18_1.equals(second.w18_1)) {
      var delta = firstPreparedExponent.c4(secondPreparedExponent);
      var tmp_4;
      if (delta.z3(new Long(0, 0)) > 0) {
        var movedFirst_1 = first.v18_1.a17(toBigInteger(10).a18(delta));
        tmp_4 = new Triple(movedFirst_1, second.v18_1, firstPreparedExponent);
      } else {
        if (delta.z3(new Long(0, 0)) < 0) {
          var tmp_5 = toBigInteger(10);
          var tmp$ret$2;
          // Inline function 'kotlin.Long.times' call
          tmp$ret$2 = delta.a4(new Long(-1, -1));
          var movedSecond_1 = second.v18_1.a17(tmp_5.a18(tmp$ret$2));
          tmp_4 = new Triple(first.v18_1, movedSecond_1, firstPreparedExponent);
        } else {
          var tmp$ret$3;
          // Inline function 'kotlin.Long.compareTo' call
          tmp$ret$3 = delta.z3(new Long(0, 0));
          if (tmp$ret$3 === 0) {
            tmp_4 = new Triple(first.v18_1, second.v18_1, firstPreparedExponent);
          } else {
            throw RuntimeException_init_$Create$('Invalid delta: ' + toString_3(delta));
          }
        }
      }
      return tmp_4;
    } else {
      throw RuntimeException_init_$Create$('Invalid comparison state BigInteger: ' + toString_3(first.w18_1) + ', ' + toString_3(second.w18_1));
    }
    return tmp;
  }
  function javascriptNumberComparison($this, number) {
    var double = numberToDouble(number);
    var tmp;
    Companion_getInstance_9();
    if (double > (new Long(-1, 2147483647)).za()) {
      tmp = $this.u19(Companion_getInstance_28().p19(double.toString()));
    } else {
      if (double % 1 === 0.0) {
        tmp = $this.u19(Companion_getInstance_28().f19(numberToLong(number)));
      } else {
        var tmp_0 = numberToDouble(number);
        tmp = $this.u19(toBigDecimal$default(tmp_0, null, null, 3, null));
      }
    }
    return tmp;
  }
  function placeADotInStringExpanded($this, input, position) {
    var prefix = substring(input, until(0, input.length - position | 0));
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var tmp0_dropLastWhile = substring(input, until(input.length - position | 0, input.length));
      var inductionVariable = get_lastIndex_1(tmp0_dropLastWhile);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.placeADotInStringExpanded.<anonymous>' call
          var tmp1__anonymous__uwfjfc = charSequenceGet(tmp0_dropLastWhile, index);
          tmp$ret$0 = equals_0(new Char(tmp1__anonymous__uwfjfc), new Char(_Char___init__impl__6a9atx(48)));
          if (!tmp$ret$0) {
            var tmp$ret$2;
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$1 = tmp0_dropLastWhile;
            tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
            tmp$ret$3 = tmp$ret$2;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    var suffix = tmp$ret$3;
    var tmp;
    var tmp$ret$4;
    // Inline function 'kotlin.text.isNotEmpty' call
    tmp$ret$4 = charSequenceLength(suffix) > 0;
    if (tmp$ret$4) {
      tmp = prefix + '.' + suffix;
    } else {
      tmp = prefix;
    }
    return tmp;
  }
  function placeADotInString($this, input, position) {
    var prefix = substring(input, until(0, input.length - position | 0));
    var suffix = substring(input, until(input.length - position | 0, input.length));
    var prepared = prefix + '.' + suffix;
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var inductionVariable = get_lastIndex_1(prepared);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.placeADotInString.<anonymous>' call
          var tmp0__anonymous__q1qw7t = charSequenceGet(prepared, index);
          tmp$ret$0 = equals_0(new Char(tmp0__anonymous__q1qw7t), new Char(_Char___init__impl__6a9atx(48)));
          if (!tmp$ret$0) {
            var tmp$ret$2;
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$1 = prepared;
            tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
            tmp$ret$3 = tmp$ret$2;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    return tmp$ret$3;
  }
  function ScaleOps_Max_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Max_instance;
  }
  function BigDecimal(_significand, _exponent, _decimalMode) {
    Companion_getInstance_28();
    if (!(_decimalMode == null) ? _decimalMode.o17_1 : false) {
      var wrk = applyScale(Companion_getInstance_28(), _significand, _exponent, _decimalMode);
      if (!wrk.g18()) {
        this.v18_1 = wrk.v18_1;
        this.w18_1 = wrk.w18_1;
        var newPrecision = this.v18_1.z17();
        this.u18_1 = newPrecision;
        var tmp = this;
        tmp.x18_1 = _decimalMode.v19(newPrecision, null, new Long(0, 0), 6, null);
      } else {
        this.v18_1 = wrk.v18_1;
        this.w18_1 = wrk.w18_1.a4(_decimalMode.k17_1.b4(_decimalMode.m17_1));
        this.u18_1 = _decimalMode.k17_1.b4(_decimalMode.m17_1);
        var tmp_0 = this;
        tmp_0.x18_1 = _decimalMode.v19(this.u18_1, null, new Long(0, 0), 6, null);
      }
    } else {
      this.v18_1 = _significand;
      this.u18_1 = _significand.z17();
      this.w18_1 = _exponent;
      this.x18_1 = _decimalMode;
    }
    var tmp_1 = this;
    var tmp0_safe_receiver = this.x18_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.k17_1;
    tmp_1.y18_1 = tmp1_elvis_lhs == null ? new Long(0, 0) : tmp1_elvis_lhs;
    var tmp_2 = this;
    var tmp0_safe_receiver_0 = this.x18_1;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.l17_1;
    tmp_2.z18_1 = tmp1_elvis_lhs_0 == null ? RoundingMode_NONE_getInstance() : tmp1_elvis_lhs_0;
    var tmp_3 = this;
    var tmp0_safe_receiver_1 = this.x18_1;
    var tmp1_elvis_lhs_1 = tmp0_safe_receiver_1 == null ? null : tmp0_safe_receiver_1.m17_1;
    tmp_3.a19_1 = tmp1_elvis_lhs_1 == null ? new Long(-1, -1) : tmp1_elvis_lhs_1;
    this.b19_1 = this.a19_1.z3(new Long(0, 0)) >= 0;
  }
  BigDecimal.prototype.u16 = function () {
    return Companion_getInstance_28();
  };
  BigDecimal.prototype.v16 = function () {
    return this;
  };
  BigDecimal.prototype.w19 = function (other) {
    return this.x19(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.x16 = function (other) {
    return this.w19(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.x19 = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_28(), this.x18_1, other.x18_1, decimalMode);
    if (this.equals(Companion_getInstance_28().h18_1)) {
      return roundOrDont(Companion_getInstance_28(), other.v18_1, other.w18_1, resolvedDecimalMode);
    }
    if (other.equals(Companion_getInstance_28().h18_1)) {
      return roundOrDont(Companion_getInstance_28(), this.v18_1, this.w18_1, resolvedDecimalMode);
    }
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var first = tmp0_container.o2();
    var second = tmp0_container.p2();
    var firstNumOfDigits = first.z17();
    var secondNumOfDigits = second.z17();
    var newSignificand = first.w16(second);
    var newSignificandNumOfDigit = newSignificand.z17();
    var tmp;
    if (firstNumOfDigits.z3(secondNumOfDigits) > 0) {
      tmp = firstNumOfDigits;
    } else {
      tmp = secondNumOfDigits;
    }
    var largerOperand = tmp;
    var carryDetected = newSignificandNumOfDigit.c4(largerOperand);
    var tmp$ret$0;
    // Inline function 'kotlin.math.max' call
    var tmp0_max = this.w18_1;
    var tmp1_max = other.w18_1;
    tmp$ret$0 = tmp0_max.z3(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
    var newExponent = tmp$ret$0.b4(carryDetected);
    var tmp_0;
    if (resolvedDecimalMode.o17_1) {
      var tmp_1 = Companion_getInstance_28();
      tmp_0 = roundOrDont(tmp_1, newSignificand, newExponent, resolvedDecimalMode.v19(newSignificandNumOfDigit, null, new Long(0, 0), 6, null));
    } else {
      tmp_0 = roundOrDont(Companion_getInstance_28(), newSignificand, newExponent, resolvedDecimalMode);
    }
    return tmp_0;
  };
  BigDecimal.prototype.y19 = function (other) {
    return this.z19(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.z16 = function (other) {
    return this.y19(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.z19 = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_28(), this.x18_1, other.x18_1, decimalMode);
    if (this.equals(Companion_getInstance_28().h18_1)) {
      return roundOrDont(Companion_getInstance_28(), other.v18_1.r19(), other.w18_1, resolvedDecimalMode);
    }
    if (other.equals(Companion_getInstance_28().h18_1)) {
      return roundOrDont(Companion_getInstance_28(), this.v18_1, this.w18_1, resolvedDecimalMode);
    }
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var first = tmp0_container.o2();
    var second = tmp0_container.p2();
    var firstNumOfDigits = first.z17();
    var secondNumOfDigits = second.z17();
    var newSignificand = first.y16(second);
    var newSignificandNumOfDigit = newSignificand.z17();
    var tmp;
    if (firstNumOfDigits.z3(secondNumOfDigits) > 0) {
      tmp = firstNumOfDigits;
    } else {
      tmp = secondNumOfDigits;
    }
    var largerOperand = tmp;
    var borrowDetected = newSignificandNumOfDigit.c4(largerOperand);
    var tmp$ret$0;
    // Inline function 'kotlin.math.max' call
    var tmp0_max = this.w18_1;
    var tmp1_max = other.w18_1;
    tmp$ret$0 = tmp0_max.z3(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
    var newExponent = tmp$ret$0.b4(borrowDetected);
    if (this.b19_1) {
      var tmp_0 = Companion_getInstance_28();
      return roundOrDont(tmp_0, newSignificand, newExponent, resolvedDecimalMode.v19(newSignificandNumOfDigit, null, new Long(0, 0), 6, null));
    } else {
      return roundOrDont(Companion_getInstance_28(), newSignificand, newExponent, resolvedDecimalMode);
    }
  };
  BigDecimal.prototype.a1a = function (other) {
    return this.b1a(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.b17 = function (other) {
    return this.a1a(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.b1a = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_28(), this.x18_1, other.x18_1, decimalMode);
    var firstNumOfDigits = this.v18_1.z17();
    var secondNumOfDigits = other.v18_1.z17();
    var newSignificand = this.v18_1.a17(other.v18_1);
    var newSignificandNumOfDigit = newSignificand.z17();
    var moveExponent = newSignificandNumOfDigit.c4(firstNumOfDigits.b4(secondNumOfDigits));
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    var tmp0_plus = this.w18_1.b4(other.w18_1).b4(moveExponent);
    tmp$ret$0 = tmp0_plus.b4(new Long(1, 0));
    var newExponent = tmp$ret$0;
    var tmp;
    if (resolvedDecimalMode.o17_1) {
      var tmp_0 = Companion_getInstance_28();
      tmp = roundOrDont(tmp_0, newSignificand, newExponent, resolvedDecimalMode.v19(newSignificandNumOfDigit, null, new Long(0, 0), 6, null));
    } else {
      tmp = roundOrDont(Companion_getInstance_28(), newSignificand, newExponent, resolvedDecimalMode);
    }
    return tmp;
  };
  BigDecimal.prototype.c1a = function (other) {
    return this.d1a(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.d17 = function (other) {
    return this.c1a(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.d1a = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_28(), this.x18_1, other.x18_1, decimalMode);
    if (resolvedDecimalMode.n17_1 ? !resolvedDecimalMode.o17_1 : false) {
      var newExponent = this.w18_1.c4(other.w18_1);
      var tmp$ret$1;
      // Inline function 'kotlin.Long.plus' call
      var tmp$ret$0;
      // Inline function 'kotlin.Long.times' call
      var tmp0_times = other.u18_1;
      tmp$ret$0 = tmp0_times.a4(new Long(2, 0));
      var tmp1_plus = tmp$ret$0;
      tmp$ret$1 = tmp1_plus.b4(new Long(6, 0));
      var power = tmp$ret$1;
      var thisPrepared = this.v18_1.a17(Companion_getInstance_30().t17_1.a18(power));
      var divRem = thisPrepared.b18(other.v18_1);
      var result = divRem.c18_1;
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      var tmp2_minus = other.u18_1;
      tmp$ret$2 = tmp2_minus.c4(new Long(1, 0));
      var expectedDiff = tmp$ret$2;
      var exponentModifier = expectedDiff.b4(result.z17().c4(thisPrepared.z17()));
      if (!divRem.d18_1.equals(Companion_getInstance_30().q17_1)) {
        throw ArithmeticException_init_$Create$('Non-terminating result of division operation (i.e. 1/3 = 0.3333... library needs to know when to stop and how to round up at that point). Specify decimalPrecision inside your decimal mode.');
      }
      return new BigDecimal(result, newExponent.b4(exponentModifier), resolvedDecimalMode);
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.Long.minus' call
      var tmp3_minus = this.w18_1.c4(other.w18_1);
      tmp$ret$3 = tmp3_minus.c4(new Long(1, 0));
      var newExponent_0 = tmp$ret$3;
      var desiredPrecision = resolvedDecimalMode.k17_1;
      var power_0 = desiredPrecision.c4(this.u18_1).b4(other.u18_1);
      var tmp;
      if (power_0.z3(new Long(0, 0)) > 0) {
        tmp = this.v18_1.a17(toBigInteger(10).a18(power_0));
      } else if (power_0.z3(new Long(0, 0)) < 0) {
        var tmp_0 = toBigInteger(10);
        var tmp$ret$4;
        // Inline function 'kotlin.math.absoluteValue' call
        tmp$ret$4 = abs(power_0);
        tmp = this.v18_1.c17(tmp_0.a18(tmp$ret$4));
      } else {
        tmp = this.v18_1;
      }
      var thisPrepared_0 = tmp;
      var divRem_0 = thisPrepared_0.b18(other.v18_1);
      var result_0 = divRem_0.c18_1;
      if (result_0.equals(Companion_getInstance_30().q17_1)) {
        var tmp0 = newExponent_0;
        newExponent_0 = tmp0.fb();
      }
      var exponentModifier_0 = result_0.z17().c4(resolvedDecimalMode.k17_1);
      var tmp_1;
      if (this.b19_1) {
        var tmp_2 = roundDiscarded(Companion_getInstance_28(), result_0, divRem_0.d18_1, resolvedDecimalMode);
        var tmp_3 = newExponent_0.b4(exponentModifier_0);
        var tmp_4 = result_0.z17();
        tmp_1 = new BigDecimal(tmp_2, tmp_3, resolvedDecimalMode.v19(tmp_4, null, new Long(0, 0), 6, null));
      } else {
        tmp_1 = new BigDecimal(roundDiscarded(Companion_getInstance_28(), result_0, divRem_0.d18_1, resolvedDecimalMode), newExponent_0.b4(exponentModifier_0), resolvedDecimalMode);
      }
      return tmp_1;
    }
  };
  BigDecimal.prototype.e1a = function (other) {
    return this.f1a(other).n2_1;
  };
  BigDecimal.prototype.j17 = function (other) {
    return this.e1a(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.f1a = function (other) {
    if (this.w18_1.z3(new Long(0, 0)) < 0) {
      return new Pair(Companion_getInstance_28().h18_1, this);
    }
    if (other.e18().g1a(this.e18()) > 0) {
      return new Pair(Companion_getInstance_28().h18_1, this);
    }
    var tmp0_safe_receiver = this.x18_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      var tmp0_plus = this.w18_1;
      tmp$ret$0 = tmp0_plus.b4(new Long(1, 0));
      var tmp_0 = tmp$ret$0;
      tmp = tmp0_safe_receiver.v19(tmp_0, null, new Long(0, 0), 6, null);
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$1;
      // Inline function 'kotlin.Long.plus' call
      var tmp1_plus = this.w18_1;
      tmp$ret$1 = tmp1_plus.b4(new Long(1, 0));
      var tmp_2 = tmp$ret$1;
      var tmp_3 = RoundingMode_FLOOR_getInstance();
      tmp_1 = DecimalMode_init_$Create$(tmp_2, tmp_3, new Long(0, 0), 4, null);
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    var resolvedRoundingMode = tmp_1;
    var quotient = this.d1a(other, resolvedRoundingMode);
    var quotientInfinitePrecision = quotient.h1a(null, new Long(0, 0), Companion_getInstance_29().s19_1, 3, null);
    var remainder = this.j1a(quotientInfinitePrecision.i1a(other));
    return new Pair(quotient, remainder);
  };
  BigDecimal.prototype.g18 = function () {
    return this.v18_1.g18();
  };
  BigDecimal.prototype.k1a = function (significand, exponent, decimalMode) {
    return new BigDecimal(significand, exponent, decimalMode);
  };
  BigDecimal.prototype.h1a = function (significand, exponent, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      significand = this.v18_1;
    if (!(($mask0 & 2) === 0))
      exponent = this.w18_1;
    if (!(($mask0 & 4) === 0))
      decimalMode = this.x18_1;
    return this.k1a(significand, exponent, decimalMode);
  };
  BigDecimal.prototype.l1a = function (places) {
    if (places.equals(new Long(0, 0))) {
      return this;
    }
    var tmp = this.w18_1.b4(places);
    return this.h1a(null, tmp, null, 5, null);
  };
  BigDecimal.prototype.m1a = function () {
    if (this.w18_1.z3(new Long(0, 0)) < 0) {
      var tmp0_subject = this.v18_1.w17_1;
      var tmp0 = tmp0_subject.k3_1;
      var tmp;
      switch (tmp0) {
        case 0:
          tmp = Companion_getInstance_28().h18_1;
          break;
        case 1:
          tmp = Companion_getInstance_28().i18_1.r19();
          break;
        case 2:
          tmp = Companion_getInstance_28().h18_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      return tmp;
    }
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    var tmp0_plus = this.w18_1;
    tmp$ret$0 = tmp0_plus.b4(new Long(1, 0));
    var tmp_0 = tmp$ret$0;
    var tmp_1 = RoundingMode_FLOOR_getInstance();
    return this.g19(DecimalMode_init_$Create$(tmp_0, tmp_1, new Long(0, 0), 4, null));
  };
  BigDecimal.prototype.n1a = function () {
    if (this.w18_1.z3(new Long(0, 0)) < 0) {
      return Companion_getInstance_30().q17_1;
    }
    var precisionExponentDiff = this.w18_1.c4(this.u18_1);
    var tmp;
    if (precisionExponentDiff.z3(new Long(0, 0)) > 0) {
      var tmp_0 = toBigInteger(10);
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      tmp$ret$0 = precisionExponentDiff.b4(new Long(1, 0));
      tmp = this.v18_1.a17(tmp_0.a18(tmp$ret$0));
    } else if (precisionExponentDiff.z3(new Long(0, 0)) < 0) {
      var tmp_1 = toBigInteger(10);
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      var tmp$ret$1;
      // Inline function 'kotlin.math.absoluteValue' call
      tmp$ret$1 = abs(precisionExponentDiff);
      var tmp0_minus = tmp$ret$1;
      tmp$ret$2 = tmp0_minus.c4(new Long(1, 0));
      tmp = this.v18_1.c17(tmp_1.a18(tmp$ret$2));
    } else {
      tmp = this.v18_1.f17(10);
    }
    return tmp;
  };
  BigDecimal.prototype.j1a = function (other) {
    return this.z19(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.i1a = function (other) {
    return this.b1a(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.e18 = function () {
    return new BigDecimal(this.v18_1.e18(), this.w18_1, this.x18_1);
  };
  BigDecimal.prototype.r19 = function () {
    return new BigDecimal(this.v18_1.r19(), this.w18_1, this.x18_1);
  };
  BigDecimal.prototype.g19 = function (decimalMode) {
    if (decimalMode == null) {
      return this;
    }
    return roundSignificand(Companion_getInstance_28(), this.v18_1, this.w18_1, decimalMode);
  };
  BigDecimal.prototype.u19 = function (other) {
    var tmp;
    if (this.w18_1.equals(other.w18_1) ? this.u18_1.equals(other.u18_1) : false) {
      tmp = this.v18_1.o1a(other.v18_1);
    } else {
      var tmp0_container = bringSignificandToSameExponent(this, this, other);
      var preparedFirst = tmp0_container.o2();
      var preparedSecond = tmp0_container.p2();
      tmp = preparedFirst.o1a(preparedSecond);
    }
    return tmp;
  };
  BigDecimal.prototype.g1a = function (other) {
    if (isNumber(other)) {
      if (RuntimePlatform_getInstance().p1a().equals(Platform_JS_getInstance())) {
        return javascriptNumberComparison(this, other);
      }
    }
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigDecimal) {
      tmp = this.u19(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.u19(Companion_getInstance_28().f19(other));
      } else {
        if (typeof tmp0_subject === 'number') {
          tmp = this.u19(Companion_getInstance_28().p16(other));
        } else {
          if (typeof tmp0_subject === 'number') {
            tmp = this.u19(Companion_getInstance_28().j19(other));
          } else {
            if (typeof tmp0_subject === 'number') {
              tmp = this.u19(Companion_getInstance_28().l19(other));
            } else {
              if (typeof tmp0_subject === 'number') {
                var tmp_0 = Companion_getInstance_28();
                tmp = this.u19(tmp_0.c19(other, null, 2, null));
              } else {
                if (typeof tmp0_subject === 'number') {
                  var tmp_1 = Companion_getInstance_28();
                  tmp = this.u19(tmp_1.d19(other, null, 2, null));
                } else {
                  throw RuntimeException_init_$Create$('Invalid comparison type for BigDecimal: ' + getKClassFromExpression(other).c9());
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  BigDecimal.prototype.e5 = function (other) {
    return this.g1a(isObject(other) ? other : THROW_CCE());
  };
  BigDecimal.prototype.equals = function (other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigDecimal) {
      tmp = this.u19(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.u19(Companion_getInstance_28().f19(other));
      } else {
        if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
          tmp = this.u19(Companion_getInstance_28().p16(other));
        } else {
          if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
            tmp = this.u19(Companion_getInstance_28().j19(other));
          } else {
            if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
              tmp = this.u19(Companion_getInstance_28().l19(other));
            } else {
              if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
                var tmp_0 = Companion_getInstance_28();
                tmp = this.u19(tmp_0.c19(other, null, 2, null));
              } else {
                if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
                  var tmp_1 = Companion_getInstance_28();
                  tmp = this.u19(tmp_1.d19(other, null, 2, null));
                } else {
                  tmp = -1;
                }
              }
            }
          }
        }
      }
    }
    var comparison = tmp;
    return comparison === 0;
  };
  BigDecimal.prototype.hashCode = function () {
    if (this.equals(Companion_getInstance_28().h18_1)) {
      return 0;
    }
    return removeTrailingZeroes(this, this).v18_1.hashCode() + this.w18_1.hashCode() | 0;
  };
  BigDecimal.prototype.toString = function () {
    if (Companion_getInstance_28().l18_1) {
      return this.q1a();
    }
    var significandString = this.v18_1.r1a(10);
    var tmp;
    if (this.v18_1.g1a(0) < 0) {
      tmp = 2;
    } else {
      tmp = 1;
    }
    var modifier = tmp;
    var tmp_0;
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var tmp0_dropLastWhile = this.v18_1.toString();
      var inductionVariable = get_lastIndex_1(tmp0_dropLastWhile);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.toString.<anonymous>' call
          var tmp1__anonymous__uwfjfc = charSequenceGet(tmp0_dropLastWhile, index);
          tmp$ret$0 = equals_0(new Char(tmp1__anonymous__uwfjfc), new Char(_Char___init__impl__6a9atx(48)));
          if (!tmp$ret$0) {
            var tmp$ret$2;
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$1 = tmp0_dropLastWhile;
            tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
            tmp$ret$3 = tmp$ret$2;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    if (tmp$ret$3.length <= 1) {
      tmp_0 = '0';
    } else {
      tmp_0 = '';
    }
    var expand = tmp_0;
    var tmp_1;
    if (this.w18_1.z3(new Long(0, 0)) > 0) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand + 'E+' + toString_3(this.w18_1);
    } else if (this.w18_1.z3(new Long(0, 0)) < 0) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand + 'E' + toString_3(this.w18_1);
    } else if (this.w18_1.equals(new Long(0, 0))) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand;
    } else {
      throw RuntimeException_init_$Create$('Invalid state, please report a bug (Integer compareTo invalid)');
    }
    return tmp_1;
  };
  BigDecimal.prototype.q1a = function () {
    if (this.equals(Companion_getInstance_28().h18_1)) {
      return '0';
    }
    var digits = this.v18_1.z17();
    if (this.w18_1.z3(toLong_0(IntCompanionObject_getInstance().MAX_VALUE)) > 0) {
      throw RuntimeException_init_$Create$('Invalid toStringExpanded request (exponent > Int.MAX_VALUE)');
    }
    var significandString = this.v18_1.s1a(10);
    var tmp;
    if (this.v18_1.w17_1.equals(Sign_NEGATIVE_getInstance())) {
      tmp = '-';
    } else {
      tmp = '';
    }
    var sign = tmp;
    var tmp_0;
    if (this.w18_1.z3(new Long(0, 0)) > 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      var tmp0_plus = this.w18_1.c4(digits);
      tmp$ret$0 = tmp0_plus.b4(new Long(1, 0));
      var diffBigInt = tmp$ret$0;
      var tmp_1;
      if (diffBigInt.z3(new Long(0, 0)) > 0) {
        var expandZeros = this.t1a(diffBigInt, _Char___init__impl__6a9atx(48));
        tmp_1 = significandString + expandZeros;
      } else {
        tmp_1 = placeADotInStringExpanded(this, significandString, (significandString.length - this.w18_1.u5() | 0) - 1 | 0);
      }
      tmp_0 = tmp_1;
    } else if (this.w18_1.z3(new Long(0, 0)) < 0) {
      var tmp$ret$1;
      // Inline function 'kotlin.math.absoluteValue' call
      var tmp1__get_absoluteValue__rcem8i = this.w18_1.u5();
      tmp$ret$1 = abs_0(tmp1__get_absoluteValue__rcem8i);
      var diffInt = tmp$ret$1;
      var tmp_2;
      if (diffInt > 0) {
        var tmp$ret$2;
        // Inline function 'kotlin.math.absoluteValue' call
        var tmp2__get_absoluteValue__uu8ln7 = this.w18_1;
        tmp$ret$2 = abs(tmp2__get_absoluteValue__uu8ln7);
        var expandZeros_0 = this.t1a(tmp$ret$2, _Char___init__impl__6a9atx(48));
        tmp_2 = placeADotInStringExpanded(this, expandZeros_0 + significandString, (diffInt + significandString.length | 0) - 1 | 0);
      } else {
        tmp_2 = placeADotInStringExpanded(this, significandString, significandString.length - 1 | 0);
      }
      tmp_0 = tmp_2;
    } else if (this.w18_1.equals(new Long(0, 0))) {
      if (digits.equals(new Long(1, 0))) {
        return sign + significandString;
      }
      tmp_0 = placeADotInStringExpanded(this, significandString, significandString.length - 1 | 0);
    } else {
      throw RuntimeException_init_$Create$('Invalid state, please report a bug (Integer compareTo invalid)');
    }
    var adjusted = tmp_0;
    return sign + adjusted;
  };
  BigDecimal.prototype.t1a = function (_this__u8e3s4, char) {
    if (_this__u8e3s4.z3(new Long(0, 0)) < 0) {
      throw RuntimeException_init_$Create$('Char cannot be multiplied with negative number');
    }
    var counter = _this__u8e3s4;
    var stringBuilder = StringBuilder_init_$Create$_0();
    while (counter.z3(new Long(0, 0)) > 0) {
      stringBuilder.u3(char);
      var tmp0 = counter;
      counter = tmp0.fb();
    }
    return stringBuilder.toString();
  };
  function toBigDecimal(_this__u8e3s4, exponentModifier, decimalMode) {
    var tmp = Companion_getInstance_28().o19(_this__u8e3s4, decimalMode);
    var tmp0_elvis_lhs = exponentModifier;
    return tmp.l1a(tmp0_elvis_lhs == null ? new Long(0, 0) : tmp0_elvis_lhs);
  }
  function toBigDecimal$default(_this__u8e3s4, exponentModifier, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      exponentModifier = null;
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return toBigDecimal(_this__u8e3s4, exponentModifier, decimalMode);
  }
  function DecimalMode_init_$Init$(decimalPrecision, roundingMode, scale, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      decimalPrecision = new Long(0, 0);
    if (!(($mask0 & 2) === 0))
      roundingMode = RoundingMode_NONE_getInstance();
    if (!(($mask0 & 4) === 0))
      scale = new Long(-1, -1);
    DecimalMode.call($this, decimalPrecision, roundingMode, scale);
    return $this;
  }
  function DecimalMode_init_$Create$(decimalPrecision, roundingMode, scale, $mask0, $marker) {
    return DecimalMode_init_$Init$(decimalPrecision, roundingMode, scale, $mask0, $marker, Object.create(DecimalMode.prototype));
  }
  function Companion_29() {
    Companion_instance_29 = this;
    var tmp = this;
    var tmp_0 = new Long(0, 0);
    tmp.s19_1 = DecimalMode_init_$Create$(tmp_0, null, new Long(0, 0), 7, null);
    this.t19_1 = new DecimalMode(new Long(30, 0), RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_getInstance(), new Long(2, 0));
  }
  var Companion_instance_29;
  function Companion_getInstance_29() {
    if (Companion_instance_29 == null)
      new Companion_29();
    return Companion_instance_29;
  }
  function DecimalMode(decimalPrecision, roundingMode, scale) {
    Companion_getInstance_29();
    this.k17_1 = decimalPrecision;
    this.l17_1 = roundingMode;
    this.m17_1 = scale;
    if (this.k17_1.z3(new Long(0, 0)) < 0) {
      throw ArithmeticException_init_$Create$('Negative decimal precision is not allowed.');
    }
    this.n17_1 = this.k17_1.equals(new Long(0, 0));
    this.o17_1 = this.m17_1.z3(new Long(0, 0)) >= 0;
    if ((!this.o17_1 ? this.k17_1.equals(new Long(0, 0)) : false) ? !this.l17_1.equals(RoundingMode_NONE_getInstance()) : false) {
      throw ArithmeticException_init_$Create$('Rounding mode with 0 digits precision.');
    }
    if (this.m17_1.z3(new Long(-1, -1)) < 0) {
      throw ArithmeticException_init_$Create$('Negative Scale is unsupported.');
    }
    if (this.o17_1 ? this.l17_1.equals(RoundingMode_NONE_getInstance()) : false) {
      throw ArithmeticException_init_$Create$('Scale of ' + toString_3(this.m17_1) + ' digits to the right of the decimal requires a RoundingMode that is not NONE.');
    }
  }
  DecimalMode.prototype.u1a = function (decimalPrecision, roundingMode, scale) {
    return new DecimalMode(decimalPrecision, roundingMode, scale);
  };
  DecimalMode.prototype.v19 = function (decimalPrecision, roundingMode, scale, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      decimalPrecision = this.k17_1;
    if (!(($mask0 & 2) === 0))
      roundingMode = this.l17_1;
    if (!(($mask0 & 4) === 0))
      scale = this.m17_1;
    return this.u1a(decimalPrecision, roundingMode, scale);
  };
  DecimalMode.prototype.toString = function () {
    return 'DecimalMode(decimalPrecision=' + toString_3(this.k17_1) + ', roundingMode=' + this.l17_1 + ', scale=' + toString_3(this.m17_1) + ')';
  };
  DecimalMode.prototype.hashCode = function () {
    var result = this.k17_1.hashCode();
    result = imul(result, 31) + this.l17_1.hashCode() | 0;
    result = imul(result, 31) + this.m17_1.hashCode() | 0;
    return result;
  };
  DecimalMode.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DecimalMode))
      return false;
    var tmp0_other_with_cast = other instanceof DecimalMode ? other : THROW_CCE();
    if (!this.k17_1.equals(tmp0_other_with_cast.k17_1))
      return false;
    if (!this.l17_1.equals(tmp0_other_with_cast.l17_1))
      return false;
    if (!this.m17_1.equals(tmp0_other_with_cast.m17_1))
      return false;
    return true;
  };
  var RoundingMode_FLOOR_instance;
  var RoundingMode_CEILING_instance;
  var RoundingMode_AWAY_FROM_ZERO_instance;
  var RoundingMode_TOWARDS_ZERO_instance;
  var RoundingMode_NONE_instance;
  var RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance;
  var RoundingMode_ROUND_HALF_TOWARDS_ZERO_instance;
  var RoundingMode_ROUND_HALF_CEILING_instance;
  var RoundingMode_ROUND_HALF_FLOOR_instance;
  var RoundingMode_ROUND_HALF_TO_EVEN_instance;
  var RoundingMode_ROUND_HALF_TO_ODD_instance;
  var RoundingMode_entriesInitialized;
  function RoundingMode_initEntries() {
    if (RoundingMode_entriesInitialized)
      return Unit_getInstance();
    RoundingMode_entriesInitialized = true;
    RoundingMode_FLOOR_instance = new RoundingMode('FLOOR', 0);
    RoundingMode_CEILING_instance = new RoundingMode('CEILING', 1);
    RoundingMode_AWAY_FROM_ZERO_instance = new RoundingMode('AWAY_FROM_ZERO', 2);
    RoundingMode_TOWARDS_ZERO_instance = new RoundingMode('TOWARDS_ZERO', 3);
    RoundingMode_NONE_instance = new RoundingMode('NONE', 4);
    RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance = new RoundingMode('ROUND_HALF_AWAY_FROM_ZERO', 5);
    RoundingMode_ROUND_HALF_TOWARDS_ZERO_instance = new RoundingMode('ROUND_HALF_TOWARDS_ZERO', 6);
    RoundingMode_ROUND_HALF_CEILING_instance = new RoundingMode('ROUND_HALF_CEILING', 7);
    RoundingMode_ROUND_HALF_FLOOR_instance = new RoundingMode('ROUND_HALF_FLOOR', 8);
    RoundingMode_ROUND_HALF_TO_EVEN_instance = new RoundingMode('ROUND_HALF_TO_EVEN', 9);
    RoundingMode_ROUND_HALF_TO_ODD_instance = new RoundingMode('ROUND_HALF_TO_ODD', 10);
  }
  function RoundingMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function RoundingMode_FLOOR_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_FLOOR_instance;
  }
  function RoundingMode_AWAY_FROM_ZERO_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_AWAY_FROM_ZERO_instance;
  }
  function RoundingMode_TOWARDS_ZERO_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_TOWARDS_ZERO_instance;
  }
  function RoundingMode_NONE_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_NONE_instance;
  }
  function RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance;
  }
  function BigInteger_init_$Init$(long, $this) {
    var tmp = Companion_getInstance_30().p17_1.v1a(long);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_30();
    var tmp0_subject = getKClass(Long);
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (long instanceof Long)
        long;
      else
        THROW_CCE();
      tmp_0 = long.z3(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : long.z3(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().s9())) {
      if (typeof long === 'number')
        long;
      else
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().r9())) {
      if (typeof long === 'number')
        long;
      else
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().q9())) {
      if (typeof long === 'number')
        long;
      else
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + getKClass(Long));
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$(long) {
    return BigInteger_init_$Init$(long, Object.create(BigInteger.prototype));
  }
  function BigInteger_init_$Init$_0(int, $this) {
    var tmp = Companion_getInstance_30().p17_1.w1a(int);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_30();
    var tmp0_subject = PrimitiveClasses_getInstance().s9();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (int instanceof Long)
        int;
      else
        THROW_CCE();
      tmp_0 = int.z3(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : int.z3(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().s9())) {
      if (typeof int === 'number')
        int;
      else
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().r9())) {
      if (typeof int === 'number')
        int;
      else
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().q9())) {
      if (typeof int === 'number')
        int;
      else
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().s9());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_0(int) {
    return BigInteger_init_$Init$_0(int, Object.create(BigInteger.prototype));
  }
  function BigInteger_init_$Init$_1(short, $this) {
    var tmp = Companion_getInstance_30().p17_1.x1a(short);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_30();
    var tmp0_subject = PrimitiveClasses_getInstance().r9();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (short instanceof Long)
        short;
      else
        THROW_CCE();
      tmp_0 = short.z3(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : short.z3(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().s9())) {
      if (typeof short === 'number')
        short;
      else
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().r9())) {
      if (typeof short === 'number')
        short;
      else
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().q9())) {
      if (typeof short === 'number')
        short;
      else
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().r9());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_1(short) {
    return BigInteger_init_$Init$_1(short, Object.create(BigInteger.prototype));
  }
  function BigInteger_init_$Init$_2(byte, $this) {
    var tmp = Companion_getInstance_30().p17_1.y1a(byte);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_30();
    var tmp0_subject = PrimitiveClasses_getInstance().q9();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (byte instanceof Long)
        byte;
      else
        THROW_CCE();
      tmp_0 = byte.z3(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : byte.z3(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().s9())) {
      if (typeof byte === 'number')
        byte;
      else
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().r9())) {
      if (typeof byte === 'number')
        byte;
      else
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().q9())) {
      if (typeof byte === 'number')
        byte;
      else
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().q9());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_2(byte) {
    return BigInteger_init_$Init$_2(byte, Object.create(BigInteger.prototype));
  }
  function Companion_30() {
    Companion_instance_30 = this;
    this.p17_1 = get_chosenArithmetic();
    this.q17_1 = new BigInteger(this.p17_1.z1a(), Sign_ZERO_getInstance());
    this.r17_1 = new BigInteger(this.p17_1.a1b(), Sign_POSITIVE_getInstance());
    this.s17_1 = new BigInteger(this.p17_1.b1b(), Sign_POSITIVE_getInstance());
    this.t17_1 = new BigInteger(this.p17_1.c1b(), Sign_POSITIVE_getInstance());
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.math.log10' call
    tmp$ret$0 = log10(2.0);
    tmp.u17_1 = tmp$ret$0;
  }
  Companion_30.prototype.n16 = function (string, base) {
    if (base < 2 ? true : base > 36) {
      throw NumberFormatException_init_$Create$('Unsupported base: ' + base + '. Supported base range is from 2 to 36');
    }
    var tmp = _Char___init__impl__6a9atx(46);
    var decimal = contains$default(string, tmp, false, 2, null);
    if (decimal) {
      var bigDecimal = Companion_getInstance_28().p19(string);
      var isActuallyDecimal = bigDecimal.j1a(bigDecimal.m1a()).g1a(0) > 0;
      if (isActuallyDecimal) {
        throw NumberFormatException_init_$Create$('Supplied string is decimal, which cannot be converted to BigInteger without precision loss.');
      }
      return bigDecimal.n1a();
    }
    var signed = equals_0(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals_0(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(43)));
    var tmp_0;
    if (signed) {
      if (string.length === 1) {
        throw NumberFormatException_init_$Create$('Invalid big integer: ' + string);
      }
      var tmp_1;
      if (equals_0(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
        tmp_1 = Sign_NEGATIVE_getInstance();
      } else {
        tmp_1 = Sign_POSITIVE_getInstance();
      }
      var isNegative = tmp_1;
      if (string.length === 2 ? equals_0(new Char(charSequenceGet(string, 1)), new Char(_Char___init__impl__6a9atx(48))) : false) {
        return this.q17_1;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = string.length;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = string;
      tmp$ret$1 = tmp$ret$0.substring(1, tmp0_substring);
      tmp_0 = new BigInteger(this.p17_1.d1b(tmp$ret$1, base), isNegative);
    } else {
      if (string.length === 1 ? equals_0(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(48))) : false) {
        return this.q17_1;
      }
      tmp_0 = new BigInteger(this.p17_1.d1b(string, base), Sign_POSITIVE_getInstance());
    }
    return tmp_0;
  };
  Companion_30.prototype.e1b = function (uLong) {
    return new BigInteger(this.p17_1.f1b(uLong), Sign_POSITIVE_getInstance());
  };
  Companion_30.prototype.g1b = function (uInt) {
    return new BigInteger(this.p17_1.h1b(uInt), Sign_POSITIVE_getInstance());
  };
  Companion_30.prototype.i1b = function (uShort) {
    return new BigInteger(this.p17_1.j1b(uShort), Sign_POSITIVE_getInstance());
  };
  Companion_30.prototype.k1b = function (uByte) {
    return new BigInteger(this.p17_1.l1b(uByte), Sign_POSITIVE_getInstance());
  };
  Companion_30.prototype.f19 = function (long) {
    return BigInteger_init_$Create$(long);
  };
  Companion_30.prototype.p16 = function (int) {
    return BigInteger_init_$Create$_0(int);
  };
  Companion_30.prototype.j19 = function (short) {
    return BigInteger_init_$Create$_1(short);
  };
  Companion_30.prototype.l19 = function (byte) {
    return BigInteger_init_$Create$_2(byte);
  };
  Companion_30.prototype.q16 = function (float, exactRequired) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(float);
    var floatDecimalPart = float - tmp$ret$0;
    var tmp = Companion_getInstance_28();
    var tmp$ret$1;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$1 = Math.floor(float);
    var bigDecimal = tmp.m19(tmp$ret$1, null);
    if (exactRequired) {
      if (floatDecimalPart > 0) {
        throw ArithmeticException_init_$Create$('Cant create BigInteger without precision loss, and exact  value was required');
      }
    }
    return bigDecimal.n1a();
  };
  Companion_30.prototype.s16 = function (double, exactRequired) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(double);
    var doubleDecimalPart = double - tmp$ret$0;
    var tmp = Companion_getInstance_28();
    var tmp$ret$1;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$1 = Math.floor(double);
    var bigDecimal = tmp.o19(tmp$ret$1, null);
    if (exactRequired) {
      if (doubleDecimalPart > 0.0) {
        throw ArithmeticException_init_$Create$('Cant create BigInteger without precision loss, and exact  value was required');
      }
    }
    return bigDecimal.n1a();
  };
  var Companion_instance_30;
  function Companion_getInstance_30() {
    if (Companion_instance_30 == null)
      new Companion_30();
    return Companion_instance_30;
  }
  function isResultZero($this, resultMagnitude) {
    return Companion_getInstance_30().p17_1.m1b(resultMagnitude, Companion_getInstance_30().p17_1.z1a()) === 0;
  }
  function javascriptNumberComparison_0($this, number) {
    var double = numberToDouble(number);
    var tmp;
    Companion_getInstance_9();
    if (double > (new Long(-1, 2147483647)).za()) {
      var tmp_0 = Companion_getInstance_30();
      var tmp_1 = double.toString();
      tmp = $this.o1a(tmp_0.o16(tmp_1, 0, 2, null));
    } else {
      if (double % 1 === 0.0) {
        tmp = $this.o1a(Companion_getInstance_30().f19(numberToLong(number)));
      } else {
        var tmp_2 = numberToDouble(number);
        tmp = $this.n1b(tmp_2, BigInteger$javascriptNumberComparison$lambda($this));
      }
    }
    return tmp;
  }
  function QuotientAndRemainder(quotient, remainder) {
    this.c18_1 = quotient;
    this.d18_1 = remainder;
  }
  QuotientAndRemainder.prototype.toString = function () {
    return 'QuotientAndRemainder(quotient=' + this.c18_1 + ', remainder=' + this.d18_1 + ')';
  };
  QuotientAndRemainder.prototype.hashCode = function () {
    var result = this.c18_1.hashCode();
    result = imul(result, 31) + this.d18_1.hashCode() | 0;
    return result;
  };
  QuotientAndRemainder.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof QuotientAndRemainder))
      return false;
    var tmp0_other_with_cast = other instanceof QuotientAndRemainder ? other : THROW_CCE();
    if (!this.c18_1.equals(tmp0_other_with_cast.c18_1))
      return false;
    if (!this.d18_1.equals(tmp0_other_with_cast.d18_1))
      return false;
    return true;
  };
  function BigInteger$compareTo$lambda(this$0) {
    return function (it) {
      return this$0.o1a(it);
    };
  }
  function BigInteger$compareTo$lambda_0(this$0) {
    return function (it) {
      return this$0.o1a(it);
    };
  }
  function BigInteger$javascriptNumberComparison$lambda(this$0) {
    return function (it) {
      return this$0.o1a(it);
    };
  }
  function BigInteger(wordArray, requestedSign) {
    Companion_getInstance_30();
    if (requestedSign.equals(Sign_ZERO_getInstance())) {
      // Inline function 'kotlin.require' call
      var tmp0_require = isResultZero(this, wordArray);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.BigInteger.<anonymous>' call
        tmp$ret$0 = 'sign should be Sign.ZERO iff magnitude has a value of 0';
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString_3(message));
      }
    }
    this.v17_1 = BigInteger63Arithmetic_getInstance().g1c(wordArray);
    var tmp = this;
    var tmp_0;
    if (isResultZero(this, this.v17_1)) {
      tmp_0 = Sign_ZERO_getInstance();
    } else {
      tmp_0 = requestedSign;
    }
    tmp.w17_1 = tmp_0;
    this.x17_1 = _ULongArray___get_size__impl__ju6dtr(this.v17_1);
    this.y17_1 = null;
  }
  BigInteger.prototype.u16 = function () {
    return Companion_getInstance_30();
  };
  BigInteger.prototype.v16 = function () {
    return this;
  };
  BigInteger.prototype.h1c = function (other) {
    var comparison = Companion_getInstance_30().p17_1.m1b(this.v17_1, other.v17_1);
    var tmp;
    if (other.w17_1.equals(this.w17_1)) {
      return new BigInteger(Companion_getInstance_30().p17_1.j1c(this.v17_1, other.v17_1), this.w17_1);
    } else {
      var tmp_0;
      if (comparison > 0) {
        tmp_0 = new BigInteger(Companion_getInstance_30().p17_1.i1c(this.v17_1, other.v17_1), this.w17_1);
      } else if (comparison < 0) {
        tmp_0 = new BigInteger(Companion_getInstance_30().p17_1.i1c(other.v17_1, this.v17_1), other.w17_1);
      } else {
        tmp_0 = Companion_getInstance_30().q17_1;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  BigInteger.prototype.x16 = function (other) {
    return this.h1c(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.k1c = function (other) {
    var comparison = Companion_getInstance_30().p17_1.m1b(this.v17_1, other.v17_1);
    if (this.equals(Companion_getInstance_30().q17_1)) {
      return other.r19();
    }
    if (other.equals(Companion_getInstance_30().q17_1)) {
      return this;
    }
    var tmp;
    if (other.w17_1.equals(this.w17_1)) {
      var tmp_0;
      if (comparison > 0) {
        tmp_0 = new BigInteger(Companion_getInstance_30().p17_1.i1c(this.v17_1, other.v17_1), this.w17_1);
      } else if (comparison < 0) {
        tmp_0 = new BigInteger(Companion_getInstance_30().p17_1.i1c(other.v17_1, this.v17_1), this.w17_1.n1c());
      } else {
        tmp_0 = Companion_getInstance_30().q17_1;
      }
      tmp = tmp_0;
    } else {
      return new BigInteger(Companion_getInstance_30().p17_1.j1c(this.v17_1, other.v17_1), this.w17_1);
    }
    return tmp;
  };
  BigInteger.prototype.z16 = function (other) {
    return this.k1c(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.o1c = function (other) {
    if (this.g18() ? true : other.g18()) {
      return Companion_getInstance_30().q17_1;
    }
    if (other.equals(Companion_getInstance_30().r17_1)) {
      return this;
    }
    var tmp;
    if (!this.w17_1.equals(other.w17_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var tmp_0;
    if (sign.equals(Sign_POSITIVE_getInstance())) {
      tmp_0 = new BigInteger(Companion_getInstance_30().p17_1.p1c(this.v17_1, other.v17_1), sign);
    } else {
      tmp_0 = new BigInteger(Companion_getInstance_30().p17_1.p1c(this.v17_1, other.v17_1), sign);
    }
    return tmp_0;
  };
  BigInteger.prototype.b17 = function (other) {
    return this.o1c(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.q1c = function (other) {
    if (other.g18()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var result = Companion_getInstance_30().p17_1.r1c(this.v17_1, other.v17_1).m2_1.s5_1;
    var tmp;
    if (equals_0(result, Companion_getInstance_30().p17_1.z1a())) {
      tmp = Companion_getInstance_30().q17_1;
    } else {
      var tmp_0;
      if (!this.w17_1.equals(other.w17_1)) {
        tmp_0 = Sign_NEGATIVE_getInstance();
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var sign = tmp_0;
      tmp = new BigInteger(result, sign);
    }
    return tmp;
  };
  BigInteger.prototype.d17 = function (other) {
    return this.q1c(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.s1c = function (other) {
    if (other.g18()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var tmp;
    if (!this.w17_1.equals(other.w17_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var result = Companion_getInstance_30().p17_1.r1c(this.v17_1, other.v17_1).n2_1.s5_1;
    if (equals_0(result, Companion_getInstance_30().p17_1.z1a())) {
      sign = Sign_ZERO_getInstance();
    }
    return new BigInteger(result, sign);
  };
  BigInteger.prototype.j17 = function (other) {
    return this.s1c(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.t1c = function (other) {
    if (other.g18()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var tmp;
    if (!this.w17_1.equals(other.w17_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var result = Companion_getInstance_30().p17_1.r1c(this.v17_1, other.v17_1);
    var tmp_0;
    if (equals_0(result.m2_1, new ULongArray(Companion_getInstance_30().p17_1.z1a()))) {
      tmp_0 = Companion_getInstance_30().q17_1;
    } else {
      tmp_0 = new BigInteger(result.m2_1.s5_1, sign);
    }
    var quotient = tmp_0;
    var tmp_1;
    if (equals_0(result.n2_1, new ULongArray(Companion_getInstance_30().p17_1.z1a()))) {
      tmp_1 = Companion_getInstance_30().q17_1;
    } else {
      tmp_1 = new BigInteger(result.n2_1.s5_1, this.w17_1);
    }
    var remainder = tmp_1;
    return new Pair(quotient, remainder);
  };
  BigInteger.prototype.o1a = function (other) {
    if (this.g18() ? other.g18() : false)
      return 0;
    if (other.g18() ? this.w17_1.equals(Sign_POSITIVE_getInstance()) : false)
      return 1;
    if (other.g18() ? this.w17_1.equals(Sign_NEGATIVE_getInstance()) : false)
      return -1;
    if (this.g18() ? other.w17_1.equals(Sign_POSITIVE_getInstance()) : false)
      return -1;
    if (this.g18() ? other.w17_1.equals(Sign_NEGATIVE_getInstance()) : false)
      return 1;
    if (!this.w17_1.equals(other.w17_1))
      return this.w17_1.equals(Sign_POSITIVE_getInstance()) ? 1 : -1;
    var result = Companion_getInstance_30().p17_1.m1b(this.v17_1, other.v17_1);
    var tmp;
    if (this.w17_1.equals(Sign_NEGATIVE_getInstance()) ? other.w17_1.equals(Sign_NEGATIVE_getInstance()) : false) {
      tmp = imul(result, -1);
    } else {
      tmp = result;
    }
    return tmp;
  };
  BigInteger.prototype.g18 = function () {
    return this.w17_1.equals(Sign_ZERO_getInstance()) ? true : get_chosenArithmetic().m1b(this.v17_1, get_chosenArithmetic().z1a()) === 0;
  };
  BigInteger.prototype.r19 = function () {
    return new BigInteger(this.v17_1, this.w17_1.n1c());
  };
  BigInteger.prototype.e18 = function () {
    return new BigInteger(this.v17_1, Sign_POSITIVE_getInstance());
  };
  BigInteger.prototype.a18 = function (exponent) {
    if (exponent.z3(new Long(0, 0)) < 0) {
      throw ArithmeticException_init_$Create$('Negative exponent not supported with BigInteger');
    }
    var tmp0_subject = this;
    var tmp;
    if (tmp0_subject.equals(Companion_getInstance_30().q17_1)) {
      tmp = Companion_getInstance_30().q17_1;
    } else if (tmp0_subject.equals(Companion_getInstance_30().r17_1)) {
      tmp = Companion_getInstance_30().r17_1;
    } else {
      var tmp_0;
      if (this.w17_1.equals(Sign_NEGATIVE_getInstance())) {
        var tmp_1;
        var tmp$ret$0;
        // Inline function 'kotlin.Long.rem' call
        tmp$ret$0 = exponent.v5(new Long(2, 0));
        if (tmp$ret$0.equals(new Long(0, 0))) {
          tmp_1 = Sign_POSITIVE_getInstance();
        } else {
          tmp_1 = Sign_NEGATIVE_getInstance();
        }
        tmp_0 = tmp_1;
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var sign = tmp_0;
      tmp = new BigInteger(Companion_getInstance_30().p17_1.u1c(this.v17_1, exponent), sign);
    }
    return tmp;
  };
  BigInteger.prototype.v1c = function (exponent) {
    return this.a18(toLong_0(exponent));
  };
  BigInteger.prototype.t18 = function () {
    var tmp0_subject = this.w17_1;
    var tmp0 = tmp0_subject.k3_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 1;
        break;
      case 1:
        tmp = -1;
        break;
      case 2:
        tmp = 0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  BigInteger.prototype.z17 = function () {
    if (this.g18()) {
      return new Long(1, 0);
    }
    var bitLength = Companion_getInstance_30().p17_1.w1c(this.v17_1);
    var tmp$ret$0;
    // Inline function 'kotlin.math.ceil' call
    var tmp0_ceil = (bitLength - 1 | 0) * Companion_getInstance_30().u17_1;
    tmp$ret$0 = Math.ceil(tmp0_ceil);
    var minDigit = tmp$ret$0;
    var tmp = this.c17(toBigInteger(10).v1c(numberToInt(minDigit)));
    var counter = new Long(0, 0);
    while (!(tmp.g1a(0) === 0)) {
      tmp = tmp.h17(10);
      var tmp0 = counter;
      counter = tmp0.eb();
    }
    var tmp$ret$1;
    // Inline function 'kotlin.Long.plus' call
    var tmp1_plus = counter;
    var tmp2_plus = numberToInt(minDigit);
    tmp$ret$1 = tmp1_plus.b4(toLong_0(tmp2_plus));
    return tmp$ret$1;
  };
  BigInteger.prototype.fb = function () {
    return this.y16(Companion_getInstance_30().r17_1);
  };
  BigInteger.prototype.eb = function () {
    return this.w16(Companion_getInstance_30().r17_1);
  };
  BigInteger.prototype.b18 = function (other) {
    var result = this.t1c(other);
    return new QuotientAndRemainder(result.m2_1, result.n2_1);
  };
  BigInteger.prototype.g1a = function (other) {
    if (isNumber(other)) {
      if (RuntimePlatform_getInstance().p1a().equals(Platform_JS_getInstance())) {
        return javascriptNumberComparison_0(this, other);
      }
    }
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigInteger) {
      tmp = this.o1a(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.o1a(Companion_getInstance_30().f19(other));
      } else {
        if (typeof tmp0_subject === 'number') {
          tmp = this.o1a(Companion_getInstance_30().p16(other));
        } else {
          if (typeof tmp0_subject === 'number') {
            tmp = this.o1a(Companion_getInstance_30().j19(other));
          } else {
            if (typeof tmp0_subject === 'number') {
              tmp = this.o1a(Companion_getInstance_30().l19(other));
            } else {
              if (tmp0_subject instanceof ULong) {
                tmp = this.o1a(Companion_getInstance_30().e1b(other.w_1));
              } else {
                if (tmp0_subject instanceof UInt) {
                  tmp = this.o1a(Companion_getInstance_30().g1b(other.b5_1));
                } else {
                  if (tmp0_subject instanceof UShort) {
                    tmp = this.o1a(Companion_getInstance_30().i1b(other.z1c_1));
                  } else {
                    if (tmp0_subject instanceof UByte) {
                      tmp = this.o1a(Companion_getInstance_30().k1b(other.y1c_1));
                    } else {
                      if (typeof tmp0_subject === 'number') {
                        tmp = this.n1b(other, BigInteger$compareTo$lambda(this));
                      } else {
                        if (typeof tmp0_subject === 'number') {
                          tmp = this.x1c(other, BigInteger$compareTo$lambda_0(this));
                        } else {
                          throw RuntimeException_init_$Create$('Invalid comparison type for BigInteger: ' + getKClassFromExpression(other));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  BigInteger.prototype.e5 = function (other) {
    return this.g1a(isObject(other) ? other : THROW_CCE());
  };
  BigInteger.prototype.n1b = function (float, comparisonBlock) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(float);
    var withoutDecimalPart = tmp$ret$0;
    var hasDecimalPart = !(float % 1 === 0.0);
    var tmp;
    if (hasDecimalPart) {
      var tmp_0 = Companion_getInstance_30();
      var tmp_1 = withoutDecimalPart + 1;
      var comparisonResult = comparisonBlock(tmp_0.r16(tmp_1, false, 2, null));
      var tmp_2;
      if (comparisonResult === 0) {
        tmp_2 = 1;
      } else {
        tmp_2 = comparisonResult;
      }
      tmp = tmp_2;
    } else {
      var tmp_3 = Companion_getInstance_30();
      tmp = comparisonBlock(tmp_3.r16(withoutDecimalPart, false, 2, null));
    }
    return tmp;
  };
  BigInteger.prototype.x1c = function (double, comparisonBlock) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(double);
    var withoutDecimalPart = tmp$ret$0;
    var hasDecimalPart = !(double % 1 === 0.0);
    var tmp;
    if (hasDecimalPart) {
      var tmp_0 = Companion_getInstance_30();
      var tmp_1 = withoutDecimalPart + 1;
      var comparisonResult = comparisonBlock(tmp_0.t16(tmp_1, false, 2, null));
      var tmp_2;
      if (comparisonResult === 0) {
        tmp_2 = 1;
      } else {
        tmp_2 = comparisonResult;
      }
      tmp = tmp_2;
    } else {
      var tmp_3 = Companion_getInstance_30();
      tmp = comparisonBlock(tmp_3.t16(withoutDecimalPart, false, 2, null));
    }
    return tmp;
  };
  BigInteger.prototype.equals = function (other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigInteger) {
      tmp = this.o1a(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.o1a(Companion_getInstance_30().f19(other));
      } else {
        if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
          tmp = this.o1a(Companion_getInstance_30().p16(other));
        } else {
          if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
            tmp = this.o1a(Companion_getInstance_30().j19(other));
          } else {
            if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
              tmp = this.o1a(Companion_getInstance_30().l19(other));
            } else {
              if (tmp0_subject instanceof ULong) {
                tmp = this.o1a(Companion_getInstance_30().e1b(other.w_1));
              } else {
                if (tmp0_subject instanceof UInt) {
                  tmp = this.o1a(Companion_getInstance_30().g1b(other.b5_1));
                } else {
                  if (tmp0_subject instanceof UShort) {
                    tmp = this.o1a(Companion_getInstance_30().i1b(other.z1c_1));
                  } else {
                    if (tmp0_subject instanceof UByte) {
                      tmp = this.o1a(Companion_getInstance_30().k1b(other.y1c_1));
                    } else {
                      tmp = -1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    var comparison = tmp;
    return comparison === 0;
  };
  BigInteger.prototype.hashCode = function () {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.v17_1;
    var accumulator = 0;
    var tmp0_iterator = ULongArray__iterator_impl_cq4d2h(tmp0_fold);
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j().w_1;
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.BigInteger.hashCode.<anonymous>' call
      var tmp1__anonymous__uwfjfc = accumulator;
      tmp$ret$0 = tmp1__anonymous__uwfjfc + ULong__hashCode_impl_6hv2lb(element) | 0;
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1 + this.w17_1.hashCode() | 0;
  };
  BigInteger.prototype.toString = function () {
    return this.r1a(10);
  };
  BigInteger.prototype.r1a = function (base) {
    var tmp;
    if (this.w17_1.equals(Sign_NEGATIVE_getInstance())) {
      tmp = '-';
    } else {
      tmp = '';
    }
    var sign = tmp;
    return sign + this.s1a(base);
  };
  BigInteger.prototype.s1a = function (base) {
    return Companion_getInstance_30().p17_1.a1d(this.v17_1, base);
  };
  BigInteger.prototype.f18 = function (exactRequired) {
    if (exactRequired ? this.g1a(IntCompanionObject_getInstance().MAX_VALUE) > 0 ? true : this.g1a(IntCompanionObject_getInstance().MIN_VALUE) < 0 : false) {
      throw ArithmeticException_init_$Create$('Cannot convert to int and provide exact value');
    }
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toInt' call
    var tmp0_toInt = ULongArray__get_impl_pr71q9(this.v17_1, 0);
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(tmp0_toInt).u5();
    return imul(tmp$ret$0, this.t18());
  };
  var Sign_POSITIVE_instance;
  var Sign_NEGATIVE_instance;
  var Sign_ZERO_instance;
  var Sign_entriesInitialized;
  function Sign_initEntries() {
    if (Sign_entriesInitialized)
      return Unit_getInstance();
    Sign_entriesInitialized = true;
    Sign_POSITIVE_instance = new Sign('POSITIVE', 0);
    Sign_NEGATIVE_instance = new Sign('NEGATIVE', 1);
    Sign_ZERO_instance = new Sign('ZERO', 2);
  }
  function Sign(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Sign.prototype.n1c = function () {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.k3_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = Sign_NEGATIVE_getInstance();
        break;
      case 1:
        tmp = Sign_POSITIVE_getInstance();
        break;
      case 2:
        tmp = Sign_ZERO_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  function Sign_POSITIVE_getInstance() {
    Sign_initEntries();
    return Sign_POSITIVE_instance;
  }
  function Sign_NEGATIVE_getInstance() {
    Sign_initEntries();
    return Sign_NEGATIVE_instance;
  }
  function Sign_ZERO_getInstance() {
    Sign_initEntries();
    return Sign_ZERO_instance;
  }
  function toBigInteger(_this__u8e3s4) {
    return Companion_getInstance_30().p16(_this__u8e3s4);
  }
  function get_chosenArithmetic() {
    init_properties_Configuration_kt_li7kn6();
    return chosenArithmetic;
  }
  var chosenArithmetic;
  var properties_initialized_Configuration_kt_gex7mu;
  function init_properties_Configuration_kt_li7kn6() {
    if (properties_initialized_Configuration_kt_gex7mu) {
    } else {
      properties_initialized_Configuration_kt_gex7mu = true;
      chosenArithmetic = BigInteger63Arithmetic_getInstance();
    }
  }
  var Platform_JVM_instance;
  var Platform_NATIVE_instance;
  var Platform_JS_instance;
  var Platform_entriesInitialized;
  function Platform_initEntries() {
    if (Platform_entriesInitialized)
      return Unit_getInstance();
    Platform_entriesInitialized = true;
    Platform_JVM_instance = new Platform('JVM', 0);
    Platform_NATIVE_instance = new Platform('NATIVE', 1);
    Platform_JS_instance = new Platform('JS', 2);
  }
  function Platform(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function Platform_JS_getInstance() {
    Platform_initEntries();
    return Platform_JS_instance;
  }
  function Sextuple(a, b, c, d, e, f) {
    this.b1d_1 = a;
    this.c1d_1 = b;
    this.d1d_1 = c;
    this.e1d_1 = d;
    this.f1d_1 = e;
    this.g1d_1 = f;
  }
  Sextuple.prototype.o2 = function () {
    return this.b1d_1;
  };
  Sextuple.prototype.p2 = function () {
    return this.c1d_1;
  };
  Sextuple.prototype.w4 = function () {
    return this.d1d_1;
  };
  Sextuple.prototype.h1d = function () {
    return this.e1d_1;
  };
  Sextuple.prototype.i1d = function () {
    return this.f1d_1;
  };
  Sextuple.prototype.j1d = function () {
    return this.g1d_1;
  };
  Sextuple.prototype.toString = function () {
    return 'Sextuple(a=' + this.b1d_1 + ', b=' + this.c1d_1 + ', c=' + this.d1d_1 + ', d=' + this.e1d_1 + ', e=' + this.f1d_1 + ', f=' + this.g1d_1 + ')';
  };
  Sextuple.prototype.hashCode = function () {
    var result = this.b1d_1 == null ? 0 : hashCode(this.b1d_1);
    result = imul(result, 31) + (this.c1d_1 == null ? 0 : hashCode(this.c1d_1)) | 0;
    result = imul(result, 31) + (this.d1d_1 == null ? 0 : hashCode(this.d1d_1)) | 0;
    result = imul(result, 31) + (this.e1d_1 == null ? 0 : hashCode(this.e1d_1)) | 0;
    result = imul(result, 31) + (this.f1d_1 == null ? 0 : hashCode(this.f1d_1)) | 0;
    result = imul(result, 31) + (this.g1d_1 == null ? 0 : hashCode(this.g1d_1)) | 0;
    return result;
  };
  Sextuple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Sextuple))
      return false;
    var tmp0_other_with_cast = other instanceof Sextuple ? other : THROW_CCE();
    if (!equals_0(this.b1d_1, tmp0_other_with_cast.b1d_1))
      return false;
    if (!equals_0(this.c1d_1, tmp0_other_with_cast.c1d_1))
      return false;
    if (!equals_0(this.d1d_1, tmp0_other_with_cast.d1d_1))
      return false;
    if (!equals_0(this.e1d_1, tmp0_other_with_cast.e1d_1))
      return false;
    if (!equals_0(this.f1d_1, tmp0_other_with_cast.f1d_1))
      return false;
    if (!equals_0(this.g1d_1, tmp0_other_with_cast.g1d_1))
      return false;
    return true;
  };
  function Quadruple(a, b, c, d) {
    this.k1d_1 = a;
    this.l1d_1 = b;
    this.m1d_1 = c;
    this.n1d_1 = d;
  }
  Quadruple.prototype.o2 = function () {
    return this.k1d_1;
  };
  Quadruple.prototype.p2 = function () {
    return this.l1d_1;
  };
  Quadruple.prototype.w4 = function () {
    return this.m1d_1;
  };
  Quadruple.prototype.h1d = function () {
    return this.n1d_1;
  };
  Quadruple.prototype.toString = function () {
    return 'Quadruple(a=' + this.k1d_1 + ', b=' + this.l1d_1 + ', c=' + this.m1d_1 + ', d=' + this.n1d_1 + ')';
  };
  Quadruple.prototype.hashCode = function () {
    var result = this.k1d_1 == null ? 0 : hashCode(this.k1d_1);
    result = imul(result, 31) + (this.l1d_1 == null ? 0 : hashCode(this.l1d_1)) | 0;
    result = imul(result, 31) + (this.m1d_1 == null ? 0 : hashCode(this.m1d_1)) | 0;
    result = imul(result, 31) + (this.n1d_1 == null ? 0 : hashCode(this.n1d_1)) | 0;
    return result;
  };
  Quadruple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Quadruple))
      return false;
    var tmp0_other_with_cast = other instanceof Quadruple ? other : THROW_CCE();
    if (!equals_0(this.k1d_1, tmp0_other_with_cast.k1d_1))
      return false;
    if (!equals_0(this.l1d_1, tmp0_other_with_cast.l1d_1))
      return false;
    if (!equals_0(this.m1d_1, tmp0_other_with_cast.m1d_1))
      return false;
    if (!equals_0(this.n1d_1, tmp0_other_with_cast.n1d_1))
      return false;
    return true;
  };
  function SignedUIntArray(unsignedValue, sign) {
    this.o1d_1 = unsignedValue;
    this.p1d_1 = sign;
  }
  SignedUIntArray.prototype.toString = function () {
    return 'SignedUIntArray(unsignedValue=' + new UIntArray(this.o1d_1) + ', sign=' + this.p1d_1 + ')';
  };
  SignedUIntArray.prototype.hashCode = function () {
    var result = UIntArray__hashCode_impl_hr7ost(this.o1d_1);
    result = imul(result, 31) + (this.p1d_1 | 0) | 0;
    return result;
  };
  SignedUIntArray.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SignedUIntArray))
      return false;
    var tmp0_other_with_cast = other instanceof SignedUIntArray ? other : THROW_CCE();
    if (!equals_0(this.o1d_1, tmp0_other_with_cast.o1d_1))
      return false;
    if (!(this.p1d_1 === tmp0_other_with_cast.p1d_1))
      return false;
    return true;
  };
  function BigInteger32Arithmetic() {
    BigInteger32Arithmetic_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.intArrayOf' call
    tmp$ret$0 = new Int32Array([]);
    tmp.q1d_1 = tmp$ret$0;
    this.r1d_1 = _ULong___init__impl__c78o9k(new Long(-1, 0));
    this.s1d_1 = _UInt___init__impl__l7qpdl(-1);
    this.t1d_1 = _ULong___init__impl__c78o9k(new Long(0, 1));
    this.u1d_1 = _ULong___init__impl__c78o9k(new Long(65535, 0));
    this.v1d_1 = _UInt___init__impl__l7qpdl(-1);
    this.w1d_1 = 32;
    this.x1d_1 = 32;
    this.y1d_1 = _UIntArray___init__impl__ghjpc6_0(0);
    var tmp_0 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.UIntArray' call
    var tmp_1 = 0;
    var tmp_2 = 1;
    var tmp_3 = new Int32Array(tmp_2);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$3;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.ONE.<anonymous>' call
      tmp$ret$1 = _UInt___init__impl__l7qpdl(1);
      var tmp0_toInt = tmp$ret$1;
      tmp$ret$2 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$3 = tmp$ret$2;
      tmp_3[tmp_4] = tmp$ret$3;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp$ret$4 = _UIntArray___init__impl__ghjpc6(tmp_3);
    tmp_0.z1d_1 = tmp$ret$4;
    var tmp_5 = this;
    var tmp$ret$8;
    // Inline function 'kotlin.UIntArray' call
    var tmp_6 = 0;
    var tmp_7 = 1;
    var tmp_8 = new Int32Array(tmp_7);
    while (tmp_6 < tmp_7) {
      var tmp_9 = tmp_6;
      var tmp$ret$7;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$6;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$5;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.TWO.<anonymous>' call
      tmp$ret$5 = _UInt___init__impl__l7qpdl(2);
      var tmp0_toInt_0 = tmp$ret$5;
      tmp$ret$6 = _UInt___get_data__impl__f0vqqw(tmp0_toInt_0);
      tmp$ret$7 = tmp$ret$6;
      tmp_8[tmp_9] = tmp$ret$7;
      tmp_6 = tmp_6 + 1 | 0;
    }
    tmp$ret$8 = _UIntArray___init__impl__ghjpc6(tmp_8);
    tmp_5.a1e_1 = tmp$ret$8;
    var tmp_10 = this;
    var tmp$ret$12;
    // Inline function 'kotlin.UIntArray' call
    var tmp_11 = 0;
    var tmp_12 = 1;
    var tmp_13 = new Int32Array(tmp_12);
    while (tmp_11 < tmp_12) {
      var tmp_14 = tmp_11;
      var tmp$ret$11;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$10;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$9;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.TEN.<anonymous>' call
      tmp$ret$9 = _UInt___init__impl__l7qpdl(10);
      var tmp0_toInt_1 = tmp$ret$9;
      tmp$ret$10 = _UInt___get_data__impl__f0vqqw(tmp0_toInt_1);
      tmp$ret$11 = tmp$ret$10;
      tmp_13[tmp_14] = tmp$ret$11;
      tmp_11 = tmp_11 + 1 | 0;
    }
    tmp$ret$12 = _UIntArray___init__impl__ghjpc6(tmp_13);
    tmp_10.b1e_1 = tmp$ret$12;
    this.c1e_1 = 60;
    this.d1e_1 = 15000;
    this.e1e_1 = new SignedUIntArray(this.a1e_1, true);
  }
  BigInteger32Arithmetic.prototype.f1e = function (value) {
    var x = value;
    var y;
    var n = this.w1d_1;
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.shr' call
    var tmp0_shr = x;
    tmp$ret$0 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shr) >>> 16 | 0);
    y = tmp$ret$0;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 16 | 0;
      x = y;
    }
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.shr' call
    var tmp1_shr = x;
    tmp$ret$1 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shr) >>> 8 | 0);
    y = tmp$ret$1;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 8 | 0;
      x = y;
    }
    var tmp$ret$2;
    // Inline function 'kotlin.UInt.shr' call
    var tmp2_shr = x;
    tmp$ret$2 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp2_shr) >>> 4 | 0);
    y = tmp$ret$2;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 4 | 0;
      x = y;
    }
    var tmp$ret$3;
    // Inline function 'kotlin.UInt.shr' call
    var tmp3_shr = x;
    tmp$ret$3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp3_shr) >>> 2 | 0);
    y = tmp$ret$3;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 2 | 0;
      x = y;
    }
    var tmp$ret$4;
    // Inline function 'kotlin.UInt.shr' call
    var tmp4_shr = x;
    tmp$ret$4 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp4_shr) >>> 1 | 0);
    y = tmp$ret$4;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      return n - 2 | 0;
    }
    var tmp = n;
    var tmp$ret$5;
    // Inline function 'kotlin.UInt.toInt' call
    var tmp5_toInt = x;
    tmp$ret$5 = _UInt___get_data__impl__f0vqqw(tmp5_toInt);
    return tmp - tmp$ret$5 | 0;
  };
  BigInteger32Arithmetic.prototype.g1e = function (value) {
    if (UIntArray__isEmpty_impl_vd8j4n(value)) {
      return 0;
    }
    var mostSignificant = UIntArray__get_impl_gp5kza(value, _UIntArray___get_size__impl__r6l8ci(value) - 1 | 0);
    return this.h1e(mostSignificant) + imul(_UIntArray___get_size__impl__r6l8ci(value) - 1 | 0, this.w1d_1) | 0;
  };
  BigInteger32Arithmetic.prototype.h1e = function (value) {
    return this.w1d_1 - this.f1e(value) | 0;
  };
  BigInteger32Arithmetic.prototype.i1e = function (bigInteger) {
    var tmp$ret$4;
    // Inline function 'kotlin.collections.indexOfLast' call
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(bigInteger);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$2;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1__anonymous__uwfjfc = tmp0_indexOfLast[index];
          var tmp$ret$1;
          // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.removeLeadingZeros.<anonymous>' call
          var tmp$ret$0;
          // Inline function 'kotlin.toUInt' call
          tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp1__anonymous__uwfjfc);
          var tmp0__anonymous__q1qw7t = tmp$ret$0;
          tmp$ret$1 = !(tmp0__anonymous__q1qw7t === _UInt___init__impl__l7qpdl(0));
          tmp$ret$2 = tmp$ret$1;
          if (tmp$ret$2) {
            tmp$ret$3 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = -1;
    }
    tmp$ret$4 = tmp$ret$3;
    var firstEmpty = tmp$ret$4 + 1 | 0;
    if (firstEmpty === -1 ? true : firstEmpty === 0) {
      return this.y1d_1;
    }
    var tmp$ret$5;
    // Inline function 'kotlin.collections.copyOfRange' call
    tmp$ret$5 = _UIntArray___init__impl__ghjpc6(copyOfRange_0(_UIntArray___get_storage__impl__92a0v0(bigInteger), 0, firstEmpty));
    return tmp$ret$5;
  };
  BigInteger32Arithmetic.prototype.j1e = function (bigInteger) {
    var lastNonEmptyIndex = _UIntArray___get_size__impl__r6l8ci(bigInteger) - 1 | 0;
    if (lastNonEmptyIndex <= 0) {
      return 0;
    }
    var element = UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex);
    while (element === _UInt___init__impl__l7qpdl(0) ? lastNonEmptyIndex > 0 : false) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
      element = UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex);
    }
    if (UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex) === _UInt___init__impl__l7qpdl(0)) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
    }
    return (_UIntArray___get_size__impl__r6l8ci(bigInteger) - lastNonEmptyIndex | 0) - 1 | 0;
  };
  BigInteger32Arithmetic.prototype.k1e = function (operand, places) {
    if (UIntArray__isEmpty_impl_vd8j4n(operand) ? true : places === 0) {
      return operand;
    }
    var originalSize = _UIntArray___get_size__impl__r6l8ci(operand);
    var leadingZeros = this.f1e(UIntArray__get_impl_gp5kza(operand, _UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0));
    var shiftWords = places / this.w1d_1 | 0;
    var shiftBits = places % this.w1d_1 | 0;
    var tmp;
    if (shiftBits > leadingZeros) {
      tmp = shiftWords + 1 | 0;
    } else {
      tmp = shiftWords;
    }
    var wordsNeeded = tmp;
    if (shiftBits === 0) {
      var tmp$ret$3;
      // Inline function 'kotlin.UIntArray' call
      var tmp0_UIntArray = _UIntArray___get_size__impl__r6l8ci(operand) + wordsNeeded | 0;
      var tmp_0 = 0;
      var tmp_1 = tmp0_UIntArray;
      var tmp_2 = new Int32Array(tmp_1);
      while (tmp_0 < tmp_1) {
        var tmp_3 = tmp_0;
        var tmp$ret$2;
        // Inline function 'kotlin.UIntArray.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.UInt.toInt' call
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftLeft.<anonymous>' call
        var tmp0_subject = tmp_3;
        tmp$ret$0 = (0 <= tmp0_subject ? tmp0_subject < shiftWords : false) ? _UInt___init__impl__l7qpdl(0) : UIntArray__get_impl_gp5kza(operand, tmp_3 - shiftWords | 0);
        var tmp0_toInt = tmp$ret$0;
        tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
        tmp$ret$2 = tmp$ret$1;
        tmp_2[tmp_3] = tmp$ret$2;
        tmp_0 = tmp_0 + 1 | 0;
      }
      tmp$ret$3 = _UIntArray___init__impl__ghjpc6(tmp_2);
      return tmp$ret$3;
    }
    var tmp$ret$12;
    // Inline function 'kotlin.UIntArray' call
    var tmp1_UIntArray = _UIntArray___get_size__impl__r6l8ci(operand) + wordsNeeded | 0;
    var tmp_4 = 0;
    var tmp_5 = tmp1_UIntArray;
    var tmp_6 = new Int32Array(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      var tmp$ret$11;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$10;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$9;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftLeft.<anonymous>' call
      var tmp0_subject_0 = tmp_7;
      var tmp_8;
      if (0 <= tmp0_subject_0 ? tmp0_subject_0 < shiftWords : false) {
        tmp_8 = _UInt___init__impl__l7qpdl(0);
      } else {
        if (tmp0_subject_0 === shiftWords) {
          var tmp$ret$4;
          // Inline function 'kotlin.UInt.shl' call
          var tmp0_shl = UIntArray__get_impl_gp5kza(operand, tmp_7 - shiftWords | 0);
          tmp$ret$4 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shl) << shiftBits);
          tmp_8 = tmp$ret$4;
        } else {
          var containsLower = shiftWords + 1 | 0;
          if (tmp0_subject_0 < (originalSize + shiftWords | 0) ? containsLower <= tmp0_subject_0 : false) {
            var tmp$ret$7;
            // Inline function 'kotlin.UInt.or' call
            var tmp$ret$5;
            // Inline function 'kotlin.UInt.shl' call
            var tmp1_shl = UIntArray__get_impl_gp5kza(operand, tmp_7 - shiftWords | 0);
            tmp$ret$5 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shl) << shiftBits);
            var tmp4_or = tmp$ret$5;
            var tmp$ret$6;
            // Inline function 'kotlin.UInt.shr' call
            var tmp2_shr = UIntArray__get_impl_gp5kza(operand, (tmp_7 - shiftWords | 0) - 1 | 0);
            var tmp3_shr = BigInteger32Arithmetic_getInstance().w1d_1 - shiftBits | 0;
            tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp2_shr) >>> tmp3_shr | 0);
            var tmp5_or = tmp$ret$6;
            tmp$ret$7 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp4_or) | _UInt___get_data__impl__f0vqqw(tmp5_or));
            tmp_8 = tmp$ret$7;
          } else {
            if (tmp0_subject_0 === ((originalSize + wordsNeeded | 0) - 1 | 0)) {
              var tmp$ret$8;
              // Inline function 'kotlin.UInt.shr' call
              var tmp6_shr = UIntArray__get_impl_gp5kza(operand, tmp_7 - wordsNeeded | 0);
              var tmp7_shr = BigInteger32Arithmetic_getInstance().w1d_1 - shiftBits | 0;
              tmp$ret$8 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp6_shr) >>> tmp7_shr | 0);
              tmp_8 = tmp$ret$8;
            } else {
              throw RuntimeException_init_$Create$('Invalid case ' + tmp_7);
            }
          }
        }
      }
      tmp$ret$9 = tmp_8;
      var tmp0_toInt_0 = tmp$ret$9;
      tmp$ret$10 = _UInt___get_data__impl__f0vqqw(tmp0_toInt_0);
      tmp$ret$11 = tmp$ret$10;
      tmp_6[tmp_7] = tmp$ret$11;
      tmp_4 = tmp_4 + 1 | 0;
    }
    tmp$ret$12 = _UIntArray___init__impl__ghjpc6(tmp_6);
    return tmp$ret$12;
  };
  BigInteger32Arithmetic.prototype.l1e = function (operand, places) {
    if (UIntArray__isEmpty_impl_vd8j4n(operand) ? true : places === 0) {
      return operand;
    }
    var shiftBits = places % this.w1d_1 | 0;
    var wordsToDiscard = places / this.w1d_1 | 0;
    if (wordsToDiscard >= _UIntArray___get_size__impl__r6l8ci(operand)) {
      return this.y1d_1;
    }
    if (shiftBits === 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOfRange' call
      var tmp0_copyOfRange = _UIntArray___get_size__impl__r6l8ci(operand);
      tmp$ret$0 = _UIntArray___init__impl__ghjpc6(copyOfRange_0(_UIntArray___get_storage__impl__92a0v0(operand), wordsToDiscard, tmp0_copyOfRange));
      return tmp$ret$0;
    }
    if (_UIntArray___get_size__impl__r6l8ci(operand) > 1 ? (_UIntArray___get_size__impl__r6l8ci(operand) - wordsToDiscard | 0) === 1 : false) {
      var tmp$ret$2;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.shr' call
      var tmp1_shr = UIntArray__get_impl_gp5kza(operand, _UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0);
      tmp$ret$1 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shr) >>> shiftBits | 0);
      var tmp2_uintArrayOf = _UIntArray___init__impl__ghjpc6(new Int32Array([tmp$ret$1]));
      tmp$ret$2 = tmp2_uintArrayOf;
      return tmp$ret$2;
    }
    var tmp$ret$10;
    // Inline function 'kotlin.UIntArray' call
    var tmp3_UIntArray = _UIntArray___get_size__impl__r6l8ci(operand) - wordsToDiscard | 0;
    var tmp = 0;
    var tmp_0 = tmp3_UIntArray;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$9;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$8;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$7;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftRight.<anonymous>' call
      var tmp0_subject = tmp_2;
      var tmp_3;
      if (0 <= tmp0_subject ? tmp0_subject < ((_UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0) - wordsToDiscard | 0) : false) {
        var tmp$ret$5;
        // Inline function 'kotlin.UInt.or' call
        var tmp$ret$3;
        // Inline function 'kotlin.UInt.shr' call
        var tmp0_shr = UIntArray__get_impl_gp5kza(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shr) >>> shiftBits | 0);
        var tmp3_or = tmp$ret$3;
        var tmp$ret$4;
        // Inline function 'kotlin.UInt.shl' call
        var tmp1_shl = UIntArray__get_impl_gp5kza(operand, (tmp_2 + wordsToDiscard | 0) + 1 | 0);
        var tmp2_shl = BigInteger32Arithmetic_getInstance().w1d_1 - shiftBits | 0;
        tmp$ret$4 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shl) << tmp2_shl);
        var tmp4_or = tmp$ret$4;
        tmp$ret$5 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp3_or) | _UInt___get_data__impl__f0vqqw(tmp4_or));
        tmp_3 = tmp$ret$5;
      } else if (tmp0_subject === ((_UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0) - wordsToDiscard | 0)) {
        var tmp$ret$6;
        // Inline function 'kotlin.UInt.shr' call
        var tmp5_shr = UIntArray__get_impl_gp5kza(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_shr) >>> shiftBits | 0);
        tmp_3 = tmp$ret$6;
      } else {
        throw RuntimeException_init_$Create$('Invalid case ' + tmp_2);
      }
      tmp$ret$7 = tmp_3;
      var tmp0_toInt = tmp$ret$7;
      tmp$ret$8 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$9 = tmp$ret$8;
      tmp_1[tmp_2] = tmp$ret$9;
      tmp = tmp + 1 | 0;
    }
    tmp$ret$10 = _UIntArray___init__impl__ghjpc6(tmp_1);
    var result = tmp$ret$10;
    return this.i1e(result);
  };
  BigInteger32Arithmetic.prototype.m1e = function (dividend, divisor) {
    var divisorSize = _UIntArray___get_size__impl__r6l8ci(divisor);
    var normalizationShift = this.f1e(UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0));
    var divisorNormalized = this.n1e(divisor, normalizationShift);
    var dividendNormalized = this.n1e(dividend, normalizationShift);
    return new Triple(new UIntArray(dividendNormalized), new UIntArray(divisorNormalized), normalizationShift);
  };
  BigInteger32Arithmetic.prototype.o1e = function (remainderNormalized, normalizationShift) {
    var remainder = this.p1e(remainderNormalized, normalizationShift);
    return remainder;
  };
  BigInteger32Arithmetic.prototype.q1e = function (first, second) {
    var firstStart = _UIntArray___get_size__impl__r6l8ci(first) - this.j1e(first) | 0;
    var secondStart = _UIntArray___get_size__impl__r6l8ci(second) - this.j1e(second) | 0;
    if (firstStart > secondStart) {
      return 1;
    }
    if (secondStart > firstStart) {
      return -1;
    }
    var counter = firstStart - 1 | 0;
    var firstIsLarger = false;
    var bothAreEqual = true;
    $l$loop_0: while (counter >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.compareTo' call
      var tmp0_compareTo = UIntArray__get_impl_gp5kza(first, counter);
      var tmp1_compareTo = UIntArray__get_impl_gp5kza(second, counter);
      tmp$ret$0 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo));
      if (tmp$ret$0 > 0) {
        firstIsLarger = true;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.compareTo' call
      var tmp2_compareTo = UIntArray__get_impl_gp5kza(first, counter);
      var tmp3_compareTo = UIntArray__get_impl_gp5kza(second, counter);
      tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo));
      if (tmp$ret$1 < 0) {
        firstIsLarger = false;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp0 = counter;
      counter = tmp0 - 1 | 0;
    }
    if (bothAreEqual) {
      return 0;
    }
    if (firstIsLarger) {
      return 1;
    } else {
      return -1;
    }
  };
  BigInteger32Arithmetic.prototype.r1e = function (first, second) {
    if (_UIntArray___get_size__impl__r6l8ci(first) === 1 ? UIntArray__get_impl_gp5kza(first, 0) === _UInt___init__impl__l7qpdl(0) : false)
      return second;
    if (_UIntArray___get_size__impl__r6l8ci(second) === 1 ? UIntArray__get_impl_gp5kza(second, 0) === _UInt___init__impl__l7qpdl(0) : false)
      return first;
    var tmp;
    if (_UIntArray___get_size__impl__r6l8ci(first) > _UIntArray___get_size__impl__r6l8ci(second)) {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(first), _UIntArray___get_size__impl__r6l8ci(second), new UIntArray(first), new UIntArray(second));
    } else {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(second), _UIntArray___get_size__impl__r6l8ci(first), new UIntArray(second), new UIntArray(first));
    }
    var tmp0_container = tmp;
    var maxLength = tmp0_container.o2();
    var minLength = tmp0_container.p2();
    var largerData = tmp0_container.w4().i5_1;
    var smallerData = tmp0_container.h1d().i5_1;
    var tmp$ret$3;
    // Inline function 'kotlin.UIntArray' call
    var tmp0_UIntArray = maxLength + 1 | 0;
    var tmp_0 = 0;
    var tmp_1 = tmp0_UIntArray;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.add.<anonymous>' call
      tmp$ret$0 = _UInt___init__impl__l7qpdl(0);
      var tmp0_toInt = tmp$ret$0;
      tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$2 = tmp$ret$1;
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$3 = _UIntArray___init__impl__ghjpc6(tmp_2);
    var result = tmp$ret$3;
    var i = 0;
    var sum = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < minLength) {
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.plus' call
      var tmp1_plus = sum;
      var tmp2_plus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp$ret$5;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$4;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$4 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp2_plus)).c5(new Long(-1, 0)));
      var tmp0_plus = tmp$ret$4;
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus).b4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
      tmp$ret$6 = tmp$ret$5;
      var tmp3_plus = tmp$ret$6;
      var tmp4_plus = UIntArray__get_impl_gp5kza(smallerData, i);
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$7;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$7 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp4_plus)).c5(new Long(-1, 0)));
      var tmp0_plus_0 = tmp$ret$7;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_plus).b4(_ULong___get_data__impl__fggpzb(tmp0_plus_0)));
      tmp$ret$9 = tmp$ret$8;
      sum = tmp$ret$9;
      var tmp_4 = i;
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.and' call
      var tmp5_and = sum;
      var tmp6_and = this.r1d_1;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_and).c5(_ULong___get_data__impl__fggpzb(tmp6_and)));
      var tmp7_toUInt = tmp$ret$10;
      var tmp$ret$11;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp7_toUInt);
      tmp$ret$11 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
      tmp$ret$12 = tmp$ret$11;
      UIntArray__set_impl_7f2zu2(result, tmp_4, tmp$ret$12);
      var tmp$ret$13;
      // Inline function 'kotlin.ULong.shr' call
      var tmp8_shr = sum;
      var tmp9_shr = this.w1d_1;
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_shr).x5(tmp9_shr));
      sum = tmp$ret$13;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (true) {
      if (equals_0(sum, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
        while (i < maxLength) {
          UIntArray__set_impl_7f2zu2(result, i, UIntArray__get_impl_gp5kza(largerData, i));
          var tmp2 = i;
          i = tmp2 + 1 | 0;
        }
        var tmp_5;
        if (UIntArray__get_impl_gp5kza(result, _UIntArray___get_size__impl__r6l8ci(result) - 1 | 0) === _UInt___init__impl__l7qpdl(0)) {
          var tmp$ret$14;
          // Inline function 'kotlin.collections.copyOfRange' call
          var tmp10_copyOfRange = _UIntArray___get_size__impl__r6l8ci(result) - 1 | 0;
          tmp$ret$14 = _UIntArray___init__impl__ghjpc6(copyOfRange_0(_UIntArray___get_storage__impl__92a0v0(result), 0, tmp10_copyOfRange));
          tmp_5 = tmp$ret$14;
        } else {
          tmp_5 = result;
        }
        return tmp_5;
      }
      if (i === maxLength) {
        var tmp$ret$16;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp11_toUInt = sum;
        var tmp$ret$15;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp11_toUInt);
        tmp$ret$15 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u5());
        tmp$ret$16 = tmp$ret$15;
        UIntArray__set_impl_7f2zu2(result, maxLength, tmp$ret$16);
        return result;
      }
      var tmp$ret$19;
      // Inline function 'kotlin.ULong.plus' call
      var tmp12_plus = sum;
      var tmp13_plus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp$ret$18;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$17;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$17 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp13_plus)).c5(new Long(-1, 0)));
      var tmp0_plus_1 = tmp$ret$17;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_plus).b4(_ULong___get_data__impl__fggpzb(tmp0_plus_1)));
      tmp$ret$19 = tmp$ret$18;
      sum = tmp$ret$19;
      var tmp_6 = i;
      var tmp$ret$22;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp$ret$20;
      // Inline function 'kotlin.ULong.and' call
      var tmp14_and = sum;
      var tmp15_and = this.r1d_1;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_and).c5(_ULong___get_data__impl__fggpzb(tmp15_and)));
      var tmp16_toUInt = tmp$ret$20;
      var tmp$ret$21;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt_1 = _ULong___get_data__impl__fggpzb(tmp16_toUInt);
      tmp$ret$21 = _UInt___init__impl__l7qpdl(tmp0_toUInt_1.u5());
      tmp$ret$22 = tmp$ret$21;
      UIntArray__set_impl_7f2zu2(result, tmp_6, tmp$ret$22);
      var tmp$ret$23;
      // Inline function 'kotlin.ULong.shr' call
      var tmp17_shr = sum;
      var tmp18_shr = this.w1d_1;
      tmp$ret$23 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_shr).x5(tmp18_shr));
      sum = tmp$ret$23;
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
  };
  BigInteger32Arithmetic.prototype.s1e = function (first, second) {
    var firstWithoutLeadingZeroes = this.i1e(first);
    var secondWithoutLeadingZeroes = this.i1e(second);
    var firstIsLarger = this.q1e(firstWithoutLeadingZeroes, secondWithoutLeadingZeroes) === 1;
    var tmp;
    if (firstIsLarger) {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(firstWithoutLeadingZeroes), _UIntArray___get_size__impl__r6l8ci(secondWithoutLeadingZeroes), new UIntArray(firstWithoutLeadingZeroes), new UIntArray(secondWithoutLeadingZeroes));
    } else {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(secondWithoutLeadingZeroes), _UIntArray___get_size__impl__r6l8ci(firstWithoutLeadingZeroes), new UIntArray(secondWithoutLeadingZeroes), new UIntArray(firstWithoutLeadingZeroes));
    }
    var tmp0_container = tmp;
    var largerLength = tmp0_container.o2();
    var smallerLength = tmp0_container.p2();
    var largerData = tmp0_container.w4().i5_1;
    var smallerData = tmp0_container.h1d().i5_1;
    var tmp$ret$3;
    // Inline function 'kotlin.UIntArray' call
    var tmp0_UIntArray = largerLength + 1 | 0;
    var tmp_0 = 0;
    var tmp_1 = tmp0_UIntArray;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
      tmp$ret$0 = _UInt___init__impl__l7qpdl(0);
      var tmp0_toInt = tmp$ret$0;
      tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$2 = tmp$ret$1;
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$3 = _UIntArray___init__impl__ghjpc6(tmp_2);
    var result = tmp$ret$3;
    var i = 0;
    var diff = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerLength) {
      if (i >= _UIntArray___get_size__impl__r6l8ci(largerData)) {
        println('Breakpoint');
      }
      if (i >= _UIntArray___get_size__impl__r6l8ci(smallerData)) {
        println('Breakpoint');
      }
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$7;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$4;
      // Inline function 'kotlin.UInt.toULong' call
      var tmp1_toULong = UIntArray__get_impl_gp5kza(largerData, i);
      tmp$ret$4 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp1_toULong)).c5(new Long(-1, 0)));
      var tmp2_minus = tmp$ret$4;
      var tmp3_minus = UIntArray__get_impl_gp5kza(smallerData, i);
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$5;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$5 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp3_minus)).c5(new Long(-1, 0)));
      var tmp0_minus = tmp$ret$5;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_minus).c4(_ULong___get_data__impl__fggpzb(tmp0_minus)));
      tmp$ret$7 = tmp$ret$6;
      var tmp4_minus = tmp$ret$7;
      var tmp5_minus = diff;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_minus).c4(_ULong___get_data__impl__fggpzb(tmp5_minus)));
      diff = tmp$ret$8;
      var tmp_4 = i;
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp6_toUInt = diff;
      var tmp$ret$9;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp6_toUInt);
      tmp$ret$9 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
      tmp$ret$10 = tmp$ret$9;
      UIntArray__set_impl_7f2zu2(result, tmp_4, tmp$ret$10);
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.shr' call
      var tmp$ret$11;
      // Inline function 'kotlin.ULong.and' call
      var tmp7_and = diff;
      var tmp8_and = this.t1d_1;
      tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_and).c5(_ULong___get_data__impl__fggpzb(tmp8_and)));
      var tmp9_shr = tmp$ret$11;
      var tmp10_shr = this.x1d_1;
      tmp$ret$12 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_shr).x5(tmp10_shr));
      diff = tmp$ret$12;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (!equals_0(diff, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      var tmp$ret$15;
      // Inline function 'kotlin.UInt.minus' call
      var tmp11_minus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp12_minus = diff;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$13;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$13 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp11_minus)).c5(new Long(-1, 0)));
      var tmp0_minus_0 = tmp$ret$13;
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus_0).c4(_ULong___get_data__impl__fggpzb(tmp12_minus)));
      tmp$ret$15 = tmp$ret$14;
      diff = tmp$ret$15;
      var tmp_5 = i;
      var tmp$ret$18;
      // Inline function 'kotlin.UInt.and' call
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp13_toUInt = diff;
      var tmp$ret$16;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp13_toUInt);
      tmp$ret$16 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u5());
      tmp$ret$17 = tmp$ret$16;
      var tmp14_and = tmp$ret$17;
      var tmp15_and = this.s1d_1;
      tmp$ret$18 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp14_and) & _UInt___get_data__impl__f0vqqw(tmp15_and));
      UIntArray__set_impl_7f2zu2(result, tmp_5, tmp$ret$18);
      var tmp$ret$20;
      // Inline function 'kotlin.ULong.shr' call
      var tmp$ret$19;
      // Inline function 'kotlin.ULong.and' call
      var tmp16_and = diff;
      var tmp17_and = this.t1d_1;
      tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_and).c5(_ULong___get_data__impl__fggpzb(tmp17_and)));
      var tmp18_shr = tmp$ret$19;
      var tmp19_shr = this.x1d_1;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp18_shr).x5(tmp19_shr));
      diff = tmp$ret$20;
      var tmp2 = i;
      i = tmp2 + 1 | 0;
    }
    while (i < largerLength) {
      UIntArray__set_impl_7f2zu2(result, i, UIntArray__get_impl_gp5kza(largerData, i));
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
    var tmp$ret$23;
    // Inline function 'kotlin.collections.filter' call
    var tmp$ret$22;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = UIntArray__iterator_impl_tkdv7k(result);
    while (tmp0_iterator.i()) {
      var element = tmp0_iterator.j().b5_1;
      var tmp$ret$21;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
      tmp$ret$21 = element === _UInt___init__impl__l7qpdl(0);
      if (tmp$ret$21) {
        tmp0_filterTo.e(new UInt(element));
      }
    }
    tmp$ret$22 = tmp0_filterTo;
    tmp$ret$23 = tmp$ret$22;
    if (tmp$ret$23.k()) {
      return this.y1d_1;
    }
    var tmp$ret$28;
    // Inline function 'kotlin.collections.indexOfLast' call
    var tmp$ret$27;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(result);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$26;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1__anonymous__uwfjfc = tmp0_indexOfLast[index];
          var tmp$ret$25;
          // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
          var tmp$ret$24;
          // Inline function 'kotlin.toUInt' call
          tmp$ret$24 = _UInt___init__impl__l7qpdl(tmp1__anonymous__uwfjfc);
          var tmp20__anonymous__q2j3lv = tmp$ret$24;
          tmp$ret$25 = !(tmp20__anonymous__q2j3lv === _UInt___init__impl__l7qpdl(0));
          tmp$ret$26 = tmp$ret$25;
          if (tmp$ret$26) {
            tmp$ret$27 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$27 = -1;
    }
    tmp$ret$28 = tmp$ret$27;
    var firstEmpty = tmp$ret$28 + 1 | 0;
    var tmp$ret$29;
    // Inline function 'kotlin.collections.copyOfRange' call
    tmp$ret$29 = _UIntArray___init__impl__ghjpc6(copyOfRange_0(_UIntArray___get_storage__impl__92a0v0(result), 0, firstEmpty));
    return tmp$ret$29;
  };
  BigInteger32Arithmetic.prototype.t1e = function (first, second) {
    var result = _UIntArray___init__impl__ghjpc6_0(_UIntArray___get_size__impl__r6l8ci(first) + 1 | 0);
    var product;
    var sum;
    var inductionVariable = 0;
    var last = _UIntArray___get_size__impl__r6l8ci(first);
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.times' call
        var tmp$ret$0;
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_toULong = UIntArray__get_impl_gp5kza(first, i);
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).c5(new Long(-1, 0)));
        var tmp1_times = tmp$ret$0;
        var tmp$ret$2;
        // Inline function 'kotlin.ULong.times' call
        var tmp$ret$1;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$1 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(second)).c5(new Long(-1, 0)));
        var tmp0_times = tmp$ret$1;
        tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).a4(_ULong___get_data__impl__fggpzb(tmp0_times)));
        tmp$ret$3 = tmp$ret$2;
        product = tmp$ret$3;
        var tmp$ret$10;
        // Inline function 'kotlin.ULong.plus' call
        var tmp$ret$4;
        // Inline function 'kotlin.UInt.toULong' call
        var tmp2_toULong = UIntArray__get_impl_gp5kza(result, i);
        tmp$ret$4 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp2_toULong)).c5(new Long(-1, 0)));
        var tmp6_plus = tmp$ret$4;
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$5;
        // Inline function 'kotlin.ULong.and' call
        var tmp3_and = product;
        var tmp4_and = this.r1d_1;
        tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_and).c5(_ULong___get_data__impl__fggpzb(tmp4_and)));
        var tmp5_toUInt = tmp$ret$5;
        var tmp$ret$6;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp5_toUInt);
        tmp$ret$6 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
        tmp$ret$7 = tmp$ret$6;
        var tmp7_plus = tmp$ret$7;
        var tmp$ret$9;
        // Inline function 'kotlin.ULong.plus' call
        var tmp$ret$8;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$8 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp7_plus)).c5(new Long(-1, 0)));
        var tmp0_plus = tmp$ret$8;
        tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_plus).b4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
        tmp$ret$10 = tmp$ret$9;
        sum = tmp$ret$10;
        var tmp$ret$13;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$11;
        // Inline function 'kotlin.ULong.and' call
        var tmp8_and = sum;
        var tmp9_and = this.r1d_1;
        tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_and).c5(_ULong___get_data__impl__fggpzb(tmp9_and)));
        var tmp10_toUInt = tmp$ret$11;
        var tmp$ret$12;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp10_toUInt);
        tmp$ret$12 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u5());
        tmp$ret$13 = tmp$ret$12;
        UIntArray__set_impl_7f2zu2(result, i, tmp$ret$13);
        var tmp$ret$14;
        // Inline function 'kotlin.ULong.shr' call
        var tmp11_shr = sum;
        var tmp12_shr = this.w1d_1;
        tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_shr).x5(tmp12_shr));
        sum = tmp$ret$14;
        var tmp = i + 1 | 0;
        var tmp$ret$20;
        // Inline function 'kotlin.UInt.plus' call
        var tmp$ret$17;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$15;
        // Inline function 'kotlin.ULong.shr' call
        var tmp13_shr = product;
        var tmp14_shr = this.w1d_1;
        tmp$ret$15 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_shr).x5(tmp14_shr));
        var tmp15_toUInt = tmp$ret$15;
        var tmp$ret$16;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_1 = _ULong___get_data__impl__fggpzb(tmp15_toUInt);
        tmp$ret$16 = _UInt___init__impl__l7qpdl(tmp0_toUInt_1.u5());
        tmp$ret$17 = tmp$ret$16;
        var tmp17_plus = tmp$ret$17;
        var tmp$ret$19;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp16_toUInt = sum;
        var tmp$ret$18;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_2 = _ULong___get_data__impl__fggpzb(tmp16_toUInt);
        tmp$ret$18 = _UInt___init__impl__l7qpdl(tmp0_toUInt_2.u5());
        tmp$ret$19 = tmp$ret$18;
        var tmp18_plus = tmp$ret$19;
        tmp$ret$20 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp17_plus) + _UInt___get_data__impl__f0vqqw(tmp18_plus) | 0);
        UIntArray__set_impl_7f2zu2(result, tmp, tmp$ret$20);
      }
       while (inductionVariable < last);
    return this.i1e(result);
  };
  BigInteger32Arithmetic.prototype.u1e = function (first, second) {
    return this.v1e(first, second);
  };
  BigInteger32Arithmetic.prototype.v1e = function (unnormalizedDividend, unnormalizedDivisor) {
    if (this.w1e(unnormalizedDivisor, unnormalizedDividend) > 0) {
      return new Pair(new UIntArray(this.y1d_1), new UIntArray(unnormalizedDividend));
    }
    if (_UIntArray___get_size__impl__r6l8ci(unnormalizedDivisor) === 1 ? _UIntArray___get_size__impl__r6l8ci(unnormalizedDividend) === 1 : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.div' call
      var tmp0_div = UIntArray__get_impl_gp5kza(unnormalizedDividend, 0);
      var tmp1_div = UIntArray__get_impl_gp5kza(unnormalizedDivisor, 0);
      tmp$ret$0 = uintDivide(tmp0_div, tmp1_div);
      var tmp2_uintArrayOf = _UIntArray___init__impl__ghjpc6(new Int32Array([tmp$ret$0]));
      tmp$ret$1 = tmp2_uintArrayOf;
      var tmp = new UIntArray(this.i1e(tmp$ret$1));
      var tmp$ret$3;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.UInt.rem' call
      var tmp3_rem = UIntArray__get_impl_gp5kza(unnormalizedDividend, 0);
      var tmp4_rem = UIntArray__get_impl_gp5kza(unnormalizedDivisor, 0);
      tmp$ret$2 = uintRemainder(tmp3_rem, tmp4_rem);
      var tmp5_uintArrayOf = _UIntArray___init__impl__ghjpc6(new Int32Array([tmp$ret$2]));
      tmp$ret$3 = tmp5_uintArrayOf;
      return new Pair(tmp, new UIntArray(this.i1e(tmp$ret$3)));
    }
    var bitPrecision = this.g1e(unnormalizedDividend) - this.g1e(unnormalizedDivisor) | 0;
    if (bitPrecision === 0) {
      var tmp$ret$4;
      // Inline function 'kotlin.uintArrayOf' call
      tmp$ret$4 = _UIntArray___init__impl__ghjpc6(new Int32Array([_UInt___init__impl__l7qpdl(1)]));
      return new Pair(new UIntArray(tmp$ret$4), new UIntArray(this.x1e(unnormalizedDividend, unnormalizedDivisor)));
    }
    var tmp0_container = this.m1e(unnormalizedDividend, unnormalizedDivisor);
    var dividend = tmp0_container.o2().i5_1;
    var divisor = tmp0_container.p2().i5_1;
    var normalizationShift = tmp0_container.w4();
    var dividendSize = _UIntArray___get_size__impl__r6l8ci(dividend);
    var divisorSize = _UIntArray___get_size__impl__r6l8ci(divisor);
    var wordPrecision = dividendSize - divisorSize | 0;
    var qjhat;
    var reconstructedQuotient;
    var quotient = _UIntArray___init__impl__ghjpc6_0(wordPrecision);
    var divisorTimesBaseToPowerOfM = this.n1e(divisor, imul(wordPrecision, this.w1d_1));
    if (this.w1e(dividend, divisorTimesBaseToPowerOfM) >= 0) {
      quotient = _UIntArray___init__impl__ghjpc6_0(wordPrecision + 1 | 0);
      UIntArray__set_impl_7f2zu2(quotient, wordPrecision, _UInt___init__impl__l7qpdl(1));
      dividend = this.x1e(dividend, divisorTimesBaseToPowerOfM);
    }
    var inductionVariable = wordPrecision - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0;
        if ((divisorSize + j | 0) < _UIntArray___get_size__impl__r6l8ci(dividend)) {
          var tmp$ret$12;
          // Inline function 'kotlin.ULong.div' call
          var tmp$ret$9;
          // Inline function 'kotlin.ULong.plus' call
          var tmp$ret$6;
          // Inline function 'kotlin.ULong.shl' call
          var tmp$ret$5;
          // Inline function 'kotlin.UInt.toULong' call
          var tmp6_toULong = UIntArray__get_impl_gp5kza(dividend, divisorSize + j | 0);
          tmp$ret$5 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp6_toULong)).c5(new Long(-1, 0)));
          var tmp7_shl = tmp$ret$5;
          var tmp8_shl = this.w1d_1;
          tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shl).y5(tmp8_shl));
          var tmp9_plus = tmp$ret$6;
          var tmp10_plus = UIntArray__get_impl_gp5kza(dividend, (divisorSize + j | 0) - 1 | 0);
          var tmp$ret$8;
          // Inline function 'kotlin.ULong.plus' call
          var tmp$ret$7;
          // Inline function 'kotlin.UInt.toULong' call
          tmp$ret$7 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp10_plus)).c5(new Long(-1, 0)));
          var tmp0_plus = tmp$ret$7;
          tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_plus).b4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
          tmp$ret$9 = tmp$ret$8;
          var tmp11_div = tmp$ret$9;
          var tmp12_div = UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0);
          var tmp$ret$11;
          // Inline function 'kotlin.ULong.div' call
          var tmp$ret$10;
          // Inline function 'kotlin.UInt.toULong' call
          tmp$ret$10 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp12_div)).c5(new Long(-1, 0)));
          var tmp0_div_0 = tmp$ret$10;
          tmp$ret$11 = ulongDivide(tmp11_div, tmp0_div_0);
          tmp$ret$12 = tmp$ret$11;
          tmp_0 = tmp$ret$12;
        } else {
          var tmp_1;
          if ((divisorSize + j | 0) === _UIntArray___get_size__impl__r6l8ci(dividend)) {
            var tmp$ret$14;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp$ret$13;
            // Inline function 'kotlin.UInt.div' call
            var tmp13_div = UIntArray__get_impl_gp5kza(dividend, (divisorSize + j | 0) - 1 | 0);
            var tmp14_div = UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0);
            tmp$ret$13 = uintDivide(tmp13_div, tmp14_div);
            var tmp15_toULong = tmp$ret$13;
            tmp$ret$14 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp15_toULong)).c5(new Long(-1, 0)));
            tmp_1 = tmp$ret$14;
          } else {
            tmp_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
          }
          tmp_0 = tmp_1;
        }
        qjhat = tmp_0;
        var tmp_2 = quotient;
        var tmp_3;
        var tmp$ret$18;
        // Inline function 'kotlin.ULong.compareTo' call
        var tmp17_compareTo = qjhat;
        var tmp$ret$17;
        // Inline function 'kotlin.UInt.minus' call
        var tmp16_minus = this.v1d_1;
        var tmp$ret$16;
        // Inline function 'kotlin.ULong.minus' call
        var tmp$ret$15;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$15 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp16_minus)).c5(new Long(-1, 0)));
        var tmp0_minus = tmp$ret$15;
        tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).c4(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(1, 0)))));
        tmp$ret$17 = tmp$ret$16;
        var tmp18_compareTo = tmp$ret$17;
        tmp$ret$18 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp17_compareTo), _ULong___get_data__impl__fggpzb(tmp18_compareTo));
        if (tmp$ret$18 < 0) {
          var tmp$ret$20;
          // Inline function 'kotlin.ULong.toUInt' call
          var tmp19_toUInt = qjhat;
          var tmp$ret$19;
          // Inline function 'kotlin.toUInt' call
          var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp19_toUInt);
          tmp$ret$19 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
          tmp$ret$20 = tmp$ret$19;
          tmp_3 = tmp$ret$20;
        } else {
          var tmp$ret$21;
          // Inline function 'kotlin.UInt.minus' call
          var tmp20_minus = this.v1d_1;
          tmp$ret$21 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp20_minus) - _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1)) | 0);
          tmp_3 = tmp$ret$21;
        }
        UIntArray__set_impl_7f2zu2(tmp_2, j, tmp_3);
        reconstructedQuotient = this.n1e(this.y1e(divisor, UIntArray__get_impl_gp5kza(quotient, j)), imul(j, this.w1d_1));
        while (this.w1e(reconstructedQuotient, dividend) > 0) {
          var tmp_4 = quotient;
          var tmp$ret$22;
          // Inline function 'kotlin.UInt.minus' call
          var tmp21_minus = UIntArray__get_impl_gp5kza(quotient, j);
          tmp$ret$22 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp21_minus) - _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1)) | 0);
          UIntArray__set_impl_7f2zu2(tmp_4, j, tmp$ret$22);
          reconstructedQuotient = this.n1e(this.y1e(divisor, UIntArray__get_impl_gp5kza(quotient, j)), imul(j, this.w1d_1));
        }
        dividend = this.x1e(dividend, reconstructedQuotient);
      }
       while (0 <= inductionVariable);
    while (this.w1e(dividend, divisor) >= 0) {
      quotient = this.z1e(quotient, _UInt___init__impl__l7qpdl(1));
      dividend = this.x1e(dividend, divisor);
    }
    var denormRemainder = this.o1e(dividend, normalizationShift);
    return new Pair(new UIntArray(this.i1e(quotient)), new UIntArray(denormRemainder));
  };
  BigInteger32Arithmetic.prototype.n1e = function (_this__u8e3s4, places) {
    return this.k1e(_this__u8e3s4, places);
  };
  BigInteger32Arithmetic.prototype.p1e = function (_this__u8e3s4, places) {
    return this.l1e(_this__u8e3s4, places);
  };
  BigInteger32Arithmetic.prototype.x1e = function (_this__u8e3s4, other) {
    return this.s1e(_this__u8e3s4, other);
  };
  BigInteger32Arithmetic.prototype.z1e = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.uintArrayOf' call
    tmp$ret$0 = _UIntArray___init__impl__ghjpc6(new Int32Array([other]));
    return this.r1e(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger32Arithmetic.prototype.y1e = function (_this__u8e3s4, other) {
    return this.t1e(_this__u8e3s4, other);
  };
  BigInteger32Arithmetic.prototype.w1e = function (_this__u8e3s4, other) {
    return this.q1e(_this__u8e3s4, other);
  };
  var BigInteger32Arithmetic_instance;
  function BigInteger32Arithmetic_getInstance() {
    if (BigInteger32Arithmetic_instance == null)
      new BigInteger32Arithmetic();
    return BigInteger32Arithmetic_instance;
  }
  function multiplyWithCorrectedSize($this, first, second, firstCorrectedSize, secondCorrectedSize) {
    if (isZero_0(first, $this) ? true : isZero_0(second, $this)) {
      return $this.p1b_1;
    }
    if ((firstCorrectedSize >= 120 ? true : secondCorrectedSize >= 120) ? firstCorrectedSize <= 15000 ? true : secondCorrectedSize < 15000 : false) {
      return karatsubaMultiplyWithCorrectedSizes($this, first, second, firstCorrectedSize, secondCorrectedSize);
    }
    if (firstCorrectedSize >= 15000 ? secondCorrectedSize >= 15000 : false) {
      return $this.a1f(first, second);
    }
    return basecaseMultiplyWithCorrectedSize($this, first, second, firstCorrectedSize, secondCorrectedSize);
  }
  function basecaseMultiplyWithCorrectedSize($this, first, second, firstCorrectedSizeStart, secondCorrectedSizeStart) {
    var resultArray = $this.p1b_1;
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = ULongArray__iterator_impl_cq4d2h(second);
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j().w_1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.basecaseMultiplyWithCorrectedSize.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = tmp1;
      if (tmp0__anonymous__q1qw7t > secondCorrectedSizeStart) {
      } else {
        resultArray = BigInteger63Arithmetic_getInstance().d1f(resultArray, BigInteger63Arithmetic_getInstance().c1f(BigInteger63Arithmetic_getInstance().b1f(first, item), imul(tmp0__anonymous__q1qw7t, BigInteger63Arithmetic_getInstance().u1b_1)));
      }
    }
    return resultArray;
  }
  function karatsubaMultiplyWithCorrectedSizes($this, firstUnsigned, secondUnsigned, firstCorrectedSize, secondCorrectedSize) {
    var first = new SignedULongArray(firstUnsigned, true);
    var second = new SignedULongArray(secondUnsigned, true);
    var tmp$ret$0;
    // Inline function 'kotlin.math.max' call
    tmp$ret$0 = Math.max(firstCorrectedSize, secondCorrectedSize);
    var halfLength = (tmp$ret$0 + 1 | 0) / 2 | 0;
    var mask = $this.e1f($this.c1f($this.q1b_1, imul(halfLength, $this.v1b_1)), _ULong___init__impl__c78o9k(new Long(1, 0)));
    var firstLower = $this.f1f(first, mask);
    var firstHigher = $this.g1f(first, imul(halfLength, $this.v1b_1));
    var secondLower = $this.f1f(second, mask);
    var secondHigher = $this.g1f(second, imul(halfLength, $this.v1b_1));
    var higherProduct = $this.h1f(firstHigher, secondHigher);
    var lowerProduct = $this.h1f(firstLower, secondLower);
    var middleProduct = $this.h1f($this.i1f(firstHigher, firstLower), $this.i1f(secondHigher, secondLower));
    var result = $this.i1f($this.i1f($this.j1f(higherProduct, imul(imul(2, $this.v1b_1), halfLength)), $this.j1f($this.k1f($this.k1f(middleProduct, higherProduct), lowerProduct), imul($this.v1b_1, halfLength))), lowerProduct);
    return result.l1f_1;
  }
  function isZero_0(_this__u8e3s4, $this) {
    if (equals_0(_this__u8e3s4, $this.p1b_1))
      return true;
    if (_ULongArray___get_size__impl__ju6dtr(_this__u8e3s4) === 1 ? equals_0(ULongArray__get_impl_pr71q9(_this__u8e3s4, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false)
      return true;
    if ((_ULongArray___get_size__impl__ju6dtr(_this__u8e3s4) - $this.n1f(_this__u8e3s4) | 0) === 0)
      return true;
    return false;
  }
  function SignedULongArray(unsignedValue, sign) {
    this.l1f_1 = unsignedValue;
    this.m1f_1 = sign;
  }
  SignedULongArray.prototype.o1f = function (unsignedValue, sign) {
    return new SignedULongArray(unsignedValue, sign);
  };
  SignedULongArray.prototype.p1f = function (unsignedValue, sign, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      unsignedValue = this.l1f_1;
    if (!(($mask0 & 2) === 0))
      sign = this.m1f_1;
    return this.o1f(unsignedValue, sign);
  };
  SignedULongArray.prototype.toString = function () {
    return 'SignedULongArray(unsignedValue=' + new ULongArray(this.l1f_1) + ', sign=' + this.m1f_1 + ')';
  };
  SignedULongArray.prototype.hashCode = function () {
    var result = ULongArray__hashCode_impl_aze4wa(this.l1f_1);
    result = imul(result, 31) + (this.m1f_1 | 0) | 0;
    return result;
  };
  SignedULongArray.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SignedULongArray))
      return false;
    var tmp0_other_with_cast = other instanceof SignedULongArray ? other : THROW_CCE();
    if (!equals_0(this.l1f_1, tmp0_other_with_cast.l1f_1))
      return false;
    if (!(this.m1f_1 === tmp0_other_with_cast.m1f_1))
      return false;
    return true;
  };
  function signedAdd($this, first, second) {
    var tmp;
    if (!!(first.m1f_1 ^ second.m1f_1)) {
      var tmp_0;
      if ($this.r1f(first.l1f_1, second.l1f_1) > 0) {
        tmp_0 = new SignedULongArray($this.q1f(first.l1f_1, second.l1f_1), first.m1f_1);
      } else {
        tmp_0 = new SignedULongArray($this.q1f(second.l1f_1, first.l1f_1), second.m1f_1);
      }
      tmp = tmp_0;
    } else {
      tmp = new SignedULongArray($this.d1f(first.l1f_1, second.l1f_1), first.m1f_1);
    }
    return tmp;
  }
  function signedSubtract($this, first, second) {
    return signedAdd($this, first, second.p1f(null, !second.m1f_1, 1, null));
  }
  function signedMultiply($this, first, second) {
    return new SignedULongArray($this.s1f(first.l1f_1, second.l1f_1), !!!(first.m1f_1 ^ second.m1f_1));
  }
  function signedDivide($this, first, second) {
    return new SignedULongArray($this.t1f(first.l1f_1, second.l1f_1), !!!(first.m1f_1 ^ second.m1f_1));
  }
  function BigInteger63Arithmetic() {
    BigInteger63Arithmetic_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.longArrayOf' call
    tmp$ret$0 = longArrayOf([]);
    tmp.o1b_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0))]));
    tmp_0.p1b_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$2 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1, 0))]));
    tmp_1.q1b_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$3 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(2, 0))]));
    tmp_2.r1b_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$4 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10, 0))]));
    tmp_3.s1b_1 = tmp$ret$4;
    var tmp_4 = this;
    var tmp$ret$5;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$5 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1431655765, 715827882))]));
    tmp_4.t1b_1 = tmp$ret$5;
    this.u1b_1 = 63;
    this.v1b_1 = 63;
    this.w1b_1 = _ULong___init__impl__c78o9k(new Long(-1, 2147483647));
    var tmp_5 = this;
    var tmp$ret$6;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$6 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1, 2147483647))]));
    tmp_5.x1b_1 = tmp$ret$6;
    this.y1b_1 = _ULong___init__impl__c78o9k(new Long(-1, 0));
    this.z1b_1 = _ULong___init__impl__c78o9k(new Long(0, 2147483647));
    this.a1c_1 = _ULong___init__impl__c78o9k(new Long(0, -2147483648));
    this.b1c_1 = 120;
    this.c1c_1 = 15000;
    this.d1c_1 = false;
    this.e1c_1 = new SignedULongArray(BigInteger63Arithmetic_getInstance().r1b_1, true);
    var tmp_6 = this;
    var tmp$ret$110;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$7;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$7 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_7 = new ULongArray(tmp$ret$7);
    var tmp$ret$8;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$8 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_8 = new ULongArray(tmp$ret$8);
    var tmp$ret$9;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$9 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100, 0))]));
    var tmp_9 = new ULongArray(tmp$ret$9);
    var tmp$ret$10;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$10 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000, 0))]));
    var tmp_10 = new ULongArray(tmp$ret$10);
    var tmp$ret$11;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10000, 0))]));
    var tmp_11 = new ULongArray(tmp$ret$11);
    var tmp$ret$12;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$12 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100000, 0))]));
    var tmp_12 = new ULongArray(tmp$ret$12);
    var tmp$ret$13;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$13 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000000, 0))]));
    var tmp_13 = new ULongArray(tmp$ret$13);
    var tmp$ret$14;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$14 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10000000, 0))]));
    var tmp_14 = new ULongArray(tmp$ret$14);
    var tmp$ret$15;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$15 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100000000, 0))]));
    var tmp_15 = new ULongArray(tmp$ret$15);
    var tmp$ret$16;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$16 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000000000, 0))]));
    var tmp_16 = new ULongArray(tmp$ret$16);
    var tmp$ret$17;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$17 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1410065408, 2))]));
    var tmp_17 = new ULongArray(tmp$ret$17);
    var tmp$ret$18;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$18 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1215752192, 23))]));
    var tmp_18 = new ULongArray(tmp$ret$18);
    var tmp$ret$19;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$19 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-727379968, 232))]));
    var tmp_19 = new ULongArray(tmp$ret$19);
    var tmp$ret$20;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$20 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1316134912, 2328))]));
    var tmp_20 = new ULongArray(tmp$ret$20);
    var tmp$ret$21;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$21 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(276447232, 23283))]));
    var tmp_21 = new ULongArray(tmp$ret$21);
    var tmp$ret$22;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$22 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1530494976, 232830))]));
    var tmp_22 = new ULongArray(tmp$ret$22);
    var tmp$ret$23;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$23 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1874919424, 2328306))]));
    var tmp_23 = new ULongArray(tmp$ret$23);
    var tmp$ret$24;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$24 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1569325056, 23283064))]));
    var tmp_24 = new ULongArray(tmp$ret$24);
    var tmp$ret$25;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$25 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1486618624, 232830643))]));
    var tmp_25 = new ULongArray(tmp$ret$25);
    var tmp$ret$26;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$26 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1981284352, 180822788)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_26 = new ULongArray(tmp$ret$26);
    var tmp$ret$27;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$27 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1661992960, 1808227885)), _ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_27 = new ULongArray(tmp$ret$27);
    var tmp$ret$28;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$28 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-559939584, 902409669)), _ULong___init__impl__c78o9k(new Long(108, 0))]));
    var tmp_28 = new ULongArray(tmp$ret$28);
    var tmp$ret$29;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$29 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1304428544, 434162106)), _ULong___init__impl__c78o9k(new Long(1084, 0))]));
    var tmp_29 = new ULongArray(tmp$ret$29);
    var tmp$ret$30;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$30 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-159383552, 46653770)), _ULong___init__impl__c78o9k(new Long(10842, 0))]));
    var tmp_30 = new ULongArray(tmp$ret$30);
    var tmp$ret$31;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$31 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1593835520, 466537709)), _ULong___init__impl__c78o9k(new Long(108420, 0))]));
    var tmp_31 = new ULongArray(tmp$ret$31);
    var tmp$ret$32;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$32 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1241513984, 370409800)), _ULong___init__impl__c78o9k(new Long(1084202, 0))]));
    var tmp_32 = new ULongArray(tmp$ret$32);
    var tmp$ret$33;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$33 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-469762048, 1556614354)), _ULong___init__impl__c78o9k(new Long(10842021, 0))]));
    var tmp_33 = new ULongArray(tmp$ret$33);
    var tmp$ret$34;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$34 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-402653184, 533758012)), _ULong___init__impl__c78o9k(new Long(108420217, 0))]));
    var tmp_34 = new ULongArray(tmp$ret$34);
    var tmp$ret$35;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$35 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(268435456, 1042612833)), _ULong___init__impl__c78o9k(new Long(1084202172, 0))]));
    var tmp_35 = new ULongArray(tmp$ret$35);
    var tmp$ret$36;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$36 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1610612736, 1836193738)), _ULong___init__impl__c78o9k(new Long(-2042880164, 2))]));
    var tmp_36 = new ULongArray(tmp$ret$36);
    var tmp$ret$37;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$37 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1073741824, 1182068202)), _ULong___init__impl__c78o9k(new Long(1046034848, 25))]));
    var tmp_37 = new ULongArray(tmp$ret$37);
    var tmp$ret$38;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$38 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-2147483648, 1083263782)), _ULong___init__impl__c78o9k(new Long(1870413893, 252))]));
    var tmp_38 = new ULongArray(tmp$ret$38);
    var tmp$ret$39;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$39 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 95219585)), _ULong___init__impl__c78o9k(new Long(1524269751, 2524))]));
    var tmp_39 = new ULongArray(tmp$ret$39);
    var tmp$ret$40;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$40 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 952195850)), _ULong___init__impl__c78o9k(new Long(-1937171674, 25243))]));
    var tmp_40 = new ULongArray(tmp$ret$40);
    var tmp$ret$41;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$41 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 932023908)), _ULong___init__impl__c78o9k(new Long(2103119744, 252435))]));
    var tmp_41 = new ULongArray(tmp$ret$41);
    var tmp$ret$42;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$42 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 730304488)), _ULong___init__impl__c78o9k(new Long(-443639036, 2524354))]));
    var tmp_42 = new ULongArray(tmp$ret$42);
    var tmp$ret$43;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$43 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 860593936)), _ULong___init__impl__c78o9k(new Long(-141423061, 25243548))]));
    var tmp_43 = new ULongArray(tmp$ret$43);
    var tmp$ret$44;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$44 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 16004768)), _ULong___init__impl__c78o9k(new Long(-1414230606, 252435489))]));
    var tmp_44 = new ULongArray(tmp$ret$44);
    var tmp$ret$45;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$45 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 160047680)), _ULong___init__impl__c78o9k(new Long(-1257404172, 376871248)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_45 = new ULongArray(tmp$ret$45);
    var tmp$ret$46;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$46 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1600476800)), _ULong___init__impl__c78o9k(new Long(310860168, 1621228839)), _ULong___init__impl__c78o9k(new Long(11, 0))]));
    var tmp_46 = new ULongArray(tmp$ret$46);
    var tmp$ret$47;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$47 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 972382464)), _ULong___init__impl__c78o9k(new Long(-1186365609, 1179902854)), _ULong___init__impl__c78o9k(new Long(117, 0))]));
    var tmp_47 = new ULongArray(tmp$ret$47);
    var tmp$ret$48;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$48 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1133890048)), _ULong___init__impl__c78o9k(new Long(1021245802, 1061610307)), _ULong___init__impl__c78o9k(new Long(1175, 0))]));
    var tmp_48 = new ULongArray(tmp$ret$48);
    var tmp$ret$49;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$49 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 601482240)), _ULong___init__impl__c78o9k(new Long(1622523433, 2026168480)), _ULong___init__impl__c78o9k(new Long(11754, 0))]));
    var tmp_49 = new ULongArray(tmp$ret$49);
    var tmp$ret$50;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$50 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1719855104)), _ULong___init__impl__c78o9k(new Long(-954634852, 934331971)), _ULong___init__impl__c78o9k(new Long(117549, 0))]));
    var tmp_50 = new ULongArray(tmp$ret$50);
    var tmp$ret$51;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$51 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 18681856)), _ULong___init__impl__c78o9k(new Long(-956413920, 753385125)), _ULong___init__impl__c78o9k(new Long(1175494, 0))]));
    var tmp_51 = new ULongArray(tmp$ret$51);
    var tmp$ret$52;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$52 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 186818560)), _ULong___init__impl__c78o9k(new Long(-974204608, 1091400313)), _ULong___init__impl__c78o9k(new Long(11754943, 0))]));
    var tmp_52 = new ULongArray(tmp$ret$52);
    var tmp$ret$53;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$53 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1868185600)), _ULong___init__impl__c78o9k(new Long(-1152111488, 176584897)), _ULong___init__impl__c78o9k(new Long(117549435, 0))]));
    var tmp_53 = new ULongArray(tmp$ret$53);
    var tmp$ret$54;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$54 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1501986816)), _ULong___init__impl__c78o9k(new Long(1363787016, 1765848977)), _ULong___init__impl__c78o9k(new Long(1175494350, 0))]));
    var tmp_54 = new ULongArray(tmp$ret$54);
    var tmp$ret$55;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$55 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 2134966272)), _ULong___init__impl__c78o9k(new Long(752968278, 478620589)), _ULong___init__impl__c78o9k(new Long(-1129958380, 2))]));
    var tmp_55 = new ULongArray(tmp$ret$55);
    var tmp$ret$56;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$56 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 2022309888)), _ULong___init__impl__c78o9k(new Long(-1060251803, 491238595)), _ULong___init__impl__c78o9k(new Long(1585318090, 27))]));
    var tmp_56 = new ULongArray(tmp$ret$56);
    var tmp$ret$57;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$57 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 895746048)), _ULong___init__impl__c78o9k(new Long(-2012583429, 617418661)), _ULong___init__impl__c78o9k(new Long(-1326688282, 273))]));
    var tmp_57 = new ULongArray(tmp$ret$57);
    var tmp$ret$58;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$58 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 367525888)), _ULong___init__impl__c78o9k(new Long(1349002194, 1879219319)), _ULong___init__impl__c78o9k(new Long(-381980930, 2736))]));
    var tmp_58 = new ULongArray(tmp$ret$58);
    var tmp$ret$59;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$59 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1527775232)), _ULong___init__impl__c78o9k(new Long(605120053, 1612324009)), _ULong___init__impl__c78o9k(new Long(475158004, 27369))]));
    var tmp_59 = new ULongArray(tmp$ret$59);
    var tmp$ret$60;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$60 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 245366784)), _ULong___init__impl__c78o9k(new Long(1756233241, 1090854555)), _ULong___init__impl__c78o9k(new Long(456612751, 273691))]));
    var tmp_60 = new ULongArray(tmp$ret$60);
    var tmp$ret$61;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$61 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 306184192)), _ULong___init__impl__c78o9k(new Long(382463227, 171127314)), _ULong___init__impl__c78o9k(new Long(271160219, 2736911))]));
    var tmp_61 = new ULongArray(tmp$ret$61);
    var tmp$ret$62;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$62 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 914358272)), _ULong___init__impl__c78o9k(new Long(-470335025, 1711273140)), _ULong___init__impl__c78o9k(new Long(-1583365106, 27369110))]));
    var tmp_62 = new ULongArray(tmp$ret$62);
    var tmp$ret$63;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$63 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 553648128)), _ULong___init__impl__c78o9k(new Long(-408382950, 2080345872)), _ULong___init__impl__c78o9k(new Long(1346218131, 273691106))]));
    var tmp_63 = new ULongArray(tmp$ret$63);
    var tmp$ret$64;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$64 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1241513984)), _ULong___init__impl__c78o9k(new Long(211137798, 1476105897)), _ULong___init__impl__c78o9k(new Long(577279431, 589427415)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_64 = new ULongArray(tmp$ret$64);
    var tmp$ret$65;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$65 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1677721600)), _ULong___init__impl__c78o9k(new Long(2111377985, 1876157082)), _ULong___init__impl__c78o9k(new Long(1477827020, 1599306855)), _ULong___init__impl__c78o9k(new Long(12, 0))]));
    var tmp_65 = new ULongArray(tmp$ret$65);
    var tmp$ret$66;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$66 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1744830464)), _ULong___init__impl__c78o9k(new Long(-361056623, 1581701640)), _ULong___init__impl__c78o9k(new Long(1893368320, 960683017)), _ULong___init__impl__c78o9k(new Long(127, 0))]));
    var tmp_66 = new ULongArray(tmp$ret$66);
    var tmp$ret$67;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$67 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 268435456)), _ULong___init__impl__c78o9k(new Long(684401074, 784630873)), _ULong___init__impl__c78o9k(new Long(1753814023, 1016895582)), _ULong___init__impl__c78o9k(new Long(1274, 0))]));
    var tmp_67 = new ULongArray(tmp$ret$67);
    var tmp$ret$68;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$68 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 536870912)), _ULong___init__impl__c78o9k(new Long(-1745923851, 1403857787)), _ULong___init__impl__c78o9k(new Long(358271049, 1579021232)), _ULong___init__impl__c78o9k(new Long(12744, 0))]));
    var tmp_68 = new ULongArray(tmp$ret$68);
    var tmp$ret$69;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$69 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1073741824)), _ULong___init__impl__c78o9k(new Long(-279369324, 1153675987)), _ULong___init__impl__c78o9k(new Long(-712256800, 757826784)), _ULong___init__impl__c78o9k(new Long(127447, 0))]));
    var tmp_69 = new ULongArray(tmp$ret$69);
    var tmp$ret$70;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$70 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1501274061, 799341639)), _ULong___init__impl__c78o9k(new Long(1467366597, 1135816904)), _ULong___init__impl__c78o9k(new Long(1274473, 0))]));
    var tmp_70 = new ULongArray(tmp$ret$70);
    var tmp$ret$71;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$71 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2127838722, 1550965449)), _ULong___init__impl__c78o9k(new Long(1788764085, 620750803)), _ULong___init__impl__c78o9k(new Long(12744735, 0))]));
    var tmp_71 = new ULongArray(tmp$ret$71);
    var tmp$ret$72;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$72 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-196449260, 477268958)), _ULong___init__impl__c78o9k(new Long(707771673, 1912540738)), _ULong___init__impl__c78o9k(new Long(127447352, 0))]));
    var tmp_72 = new ULongArray(tmp$ret$72);
    var tmp$ret$73;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$73 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1964492600, 477722293)), _ULong___init__impl__c78o9k(new Long(-1512217860, 1945538197)), _ULong___init__impl__c78o9k(new Long(1274473528, 0))]));
    var tmp_73 = new ULongArray(tmp$ret$73);
    var tmp$ret$74;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$74 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1829910480, 482255639)), _ULong___init__impl__c78o9k(new Long(2057690586, 128029144)), _ULong___init__impl__c78o9k(new Long(-140166599, 2))]));
    var tmp_74 = new ULongArray(tmp$ret$74);
    var tmp$ret$75;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$75 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1119235616, 527589098)), _ULong___init__impl__c78o9k(new Long(-897930618, 1280291444)), _ULong___init__impl__c78o9k(new Long(-1401665990, 29))]));
    var tmp_75 = new ULongArray(tmp$ret$75);
    var tmp$ret$76;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$76 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1692545728, 980923686)), _ULong___init__impl__c78o9k(new Long(-389371586, 2065496207)), _ULong___init__impl__c78o9k(new Long(-1131758007, 296))]));
    var tmp_76 = new ULongArray(tmp$ret$76);
    var tmp$ret$77;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$77 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(254411904, 1219302274)), _ULong___init__impl__c78o9k(new Long(401251440, 1327609247)), _ULong___init__impl__c78o9k(new Long(1567321827, 2967))]));
    var tmp_77 = new ULongArray(tmp$ret$77);
    var tmp$ret$78;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$78 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1750848256, 1455604500)), _ULong___init__impl__c78o9k(new Long(-282452891, 391190582)), _ULong___init__impl__c78o9k(new Long(-1506650908, 29673))]));
    var tmp_78 = new ULongArray(tmp$ret$78);
    var tmp$ret$79;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$79 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-328613376, 1671143117)), _ULong___init__impl__c78o9k(new Long(1470438392, 1764422181)), _ULong___init__impl__c78o9k(new Long(2113360105, 296736))]));
    var tmp_79 = new ULongArray(tmp$ret$79);
    var tmp$ret$80;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$80 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1008833536, 1679045643)), _ULong___init__impl__c78o9k(new Long(1819482039, 464352629)), _ULong___init__impl__c78o9k(new Long(-341235422, 2967364))]));
    var tmp_80 = new ULongArray(tmp$ret$80);
    var tmp$ret$81;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$81 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1498400768, 1758070896)), _ULong___init__impl__c78o9k(new Long(1014951213, 348558998)), _ULong___init__impl__c78o9k(new Long(882613078, 29673649))]));
    var tmp_81 = new ULongArray(tmp$ret$81);
    var tmp$ret$82;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$82 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2099105792, 400839779)), _ULong___init__impl__c78o9k(new Long(1559577546, 1338106334)), _ULong___init__impl__c78o9k(new Long(236196189, 296736492))]));
    var tmp_82 = new ULongArray(tmp$ret$82);
    var tmp$ret$83;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$83 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-483778560, 1860914146)), _ULong___init__impl__c78o9k(new Long(-1584093723, 496161455)), _ULong___init__impl__c78o9k(new Long(-1933005400, 819881272)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_83 = new ULongArray(tmp$ret$83);
    var tmp$ret$84;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$84 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-542818304, 1429272284)), _ULong___init__impl__c78o9k(new Long(1338931962, 666647260)), _ULong___init__impl__c78o9k(new Long(2144782482, 1756361781)), _ULong___init__impl__c78o9k(new Long(13, 0))]));
    var tmp_84 = new ULongArray(tmp$ret$84);
    var tmp$ret$85;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$85 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1133215744, 1407820960)), _ULong___init__impl__c78o9k(new Long(504417738, 224021659)), _ULong___init__impl__c78o9k(new Long(-27011657, 383748630)), _ULong___init__impl__c78o9k(new Long(138, 0))]));
    var tmp_85 = new ULongArray(tmp$ret$85);
    var tmp$ret$86;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$86 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1552744448, 1193307719)), _ULong___init__impl__c78o9k(new Long(749210090, 92732943)), _ULong___init__impl__c78o9k(new Long(-270116569, 1690002661)), _ULong___init__impl__c78o9k(new Long(1381, 0))]));
    var tmp_86 = new ULongArray(tmp$ret$86);
    var tmp$ret$87;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$87 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1652424704, 1195658953)), _ULong___init__impl__c78o9k(new Long(-1097833687, 927329431)), _ULong___init__impl__c78o9k(new Long(1593801606, 1867641083)), _ULong___init__impl__c78o9k(new Long(13817, 0))]));
    var tmp_87 = new ULongArray(tmp$ret$87);
    var tmp$ret$88;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$88 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(655622144, 1219171296)), _ULong___init__impl__c78o9k(new Long(1906565023, 683359725)), _ULong___init__impl__c78o9k(new Long(-1241853120, 1496541649)), _ULong___init__impl__c78o9k(new Long(138178, 0))]));
    var tmp_88 = new ULongArray(tmp$ret$88);
    var tmp$ret$89;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$89 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-2033713152, 1454294721)), _ULong___init__impl__c78o9k(new Long(1885781051, 391146310)), _ULong___init__impl__c78o9k(new Long(466370691, 2080514609)), _ULong___init__impl__c78o9k(new Long(1381786, 0))]));
    var tmp_89 = new ULongArray(tmp$ret$89);
    var tmp$ret$90;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$90 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1137704960, 1658045327)), _ULong___init__impl__c78o9k(new Long(1677941332, 1763979456)), _ULong___init__impl__c78o9k(new Long(368739615, 1477793259)), _ULong___init__impl__c78o9k(new Long(13817869, 0))]));
    var tmp_90 = new ULongArray(tmp$ret$90);
    var tmp$ret$91;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$91 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1507852288, 1548067736)), _ULong___init__impl__c78o9k(new Long(-400455857, 459925379)), _ULong___init__impl__c78o9k(new Long(-607571138, 1893030702)), _ULong___init__impl__c78o9k(new Long(138178696, 0))]));
    var tmp_91 = new ULongArray(tmp$ret$91);
    var tmp$ret$92;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$92 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2101346304, 448291830)), _ULong___init__impl__c78o9k(new Long(290408733, 304286503)), _ULong___init__impl__c78o9k(new Long(-1780744082, 1750437844)), _ULong___init__impl__c78o9k(new Long(1381786968, 0))]));
    var tmp_92 = new ULongArray(tmp$ret$92);
    var tmp$ret$93;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$93 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-461373440, 187951008)), _ULong___init__impl__c78o9k(new Long(-1390879964, 895381382)), _ULong___init__impl__c78o9k(new Long(-627571635, 324509261)), _ULong___init__impl__c78o9k(new Long(932967800, 3))]));
    var tmp_93 = new ULongArray(tmp$ret$93);
    var tmp$ret$94;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$94 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-318767104, 1879510088)), _ULong___init__impl__c78o9k(new Long(-1023897752, 363879234)), _ULong___init__impl__c78o9k(new Long(-1980749050, 1097608970)), _ULong___init__impl__c78o9k(new Long(739743409, 32))]));
    var tmp_94 = new ULongArray(tmp$ret$94);
    var tmp$ret$95;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$95 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1107296256, 1615231705)), _ULong___init__impl__c78o9k(new Long(-1649042920, 1491308699)), _ULong___init__impl__c78o9k(new Long(1667345981, 238671465)), _ULong___init__impl__c78o9k(new Long(-1192500497, 321))]));
    var tmp_95 = new ULongArray(tmp$ret$95);
    var tmp$ret$96;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$96 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1811939328, 1119931516)), _ULong___init__impl__c78o9k(new Long(689439991, 2028185108)), _ULong___init__impl__c78o9k(new Long(-506409368, 239231005)), _ULong___init__impl__c78o9k(new Long(959896919, 3217))]));
    var tmp_96 = new ULongArray(tmp$ret$96);
    var tmp$ret$97;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$97 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-939524096, 461896925)), _ULong___init__impl__c78o9k(new Long(-1695534677, 954498249)), _ULong___init__impl__c78o9k(new Long(-769126375, 244826410)), _ULong___init__impl__c78o9k(new Long(1009034599, 32172))]));
    var tmp_97 = new ULongArray(tmp$ret$97);
    var tmp$ret$98;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$98 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-805306368, 324001961)), _ULong___init__impl__c78o9k(new Long(224522416, 955047904)), _ULong___init__impl__c78o9k(new Long(898670846, 300780460)), _ULong___init__impl__c78o9k(new Long(1500411399, 321722))]));
    var tmp_98 = new ULongArray(tmp$ret$98);
    var tmp$ret$99;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$99 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(536870912, 1092535970)), _ULong___init__impl__c78o9k(new Long(-2049743135, 960544448)), _ULong___init__impl__c78o9k(new Long(396773872, 860320954)), _ULong___init__impl__c78o9k(new Long(2119212103, 3217223))]));
    var tmp_99 = new ULongArray(tmp$ret$99);
    var tmp$ret$100;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$100 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1073741824, 187941461)), _ULong___init__impl__c78o9k(new Long(977405135, 1015509893)), _ULong___init__impl__c78o9k(new Long(-327228572, 13274948)), _ULong___init__impl__c78o9k(new Long(-282715446, 32172234))]));
    var tmp_100 = new ULongArray(tmp$ret$100);
    var tmp$ret$101;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$101 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-2147483648, 1879414612)), _ULong___init__impl__c78o9k(new Long(1184116758, 1565164340)), _ULong___init__impl__c78o9k(new Long(1022681580, 132749489)), _ULong___init__impl__c78o9k(new Long(1467812836, 321722349))]));
    var tmp_101 = new ULongArray(tmp$ret$101);
    var tmp$ret$102;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$102 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1614276941)), _ULong___init__impl__c78o9k(new Long(-1043734300, 619257866)), _ULong___init__impl__c78o9k(new Long(1636881215, 1327494892)), _ULong___init__impl__c78o9k(new Long(1793226472, 1069739845)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_102 = new ULongArray(tmp$ret$102);
    var tmp$ret$103;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$103 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1110383874)), _ULong___init__impl__c78o9k(new Long(-1847408401, 1897611371)), _ULong___init__impl__c78o9k(new Long(-811057032, 390047035)), _ULong___init__impl__c78o9k(new Long(752395542, 2107463862)), _ULong___init__impl__c78o9k(new Long(14, 0))]));
    var tmp_103 = new ULongArray(tmp$ret$103);
    var tmp$ret$104;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$104 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 366420500)), _ULong___init__impl__c78o9k(new Long(-1294214821, 1796244531)), _ULong___init__impl__c78o9k(new Long(479364280, 1752986710)), _ULong___init__impl__c78o9k(new Long(-1065979171, 1747285789)), _ULong___init__impl__c78o9k(new Long(149, 0))]));
    var tmp_104 = new ULongArray(tmp$ret$104);
    var tmp$ret$105;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$105 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1516721352)), _ULong___init__impl__c78o9k(new Long(-57246321, 782576132)), _ULong___init__impl__c78o9k(new Long(498675512, 349997917)), _ULong___init__impl__c78o9k(new Long(-2069857110, 292988713)), _ULong___init__impl__c78o9k(new Long(1498, 0))]));
    var tmp_105 = new ULongArray(tmp$ret$105);
    var tmp$ret$106;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$106 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 134827984)), _ULong___init__impl__c78o9k(new Long(-572463203, 1383310385)), _ULong___init__impl__c78o9k(new Long(691787827, 1352495523)), _ULong___init__impl__c78o9k(new Long(776265381, 782403487)), _ULong___init__impl__c78o9k(new Long(14981, 0))]));
    var tmp_106 = new ULongArray(tmp$ret$106);
    var tmp$ret$107;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$107 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1348279840)), _ULong___init__impl__c78o9k(new Long(-1429664734, 948201970)), _ULong___init__impl__c78o9k(new Long(-1672056316, 640053343)), _ULong___init__impl__c78o9k(new Long(-827280776, 1381583927)), _ULong___init__impl__c78o9k(new Long(149813, 0))]));
    var tmp0_arrayOf = [tmp_7, tmp_8, tmp_9, tmp_10, tmp_11, tmp_12, tmp_13, tmp_14, tmp_15, tmp_16, tmp_17, tmp_18, tmp_19, tmp_20, tmp_21, tmp_22, tmp_23, tmp_24, tmp_25, tmp_26, tmp_27, tmp_28, tmp_29, tmp_30, tmp_31, tmp_32, tmp_33, tmp_34, tmp_35, tmp_36, tmp_37, tmp_38, tmp_39, tmp_40, tmp_41, tmp_42, tmp_43, tmp_44, tmp_45, tmp_46, tmp_47, tmp_48, tmp_49, tmp_50, tmp_51, tmp_52, tmp_53, tmp_54, tmp_55, tmp_56, tmp_57, tmp_58, tmp_59, tmp_60, tmp_61, tmp_62, tmp_63, tmp_64, tmp_65, tmp_66, tmp_67, tmp_68, tmp_69, tmp_70, tmp_71, tmp_72, tmp_73, tmp_74, tmp_75, tmp_76, tmp_77, tmp_78, tmp_79, tmp_80, tmp_81, tmp_82, tmp_83, tmp_84, tmp_85, tmp_86, tmp_87, tmp_88, tmp_89, tmp_90, tmp_91, tmp_92, tmp_93, tmp_94, tmp_95, tmp_96, tmp_97, tmp_98, tmp_99, tmp_100, tmp_101, tmp_102, tmp_103, tmp_104, tmp_105, tmp_106, new ULongArray(tmp$ret$107)];
    var tmp$ret$109;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$108;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$108 = tmp0_arrayOf;
    tmp$ret$109 = tmp$ret$108;
    tmp$ret$110 = tmp$ret$109;
    tmp_6.f1c_1 = tmp$ret$110;
  }
  BigInteger63Arithmetic.prototype.z1a = function () {
    return this.p1b_1;
  };
  BigInteger63Arithmetic.prototype.a1b = function () {
    return this.q1b_1;
  };
  BigInteger63Arithmetic.prototype.b1b = function () {
    return this.r1b_1;
  };
  BigInteger63Arithmetic.prototype.c1b = function () {
    return this.s1b_1;
  };
  BigInteger63Arithmetic.prototype.u1f = function (value) {
    var x = value;
    var y;
    var n = 63;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.shr' call
    var tmp0_shr = x;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).x5(32));
    y = tmp$ret$0;
    if (!equals_0(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 32 | 0;
      x = y;
    }
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.shr' call
    var tmp1_shr = x;
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shr).x5(16));
    y = tmp$ret$1;
    if (!equals_0(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 16 | 0;
      x = y;
    }
    var tmp$ret$2;
    // Inline function 'kotlin.ULong.shr' call
    var tmp2_shr = x;
    tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_shr).x5(8));
    y = tmp$ret$2;
    if (!equals_0(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 8 | 0;
      x = y;
    }
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.shr' call
    var tmp3_shr = x;
    tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shr).x5(4));
    y = tmp$ret$3;
    if (!equals_0(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 4 | 0;
      x = y;
    }
    var tmp$ret$4;
    // Inline function 'kotlin.ULong.shr' call
    var tmp4_shr = x;
    tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shr).x5(2));
    y = tmp$ret$4;
    if (!equals_0(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 2 | 0;
      x = y;
    }
    var tmp$ret$5;
    // Inline function 'kotlin.ULong.shr' call
    var tmp5_shr = x;
    tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_shr).x5(1));
    y = tmp$ret$5;
    if (!equals_0(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      return n - 2 | 0;
    }
    var tmp = n;
    var tmp$ret$6;
    // Inline function 'kotlin.ULong.toInt' call
    var tmp6_toInt = x;
    tmp$ret$6 = _ULong___get_data__impl__fggpzb(tmp6_toInt).u5();
    return tmp - tmp$ret$6 | 0;
  };
  BigInteger63Arithmetic.prototype.w1c = function (value) {
    if (isZero_0(value, this)) {
      return 0;
    }
    var start = (_ULongArray___get_size__impl__ju6dtr(value) - this.n1f(value) | 0) - 1 | 0;
    var mostSignificant = ULongArray__get_impl_pr71q9(value, start);
    return this.v1f(mostSignificant) + imul(start, 63) | 0;
  };
  BigInteger63Arithmetic.prototype.v1f = function (value) {
    return 63 - this.u1f(value) | 0;
  };
  BigInteger63Arithmetic.prototype.g1c = function (bigInteger) {
    var correctedSize = _ULongArray___get_size__impl__ju6dtr(bigInteger) - this.n1f(bigInteger) | 0;
    if (correctedSize === 0) {
      return this.p1b_1;
    }
    if (_ULongArray___get_size__impl__ju6dtr(bigInteger) === correctedSize) {
      return bigInteger;
    }
    if (false ? (_ULongArray___get_size__impl__ju6dtr(bigInteger) - correctedSize | 0) > 1000 : false) {
      println('RLZ original array : ' + _ULongArray___get_size__impl__ju6dtr(bigInteger) + ' contains: ' + ((_ULongArray___get_size__impl__ju6dtr(bigInteger) - correctedSize | 0) - 1 | 0) + ' zeros');
    }
    var tmp$ret$0;
    // Inline function 'kotlin.collections.copyOfRange' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(copyOfRange(_ULongArray___get_storage__impl__28e64j(bigInteger), 0, correctedSize));
    return tmp$ret$0;
  };
  BigInteger63Arithmetic.prototype.n1f = function (bigInteger) {
    var lastNonEmptyIndex = _ULongArray___get_size__impl__ju6dtr(bigInteger) - 1 | 0;
    if (lastNonEmptyIndex <= 0) {
      return 0;
    }
    var element = ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex);
    while (equals_0(element, _ULong___init__impl__c78o9k(new Long(0, 0))) ? lastNonEmptyIndex > 0 : false) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
      element = ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex);
    }
    if (equals_0(ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex), _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
    }
    return (_ULongArray___get_size__impl__ju6dtr(bigInteger) - lastNonEmptyIndex | 0) - 1 | 0;
  };
  BigInteger63Arithmetic.prototype.w1f = function (operand, places) {
    if (isZero_0(operand, this)) {
      return operand;
    }
    if (places === 0) {
      return operand;
    }
    if (ULongArray__isEmpty_impl_c3yngu(operand)) {
      return this.p1b_1;
    }
    var leadingZeroWords = this.n1f(operand);
    if (_ULongArray___get_size__impl__ju6dtr(operand) === leadingZeroWords) {
      return this.p1b_1;
    }
    var originalSize = _ULongArray___get_size__impl__ju6dtr(operand) - leadingZeroWords | 0;
    var leadingZeros = this.u1f(ULongArray__get_impl_pr71q9(operand, originalSize - 1 | 0));
    var shiftWords = places / this.u1b_1 | 0;
    var shiftBits = places % this.u1b_1 | 0;
    var tmp;
    if (shiftBits > leadingZeros) {
      tmp = shiftWords + 1 | 0;
    } else {
      tmp = shiftWords;
    }
    var wordsNeeded = tmp;
    if (shiftBits === 0) {
      var tmp$ret$3;
      // Inline function 'kotlin.ULongArray' call
      var tmp0_ULongArray = originalSize + wordsNeeded | 0;
      var tmp_0 = 0;
      var tmp_1 = tmp0_ULongArray;
      var tmp_2 = longArray(tmp_1);
      while (tmp_0 < tmp_1) {
        var tmp_3 = tmp_0;
        var tmp$ret$2;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftLeft.<anonymous>' call
        var tmp0_subject = tmp_3;
        tmp$ret$0 = (0 <= tmp0_subject ? tmp0_subject < shiftWords : false) ? _ULong___init__impl__c78o9k(new Long(0, 0)) : ULongArray__get_impl_pr71q9(operand, tmp_3 - shiftWords | 0);
        var tmp0_toLong = tmp$ret$0;
        tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$2 = tmp$ret$1;
        tmp_2[tmp_3] = tmp$ret$2;
        tmp_0 = tmp_0 + 1 | 0;
      }
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_2);
      return tmp$ret$3;
    }
    var tmp$ret$14;
    // Inline function 'kotlin.ULongArray' call
    var tmp1_ULongArray = originalSize + wordsNeeded | 0;
    var tmp_4 = 0;
    var tmp_5 = tmp1_ULongArray;
    var tmp_6 = longArray(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      var tmp$ret$13;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$11;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftLeft.<anonymous>' call
      var tmp0_subject_0 = tmp_7;
      var tmp_8;
      if (0 <= tmp0_subject_0 ? tmp0_subject_0 < shiftWords : false) {
        tmp_8 = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        if (tmp0_subject_0 === shiftWords) {
          var tmp$ret$5;
          // Inline function 'kotlin.ULong.and' call
          var tmp$ret$4;
          // Inline function 'kotlin.ULong.shl' call
          var tmp0_shl = ULongArray__get_impl_pr71q9(operand, tmp_7 - shiftWords | 0);
          tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shl).y5(shiftBits));
          var tmp1_and = tmp$ret$4;
          var tmp2_and = BigInteger63Arithmetic_getInstance().w1b_1;
          tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).c5(_ULong___get_data__impl__fggpzb(tmp2_and)));
          tmp_8 = tmp$ret$5;
        } else {
          var containsLower = shiftWords + 1 | 0;
          if (tmp0_subject_0 < (originalSize + shiftWords | 0) ? containsLower <= tmp0_subject_0 : false) {
            var tmp$ret$9;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$7;
            // Inline function 'kotlin.ULong.and' call
            var tmp$ret$6;
            // Inline function 'kotlin.ULong.shl' call
            var tmp3_shl = ULongArray__get_impl_pr71q9(operand, tmp_7 - shiftWords | 0);
            tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shl).y5(shiftBits));
            var tmp4_and = tmp$ret$6;
            var tmp5_and = BigInteger63Arithmetic_getInstance().w1b_1;
            tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_and).c5(_ULong___get_data__impl__fggpzb(tmp5_and)));
            var tmp8_or = tmp$ret$7;
            var tmp$ret$8;
            // Inline function 'kotlin.ULong.shr' call
            var tmp6_shr = ULongArray__get_impl_pr71q9(operand, (tmp_7 - shiftWords | 0) - 1 | 0);
            var tmp7_shr = BigInteger63Arithmetic_getInstance().u1b_1 - shiftBits | 0;
            tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).x5(tmp7_shr));
            var tmp9_or = tmp$ret$8;
            tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_or).hb(_ULong___get_data__impl__fggpzb(tmp9_or)));
            tmp_8 = tmp$ret$9;
          } else {
            if (tmp0_subject_0 === ((originalSize + wordsNeeded | 0) - 1 | 0)) {
              var tmp$ret$10;
              // Inline function 'kotlin.ULong.shr' call
              var tmp10_shr = ULongArray__get_impl_pr71q9(operand, tmp_7 - wordsNeeded | 0);
              var tmp11_shr = BigInteger63Arithmetic_getInstance().u1b_1 - shiftBits | 0;
              tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_shr).x5(tmp11_shr));
              tmp_8 = tmp$ret$10;
            } else {
              throw RuntimeException_init_$Create$('Invalid case ' + tmp_7);
            }
          }
        }
      }
      tmp$ret$11 = tmp_8;
      var tmp0_toLong_0 = tmp$ret$11;
      tmp$ret$12 = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
      tmp$ret$13 = tmp$ret$12;
      tmp_6[tmp_7] = tmp$ret$13;
      tmp_4 = tmp_4 + 1 | 0;
    }
    tmp$ret$14 = _ULongArray___init__impl__twm1l3(tmp_6);
    return tmp$ret$14;
  };
  BigInteger63Arithmetic.prototype.x1f = function (operand, places) {
    if (ULongArray__isEmpty_impl_c3yngu(operand) ? true : places === 0) {
      return operand;
    }
    var leadingZeroWords = this.n1f(operand);
    var realOperandSize = _ULongArray___get_size__impl__ju6dtr(operand) - leadingZeroWords | 0;
    var shiftBits = places % this.u1b_1 | 0;
    var wordsToDiscard = places / this.u1b_1 | 0;
    if (wordsToDiscard >= realOperandSize) {
      return this.p1b_1;
    }
    if (shiftBits === 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOfRange' call
      var tmp0_copyOfRange = realOperandSize - wordsToDiscard | 0;
      tmp$ret$0 = _ULongArray___init__impl__twm1l3(copyOfRange(_ULongArray___get_storage__impl__28e64j(operand), tmp0_copyOfRange, realOperandSize));
    }
    if (realOperandSize > 1 ? (realOperandSize - wordsToDiscard | 0) === 1 : false) {
      var tmp$ret$2;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.shr' call
      var tmp1_shr = ULongArray__get_impl_pr71q9(operand, realOperandSize - 1 | 0);
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shr).x5(shiftBits));
      var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
      tmp$ret$2 = tmp2_ulongArrayOf;
      return tmp$ret$2;
    }
    var newLength = realOperandSize - wordsToDiscard | 0;
    if (newLength === 0) {
      return this.p1b_1;
    }
    var tmp$ret$11;
    // Inline function 'kotlin.ULongArray' call
    var tmp3_ULongArray = realOperandSize - wordsToDiscard | 0;
    var tmp = 0;
    var tmp_0 = tmp3_ULongArray;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$10;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$8;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftRight.<anonymous>' call
      var tmp0_subject = tmp_2;
      var tmp_3;
      if (0 <= tmp0_subject ? tmp0_subject < ((realOperandSize - 1 | 0) - wordsToDiscard | 0) : false) {
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.or' call
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.shr' call
        var tmp0_shr = ULongArray__get_impl_pr71q9(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).x5(shiftBits));
        var tmp5_or = tmp$ret$3;
        var tmp$ret$5;
        // Inline function 'kotlin.ULong.and' call
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.shl' call
        var tmp1_shl = ULongArray__get_impl_pr71q9(operand, (tmp_2 + wordsToDiscard | 0) + 1 | 0);
        var tmp2_shl = BigInteger63Arithmetic_getInstance().u1b_1 - shiftBits | 0;
        tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shl).y5(tmp2_shl));
        var tmp3_and = tmp$ret$4;
        var tmp4_and = BigInteger63Arithmetic_getInstance().w1b_1;
        tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_and).c5(_ULong___get_data__impl__fggpzb(tmp4_and)));
        var tmp6_or = tmp$ret$5;
        tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_or).hb(_ULong___get_data__impl__fggpzb(tmp6_or)));
        tmp_3 = tmp$ret$6;
      } else if (tmp0_subject === ((realOperandSize - 1 | 0) - wordsToDiscard | 0)) {
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.shr' call
        var tmp7_shr = ULongArray__get_impl_pr71q9(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shr).x5(shiftBits));
        tmp_3 = tmp$ret$7;
      } else {
        throw RuntimeException_init_$Create$('Invalid case ' + tmp_2);
      }
      tmp$ret$8 = tmp_3;
      var tmp0_toLong = tmp$ret$8;
      tmp$ret$9 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$10 = tmp$ret$9;
      tmp_1[tmp_2] = tmp$ret$10;
      tmp = tmp + 1 | 0;
    }
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(tmp_1);
    var result = tmp$ret$11;
    return result;
  };
  BigInteger63Arithmetic.prototype.y1f = function (first, second, firstStart, secondStart) {
    if (firstStart > secondStart) {
      return 1;
    }
    if (secondStart > firstStart) {
      return -1;
    }
    var counter = firstStart - 1 | 0;
    var firstIsLarger = false;
    var bothAreEqual = true;
    $l$loop_0: while (counter >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.compareTo' call
      var tmp0_compareTo = ULongArray__get_impl_pr71q9(first, counter);
      var tmp1_compareTo = ULongArray__get_impl_pr71q9(second, counter);
      tmp$ret$0 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
      if (tmp$ret$0 > 0) {
        firstIsLarger = true;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.compareTo' call
      var tmp2_compareTo = ULongArray__get_impl_pr71q9(first, counter);
      var tmp3_compareTo = ULongArray__get_impl_pr71q9(second, counter);
      tmp$ret$1 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo));
      if (tmp$ret$1 < 0) {
        firstIsLarger = false;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp0 = counter;
      counter = tmp0 - 1 | 0;
    }
    if (bothAreEqual) {
      return 0;
    }
    if (firstIsLarger) {
      return 1;
    } else {
      return -1;
    }
  };
  BigInteger63Arithmetic.prototype.m1b = function (first, second) {
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.n1f(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.n1f(second) | 0;
    return this.y1f(first, second, firstStart, secondStart);
  };
  BigInteger63Arithmetic.prototype.z1f = function (resultArray, resultArrayStart, first, second) {
    if (isZero_0(first, this)) {
      var tmp$ret$5;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto = _ULongArray___get_size__impl__ju6dtr(first);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto_0 = _ULongArray___get_storage__impl__28e64j(first);
      var tmp1_copyInto = _ULongArray___get_storage__impl__28e64j(resultArray);
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_copyInto_0;
      tmp$ret$1 = tmp$ret$0;
      var tmp = tmp$ret$1;
      var tmp$ret$3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = tmp1_copyInto;
      tmp$ret$3 = tmp$ret$2;
      arrayCopy(tmp, tmp$ret$3, resultArrayStart, 0, tmp0_copyInto);
      tmp$ret$4 = tmp1_copyInto;
      tmp$ret$5 = resultArray;
      return Unit_getInstance();
    }
    if (isZero_0(second, this)) {
      var tmp$ret$11;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp1_copyInto_0 = _ULongArray___get_size__impl__ju6dtr(second);
      var tmp$ret$10;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto_1 = _ULongArray___get_storage__impl__28e64j(second);
      var tmp1_copyInto_1 = _ULongArray___get_storage__impl__28e64j(resultArray);
      var tmp$ret$7;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$6;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$6 = tmp0_copyInto_1;
      tmp$ret$7 = tmp$ret$6;
      var tmp_0 = tmp$ret$7;
      var tmp$ret$9;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$8 = tmp1_copyInto_1;
      tmp$ret$9 = tmp$ret$8;
      arrayCopy(tmp_0, tmp$ret$9, resultArrayStart, 0, tmp1_copyInto_0);
      tmp$ret$10 = tmp1_copyInto_1;
      tmp$ret$11 = resultArray;
      return Unit_getInstance();
    }
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.n1f(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.n1f(second) | 0;
    var tmp_1;
    if (firstStart > secondStart) {
      tmp_1 = new Sextuple(_ULongArray___get_size__impl__ju6dtr(first), _ULongArray___get_size__impl__ju6dtr(second), new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp_1 = new Sextuple(_ULongArray___get_size__impl__ju6dtr(second), _ULongArray___get_size__impl__ju6dtr(first), new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp_1;
    var largerLength = tmp0_container.o2();
    var smallerLength = tmp0_container.p2();
    var largerData = tmp0_container.w4().s5_1;
    var smallerData = tmp0_container.h1d().s5_1;
    var largerStart = tmp0_container.i1d();
    var smallerStart = tmp0_container.j1d();
    var i = 0;
    var sum = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerStart) {
      var tmp$ret$13;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.plus' call
      var tmp2_plus = sum;
      var tmp3_plus = ULongArray__get_impl_pr71q9(largerData, i);
      tmp$ret$12 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_plus).b4(_ULong___get_data__impl__fggpzb(tmp3_plus)));
      var tmp4_plus = tmp$ret$12;
      var tmp5_plus = ULongArray__get_impl_pr71q9(smallerData, i);
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_plus).b4(_ULong___get_data__impl__fggpzb(tmp5_plus)));
      sum = tmp$ret$13;
      var tmp_2 = i + resultArrayStart | 0;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.and' call
      var tmp6_and = sum;
      var tmp7_and = this.w1b_1;
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_and).c5(_ULong___get_data__impl__fggpzb(tmp7_and)));
      ULongArray__set_impl_z19mvh(resultArray, tmp_2, tmp$ret$14);
      var tmp$ret$15;
      // Inline function 'kotlin.ULong.shr' call
      var tmp8_shr = sum;
      tmp$ret$15 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_shr).x5(63));
      sum = tmp$ret$15;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (true) {
      if (equals_0(sum, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
        while (i < largerStart) {
          ULongArray__set_impl_z19mvh(resultArray, i + resultArrayStart | 0, ULongArray__get_impl_pr71q9(largerData, i));
          var tmp2 = i;
          i = tmp2 + 1 | 0;
        }
        return Unit_getInstance();
      }
      if (i === largerLength) {
        ULongArray__set_impl_z19mvh(resultArray, largerLength + resultArrayStart | 0, sum);
        return Unit_getInstance();
      }
      var tmp$ret$16;
      // Inline function 'kotlin.ULong.plus' call
      var tmp9_plus = sum;
      var tmp10_plus = ULongArray__get_impl_pr71q9(largerData, i);
      tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_plus).b4(_ULong___get_data__impl__fggpzb(tmp10_plus)));
      sum = tmp$ret$16;
      var tmp_3 = i;
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.and' call
      var tmp11_and = sum;
      var tmp12_and = this.w1b_1;
      tmp$ret$17 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_and).c5(_ULong___get_data__impl__fggpzb(tmp12_and)));
      ULongArray__set_impl_z19mvh(resultArray, tmp_3, tmp$ret$17);
      var tmp$ret$18;
      // Inline function 'kotlin.ULong.shr' call
      var tmp13_shr = sum;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_shr).x5(63));
      sum = tmp$ret$18;
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
  };
  BigInteger63Arithmetic.prototype.j1c = function (first, second) {
    if (isZero_0(first, this))
      return second;
    if (isZero_0(second, this))
      return first;
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.n1f(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.n1f(second) | 0;
    var tmp;
    if (firstStart > secondStart) {
      tmp = new Sextuple(_ULongArray___get_size__impl__ju6dtr(first), _ULongArray___get_size__impl__ju6dtr(second), new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp = new Sextuple(_ULongArray___get_size__impl__ju6dtr(second), _ULongArray___get_size__impl__ju6dtr(first), new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp;
    var largerLength = tmp0_container.o2();
    var smallerLength = tmp0_container.p2();
    var largerData = tmp0_container.w4().s5_1;
    var smallerData = tmp0_container.h1d().s5_1;
    var largerStart = tmp0_container.i1d();
    var smallerStart = tmp0_container.j1d();
    var tmp$ret$2;
    // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.possibleAdditionOverflow' call
    var firstMostSignificant = ULongArray__get_impl_pr71q9(largerData, largerStart - 1 | 0);
    var secondMostSignificant = ULongArray__get_impl_pr71q9(smallerData, smallerStart - 1 | 0);
    var tmp_0;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = firstMostSignificant;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_and).c5(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(0, 1610612736)))));
    if (!equals_0(tmp$ret$0, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      tmp_0 = true;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = secondMostSignificant;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).c5(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(0, 1610612736)))));
      tmp_0 = !equals_0(tmp$ret$1, _ULong___init__impl__c78o9k(new Long(0, 0)));
    }
    var possibleOverflow = tmp_0;
    tmp$ret$2 = possibleOverflow;
    var possibleOverflow_0 = tmp$ret$2;
    var tmp_1;
    if (possibleOverflow_0) {
      var tmp$ret$6;
      // Inline function 'kotlin.ULongArray' call
      var tmp2_ULongArray = largerLength + 1 | 0;
      var tmp_2 = 0;
      var tmp_3 = tmp2_ULongArray;
      var tmp_4 = longArray(tmp_3);
      while (tmp_2 < tmp_3) {
        var tmp_5 = tmp_2;
        var tmp$ret$5;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$3;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.add.<anonymous>' call
        tmp$ret$3 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong = tmp$ret$3;
        tmp$ret$4 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$5 = tmp$ret$4;
        tmp_4[tmp_5] = tmp$ret$5;
        tmp_2 = tmp_2 + 1 | 0;
      }
      tmp$ret$6 = _ULongArray___init__impl__twm1l3(tmp_4);
      tmp_1 = tmp$ret$6;
    } else {
      var tmp$ret$10;
      // Inline function 'kotlin.ULongArray' call
      var tmp_6 = 0;
      var tmp_7 = largerLength;
      var tmp_8 = longArray(tmp_7);
      while (tmp_6 < tmp_7) {
        var tmp_9 = tmp_6;
        var tmp$ret$9;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$8;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$7;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.add.<anonymous>' call
        tmp$ret$7 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong_0 = tmp$ret$7;
        tmp$ret$8 = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
        tmp$ret$9 = tmp$ret$8;
        tmp_8[tmp_9] = tmp$ret$9;
        tmp_6 = tmp_6 + 1 | 0;
      }
      tmp$ret$10 = _ULongArray___init__impl__twm1l3(tmp_8);
      tmp_1 = tmp$ret$10;
    }
    var result = tmp_1;
    this.z1f(result, 0, first, second);
    var tmp_10;
    if (possibleOverflow_0) {
      tmp_10 = this.g1c(result);
    } else {
      tmp_10 = result;
    }
    return tmp_10;
  };
  BigInteger63Arithmetic.prototype.a1g = function (first, second, firstStart, secondStart) {
    var comparison = this.y1f(first, second, firstStart, secondStart);
    var firstSize = firstStart + 1 | 0;
    var secondSize = secondStart + 1 | 0;
    var firstIsLarger = comparison === 1;
    if (comparison === 0)
      return this.p1b_1;
    if (secondSize === 1 ? equals_0(ULongArray__get_impl_pr71q9(second, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false) {
      return first;
    }
    if (!firstIsLarger) {
      throw RuntimeException_init_$Create$('subtract result less than zero');
    }
    var tmp;
    if (firstIsLarger) {
      tmp = new Quadruple(new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp = new Quadruple(new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp;
    var largerData = tmp0_container.o2().s5_1;
    var smallerData = tmp0_container.p2().s5_1;
    var largerStart = tmp0_container.w4();
    var smallerStart = tmp0_container.h1d();
    var tmp$ret$3;
    // Inline function 'kotlin.ULongArray' call
    var tmp_0 = 0;
    var tmp_1 = largerStart;
    var tmp_2 = longArray(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.subtractWithStartIndexes.<anonymous>' call
      tmp$ret$0 = _ULong___init__impl__c78o9k(new Long(0, 0));
      var tmp0_toLong = tmp$ret$0;
      tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$2 = tmp$ret$1;
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_2);
    var result = tmp$ret$3;
    var i = 0;
    var diff = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerStart) {
      var tmp$ret$5;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$4;
      // Inline function 'kotlin.ULong.minus' call
      var tmp0_minus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp1_minus = ULongArray__get_impl_pr71q9(smallerData, i);
      tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).c4(_ULong___get_data__impl__fggpzb(tmp1_minus)));
      var tmp2_minus = tmp$ret$4;
      var tmp3_minus = diff;
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_minus).c4(_ULong___get_data__impl__fggpzb(tmp3_minus)));
      diff = tmp$ret$5;
      var tmp_4 = i;
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.and' call
      var tmp4_and = diff;
      var tmp5_and = this.w1b_1;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_and).c5(_ULong___get_data__impl__fggpzb(tmp5_and)));
      ULongArray__set_impl_z19mvh(result, tmp_4, tmp$ret$6);
      var tmp$ret$7;
      // Inline function 'kotlin.ULong.shr' call
      var tmp6_shr = diff;
      tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).x5(63));
      diff = tmp$ret$7;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (!equals_0(diff, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.minus' call
      var tmp7_minus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp8_minus = diff;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_minus).c4(_ULong___get_data__impl__fggpzb(tmp8_minus)));
      diff = tmp$ret$8;
      var tmp_5 = i;
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.and' call
      var tmp9_and = diff;
      var tmp10_and = this.w1b_1;
      tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_and).c5(_ULong___get_data__impl__fggpzb(tmp10_and)));
      ULongArray__set_impl_z19mvh(result, tmp_5, tmp$ret$9);
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.shr' call
      var tmp11_shr = diff;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_shr).x5(63));
      diff = tmp$ret$10;
      var tmp2 = i;
      i = tmp2 + 1 | 0;
    }
    while (i < largerStart) {
      ULongArray__set_impl_z19mvh(result, i, ULongArray__get_impl_pr71q9(largerData, i));
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
    if (this.n1f(result) === (_ULongArray___get_size__impl__ju6dtr(result) - 1 | 0) ? equals_0(ULongArray__get_impl_pr71q9(result, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false) {
      return this.p1b_1;
    }
    return this.g1c(result);
  };
  BigInteger63Arithmetic.prototype.i1c = function (first, second) {
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.n1f(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.n1f(second) | 0;
    return this.a1g(first, second, firstStart, secondStart);
  };
  BigInteger63Arithmetic.prototype.p1c = function (first, second) {
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(first) - this.n1f(first) | 0;
    var secondCorrectedSize = _ULongArray___get_size__impl__ju6dtr(second) - this.n1f(second) | 0;
    return multiplyWithCorrectedSize(this, first, second, firstCorrectedSize, secondCorrectedSize);
  };
  BigInteger63Arithmetic.prototype.b1g = function (original, numberOfWords, value) {
    var tmp$ret$3;
    // Inline function 'kotlin.ULongArray' call
    var tmp0_ULongArray = _ULongArray___get_size__impl__ju6dtr(original) + numberOfWords | 0;
    var tmp = 0;
    var tmp_0 = tmp0_ULongArray;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.extendULongArray.<anonymous>' call
      tmp$ret$0 = tmp_2 < _ULongArray___get_size__impl__ju6dtr(original) ? ULongArray__get_impl_pr71q9(original, tmp_2) : value;
      var tmp0_toLong = tmp$ret$0;
      tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$2 = tmp$ret$1;
      tmp_1[tmp_2] = tmp$ret$2;
      tmp = tmp + 1 | 0;
    }
    tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_1);
    return tmp$ret$3;
  };
  BigInteger63Arithmetic.prototype.a1f = function (firstUnchecked, secondUnchecked) {
    var tmp;
    if (!((_ULongArray___get_size__impl__ju6dtr(firstUnchecked) % 3 | 0) === 0)) {
      var tmp_0 = new ULongArray(firstUnchecked);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.asIterable' call
      var tmp$ret$3;
      // Inline function 'kotlin.ULongArray' call
      var tmp0_ULongArray = imul((_ULongArray___get_size__impl__ju6dtr(firstUnchecked) + 2 | 0) / 3 | 0, 3) - _ULongArray___get_size__impl__ju6dtr(firstUnchecked) | 0;
      var tmp_1 = 0;
      var tmp_2 = tmp0_ULongArray;
      var tmp_3 = longArray(tmp_2);
      while (tmp_1 < tmp_2) {
        var tmp_4 = tmp_1;
        var tmp$ret$2;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.toomCook3Multiply.<anonymous>' call
        tmp$ret$0 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong = tmp$ret$0;
        tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$2 = tmp$ret$1;
        tmp_3[tmp_4] = tmp$ret$2;
        tmp_1 = tmp_1 + 1 | 0;
      }
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_3);
      var tmp1_asIterable = tmp$ret$3;
      tmp$ret$4 = new ULongArray(tmp1_asIterable);
      tmp = plus_2(tmp_0, tmp$ret$4);
    } else {
      tmp = new ULongArray(firstUnchecked);
    }
    var first = toULongArray(tmp);
    var tmp_5;
    if (!((_ULongArray___get_size__impl__ju6dtr(secondUnchecked) % 3 | 0) === 0)) {
      var tmp_6 = new ULongArray(secondUnchecked);
      var tmp$ret$9;
      // Inline function 'kotlin.collections.asIterable' call
      var tmp$ret$8;
      // Inline function 'kotlin.ULongArray' call
      var tmp2_ULongArray = imul((_ULongArray___get_size__impl__ju6dtr(secondUnchecked) + 2 | 0) / 3 | 0, 3) - _ULongArray___get_size__impl__ju6dtr(secondUnchecked) | 0;
      var tmp_7 = 0;
      var tmp_8 = tmp2_ULongArray;
      var tmp_9 = longArray(tmp_8);
      while (tmp_7 < tmp_8) {
        var tmp_10 = tmp_7;
        var tmp$ret$7;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$5;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.toomCook3Multiply.<anonymous>' call
        tmp$ret$5 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong_0 = tmp$ret$5;
        tmp$ret$6 = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
        tmp$ret$7 = tmp$ret$6;
        tmp_9[tmp_10] = tmp$ret$7;
        tmp_7 = tmp_7 + 1 | 0;
      }
      tmp$ret$8 = _ULongArray___init__impl__twm1l3(tmp_9);
      var tmp3_asIterable = tmp$ret$8;
      tmp$ret$9 = new ULongArray(tmp3_asIterable);
      tmp_5 = plus_2(tmp_6, tmp$ret$9);
    } else {
      tmp_5 = new ULongArray(secondUnchecked);
    }
    var second = toULongArray(tmp_5);
    var firstLength = _ULongArray___get_size__impl__ju6dtr(first);
    var secondLength = _ULongArray___get_size__impl__ju6dtr(second);
    var tmp_11;
    if (firstLength > secondLength) {
      var prepared = this.b1g(second, firstLength - secondLength | 0, _ULong___init__impl__c78o9k(new Long(0, 0)));
      tmp_11 = new Pair(new ULongArray(first), new ULongArray(prepared));
    } else if (firstLength < secondLength) {
      var prepared_0 = this.b1g(first, secondLength - firstLength | 0, _ULong___init__impl__c78o9k(new Long(0, 0)));
      tmp_11 = new Pair(new ULongArray(prepared_0), new ULongArray(second));
    } else {
      tmp_11 = new Pair(new ULongArray(first), new ULongArray(second));
    }
    var tmp0_container = tmp_11;
    var firstPrepared = tmp0_container.o2().s5_1;
    var secondPrepared = tmp0_container.p2().s5_1;
    var tmp$ret$10;
    // Inline function 'kotlin.math.max' call
    var tmp4_max = _ULongArray___get_size__impl__ju6dtr(first);
    var tmp5_max = _ULongArray___get_size__impl__ju6dtr(second);
    tmp$ret$10 = Math.max(tmp4_max, tmp5_max);
    var longestLength = tmp$ret$10;
    var extendedDigit = (longestLength + 2 | 0) / 3 | 0;
    var m0 = new SignedULongArray(toULongArray(slice(firstPrepared, until(0, extendedDigit))), true);
    var m1 = new SignedULongArray(toULongArray(slice(firstPrepared, until(extendedDigit, imul(extendedDigit, 2)))), true);
    var m2 = new SignedULongArray(toULongArray(slice(firstPrepared, until(imul(extendedDigit, 2), imul(extendedDigit, 3)))), true);
    var n0 = new SignedULongArray(toULongArray(slice(secondPrepared, until(0, extendedDigit))), true);
    var n1 = new SignedULongArray(toULongArray(slice(secondPrepared, until(extendedDigit, imul(extendedDigit, 2)))), true);
    var n2 = new SignedULongArray(toULongArray(slice(secondPrepared, until(imul(extendedDigit, 2), imul(extendedDigit, 3)))), true);
    var p0 = this.i1f(m0, m2);
    var pe0 = m0;
    var pe1 = this.i1f(p0, m1);
    var pem1 = this.k1f(p0, m1);
    var doublePemM2 = this.h1f(this.i1f(pem1, m2), this.e1c_1);
    var pem2 = this.k1f(doublePemM2, m0);
    var pinf = m2;
    var q0 = this.i1f(n0, n2);
    var qe0 = n0;
    var qe1 = this.i1f(q0, n1);
    var qem1 = this.k1f(q0, n1);
    var doubleQemN2 = this.h1f(this.i1f(qem1, n2), this.e1c_1);
    var qem2 = this.k1f(doubleQemN2, n0);
    var qinf = n2;
    var re0 = this.h1f(pe0, qe0);
    var re1 = this.h1f(pe1, qe1);
    var rem1 = this.h1f(pem1, qem1);
    var rem2 = this.h1f(pem2, qem2);
    var rinf = this.h1f(pinf, qinf);
    var r0 = re0;
    var r4 = rinf;
    var rem2re1diff = this.k1f(rem2, re1);
    var tmp$ret$11;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(3, 0))]));
    var r3 = this.c1g(rem2re1diff, new SignedULongArray(tmp$ret$11, true));
    var r1 = this.g1f(this.k1f(re1, rem1), 1);
    var r2 = this.k1f(rem1, r0);
    r3 = this.i1f(this.g1f(this.k1f(r2, r3), 1), this.h1f(this.e1c_1, rinf));
    r2 = this.k1f(this.i1f(r2, r1), r4);
    r1 = this.k1f(r1, r3);
    var bShiftAmount = imul(extendedDigit, 63);
    var rb0 = r0;
    var rb1 = this.j1f(r1, bShiftAmount);
    var rb2 = this.j1f(r2, imul(bShiftAmount, 2));
    var rb3 = this.j1f(r3, imul(bShiftAmount, 3));
    var rb4 = this.j1f(r4, imul(bShiftAmount, 4));
    var rb = this.i1f(this.i1f(this.i1f(this.i1f(rb0, rb1), rb2), rb3), rb4);
    return rb.l1f_1;
  };
  BigInteger63Arithmetic.prototype.b1f = function (first, second) {
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(first) - this.n1f(first) | 0;
    return this.d1g(first, second, firstCorrectedSize);
  };
  BigInteger63Arithmetic.prototype.d1g = function (first, second, firstCorrectedSize) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = this.y1b_1;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(second).c5(_ULong___get_data__impl__fggpzb(tmp0_and)));
    var secondLow = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.shr' call
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(second).x5(32));
    var secondHigh = tmp$ret$1;
    var requiredBits = this.w1c(first) + this.v1f(second) | 0;
    var tmp;
    if (!((requiredBits % 63 | 0) === 0)) {
      tmp = (requiredBits / 63 | 0) + 1 | 0;
    } else {
      tmp = requiredBits / 63 | 0;
    }
    var requiredWords = tmp;
    var result = _ULongArray___init__impl__twm1l3_0(requiredWords);
    var carryIntoNextRound = _ULong___init__impl__c78o9k(new Long(0, 0));
    var i = 0;
    var j = 0;
    while (i < firstCorrectedSize) {
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = ULongArray__get_impl_pr71q9(first, i);
      var tmp2_and = this.y1b_1;
      tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).c5(_ULong___get_data__impl__fggpzb(tmp2_and)));
      var firstLow = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.ULong.shr' call
      var tmp3_shr = ULongArray__get_impl_pr71q9(first, i);
      tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shr).x5(32));
      var firstHigh = tmp$ret$3;
      var tmp0 = i;
      i = tmp0 + 1 | 0;
      var tmp$ret$4;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstLow).a4(_ULong___get_data__impl__fggpzb(secondLow)));
      var lowerProduct = tmp$ret$4;
      var tmp$ret$5;
      // Inline function 'kotlin.ULong.shr' call
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(lowerProduct).x5(63));
      var lowerCarry = tmp$ret$5;
      var tmp$ret$7;
      // Inline function 'kotlin.ULong.plus' call
      var tmp5_plus = carryIntoNextRound;
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.and' call
      var tmp4_and = this.w1b_1;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(lowerProduct).c5(_ULong___get_data__impl__fggpzb(tmp4_and)));
      var tmp6_plus = tmp$ret$6;
      tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).b4(_ULong___get_data__impl__fggpzb(tmp6_plus)));
      var lowResult = tmp$ret$7;
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.plus' call
      var tmp8_plus = lowerCarry;
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.shr' call
      var tmp7_shr = lowResult;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shr).x5(63));
      var tmp9_plus = tmp$ret$8;
      tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_plus).b4(_ULong___get_data__impl__fggpzb(tmp9_plus)));
      lowerCarry = tmp$ret$9;
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.and' call
      var tmp10_and = lowResult;
      var tmp11_and = this.w1b_1;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_and).c5(_ULong___get_data__impl__fggpzb(tmp11_and)));
      lowResult = tmp$ret$10;
      var tmp$ret$13;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$11;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstLow).a4(_ULong___get_data__impl__fggpzb(secondHigh)));
      var tmp12_plus = tmp$ret$11;
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$12 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(secondLow).a4(_ULong___get_data__impl__fggpzb(firstHigh)));
      var tmp13_plus = tmp$ret$12;
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_plus).b4(_ULong___get_data__impl__fggpzb(tmp13_plus)));
      var middleProduct = tmp$ret$13;
      var middleCarry = lowerCarry;
      var tmp$ret$15;
      // Inline function 'kotlin.ULong.plus' call
      var tmp14_plus = middleCarry;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.shr' call
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(middleProduct).x5(31));
      var tmp15_plus = tmp$ret$14;
      tmp$ret$15 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_plus).b4(_ULong___get_data__impl__fggpzb(tmp15_plus)));
      middleCarry = tmp$ret$15;
      var tmp$ret$18;
      // Inline function 'kotlin.ULong.plus' call
      var tmp18_plus = lowResult;
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.and' call
      var tmp$ret$16;
      // Inline function 'kotlin.ULong.shl' call
      tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(middleProduct).y5(32));
      var tmp16_and = tmp$ret$16;
      var tmp17_and = this.w1b_1;
      tmp$ret$17 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_and).c5(_ULong___get_data__impl__fggpzb(tmp17_and)));
      var tmp19_plus = tmp$ret$17;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp18_plus).b4(_ULong___get_data__impl__fggpzb(tmp19_plus)));
      lowResult = tmp$ret$18;
      var tmp$ret$20;
      // Inline function 'kotlin.ULong.plus' call
      var tmp21_plus = middleCarry;
      var tmp$ret$19;
      // Inline function 'kotlin.ULong.shr' call
      var tmp20_shr = lowResult;
      tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_shr).x5(63));
      var tmp22_plus = tmp$ret$19;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp21_plus).b4(_ULong___get_data__impl__fggpzb(tmp22_plus)));
      middleCarry = tmp$ret$20;
      var tmp_0 = j;
      var tmp$ret$21;
      // Inline function 'kotlin.ULong.and' call
      var tmp23_and = lowResult;
      var tmp24_and = this.w1b_1;
      tmp$ret$21 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp23_and).c5(_ULong___get_data__impl__fggpzb(tmp24_and)));
      ULongArray__set_impl_z19mvh(result, tmp_0, tmp$ret$21);
      var highResult = middleCarry;
      var tmp$ret$23;
      // Inline function 'kotlin.ULong.shl' call
      var tmp$ret$22;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$22 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstHigh).a4(_ULong___get_data__impl__fggpzb(secondHigh)));
      var tmp25_shl = tmp$ret$22;
      tmp$ret$23 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp25_shl).y5(1));
      var higherProduct = tmp$ret$23;
      var tmp$ret$24;
      // Inline function 'kotlin.ULong.plus' call
      var tmp26_plus = highResult;
      tmp$ret$24 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp26_plus).b4(_ULong___get_data__impl__fggpzb(higherProduct)));
      highResult = tmp$ret$24;
      carryIntoNextRound = highResult;
      var tmp1 = j;
      j = tmp1 + 1 | 0;
    }
    if (!equals_0(carryIntoNextRound, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      ULongArray__set_impl_z19mvh(result, j, carryIntoNextRound);
    }
    return result;
  };
  BigInteger63Arithmetic.prototype.u1c = function (base, exponent) {
    if (exponent.equals(new Long(0, 0))) {
      return this.q1b_1;
    }
    if (exponent.equals(new Long(1, 0))) {
      return base;
    }
    if ((_ULongArray___get_size__impl__ju6dtr(base) === 1 ? equals_0(ULongArray__get_impl_pr71q9(base, 0), _ULong___init__impl__c78o9k(new Long(10, 0))) : false) ? exponent.z3(toLong_0(this.f1c_1.length)) < 0 : false) {
      return this.f1c_1[exponent.u5()].s5_1;
    }
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(base) - this.n1f(base) | 0;
    var helperVar = this.q1b_1;
    var exponentVar = exponent;
    var baseVar = base;
    while (exponentVar.z3(new Long(1, 0)) > 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.rem' call
      var tmp0_rem = exponentVar;
      tmp$ret$0 = tmp0_rem.v5(new Long(2, 0));
      if (tmp$ret$0.equals(new Long(0, 0))) {
        baseVar = this.s1f(baseVar, baseVar);
        var tmp$ret$1;
        // Inline function 'kotlin.Long.div' call
        var tmp1_div = exponentVar;
        tmp$ret$1 = tmp1_div.y3(new Long(2, 0));
        exponentVar = tmp$ret$1;
      } else {
        helperVar = this.s1f(baseVar, helperVar);
        baseVar = this.s1f(baseVar, baseVar);
        var tmp$ret$3;
        // Inline function 'kotlin.Long.div' call
        var tmp$ret$2;
        // Inline function 'kotlin.Long.minus' call
        var tmp2_minus = exponentVar;
        tmp$ret$2 = tmp2_minus.c4(new Long(1, 0));
        var tmp3_div = tmp$ret$2;
        tmp$ret$3 = tmp3_div.y3(new Long(2, 0));
        exponentVar = tmp$ret$3;
      }
    }
    return this.s1f(helperVar, baseVar);
  };
  BigInteger63Arithmetic.prototype.e1g = function (dividend, divisor) {
    var divisorSize = _ULongArray___get_size__impl__ju6dtr(divisor);
    var normalizationShift = this.u1f(ULongArray__get_impl_pr71q9(divisor, divisorSize - 1 | 0));
    var divisorNormalized = this.c1f(divisor, normalizationShift);
    var dividendNormalized = this.c1f(dividend, normalizationShift);
    return new Triple(new ULongArray(dividendNormalized), new ULongArray(divisorNormalized), normalizationShift);
  };
  BigInteger63Arithmetic.prototype.f1g = function (remainderNormalized, normalizationShift) {
    var remainder = this.g1g(remainderNormalized, normalizationShift);
    return remainder;
  };
  BigInteger63Arithmetic.prototype.h1g = function (unnormalizedDividend, unnormalizedDivisor) {
    if (this.r1f(unnormalizedDivisor, unnormalizedDividend) > 0) {
      return new Pair(new ULongArray(this.p1b_1), new ULongArray(unnormalizedDividend));
    }
    if (_ULongArray___get_size__impl__ju6dtr(unnormalizedDivisor) === 1 ? _ULongArray___get_size__impl__ju6dtr(unnormalizedDividend) === 1 : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.div' call
      var tmp0_div = ULongArray__get_impl_pr71q9(unnormalizedDividend, 0);
      var tmp1_div = ULongArray__get_impl_pr71q9(unnormalizedDivisor, 0);
      tmp$ret$0 = ulongDivide(tmp0_div, tmp1_div);
      var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
      tmp$ret$1 = tmp2_ulongArrayOf;
      var tmp = new ULongArray(this.g1c(tmp$ret$1));
      var tmp$ret$3;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.rem' call
      var tmp3_rem = ULongArray__get_impl_pr71q9(unnormalizedDividend, 0);
      var tmp4_rem = ULongArray__get_impl_pr71q9(unnormalizedDivisor, 0);
      tmp$ret$2 = ulongRemainder(tmp3_rem, tmp4_rem);
      var tmp5_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$2]));
      tmp$ret$3 = tmp5_ulongArrayOf;
      return new Pair(tmp, new ULongArray(this.g1c(tmp$ret$3)));
    }
    var bitPrecision = this.w1c(unnormalizedDividend) - this.w1c(unnormalizedDivisor) | 0;
    if (bitPrecision === 0) {
      return new Pair(new ULongArray(this.q1b_1), new ULongArray(this.q1f(unnormalizedDividend, unnormalizedDivisor)));
    }
    var tmp0_container = this.e1g(unnormalizedDividend, unnormalizedDivisor);
    var dividend = tmp0_container.o2().s5_1;
    var divisor = tmp0_container.p2().s5_1;
    var normalizationShift = tmp0_container.w4();
    var dividendSize = _ULongArray___get_size__impl__ju6dtr(dividend);
    var divisorSize = _ULongArray___get_size__impl__ju6dtr(divisor);
    var divisorCorrectedSize = _ULongArray___get_size__impl__ju6dtr(divisor) - this.n1f(divisor) | 0;
    var wordPrecision = dividendSize - divisorSize | 0;
    var qjhat;
    var reconstructedQuotient;
    var quotient = _ULongArray___init__impl__twm1l3_0(wordPrecision);
    var divisorTimesBaseToPowerOfM = this.c1f(divisor, imul(wordPrecision, this.u1b_1));
    if (this.r1f(dividend, divisorTimesBaseToPowerOfM) >= 0) {
      quotient = _ULongArray___init__impl__twm1l3_0(wordPrecision + 1 | 0);
      ULongArray__set_impl_z19mvh(quotient, wordPrecision, _ULong___init__impl__c78o9k(new Long(1, 0)));
      dividend = this.q1f(dividend, divisorTimesBaseToPowerOfM);
    }
    var inductionVariable = wordPrecision - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0;
        if ((divisorSize + j | 0) < _ULongArray___get_size__impl__ju6dtr(dividend)) {
          var tmp$ret$4;
          // Inline function 'kotlin.ulongArrayOf' call
          var tmp6_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(dividend, divisorSize + j | 0)]));
          tmp$ret$4 = tmp6_ulongArrayOf;
          tmp_0 = this.i1g(this.c1f(tmp$ret$4, this.u1b_1), ULongArray__get_impl_pr71q9(dividend, (divisorSize + j | 0) - 1 | 0));
        } else {
          var tmp_1;
          if ((divisorSize + j | 0) === _ULongArray___get_size__impl__ju6dtr(dividend)) {
            var tmp$ret$5;
            // Inline function 'kotlin.ulongArrayOf' call
            var tmp7_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(dividend, (divisorSize + j | 0) - 1 | 0)]));
            tmp$ret$5 = tmp7_ulongArrayOf;
            tmp_1 = tmp$ret$5;
          } else {
            tmp_1 = this.p1b_1;
          }
          tmp_0 = tmp_1;
        }
        var twoDigit = tmp_0;
        var tmp_2 = BigInteger32Arithmetic_getInstance();
        var tmp_3 = this.j1g(twoDigit);
        var tmp$ret$6;
        // Inline function 'kotlin.ulongArrayOf' call
        var tmp8_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(divisor, divisorSize - 1 | 0)]));
        tmp$ret$6 = tmp8_ulongArrayOf;
        var convertedResult = tmp_2.u1e(tmp_3, this.j1g(tmp$ret$6));
        qjhat = this.k1g(convertedResult.m2_1.i5_1);
        var tmp_4 = quotient;
        var tmp_5;
        var tmp_6 = qjhat;
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.minus' call
        var tmp9_minus = this.w1b_1;
        tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_minus).c4(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(1, 0)))));
        if (this.l1g(tmp_6, tmp$ret$7) < 0) {
          tmp_5 = ULongArray__get_impl_pr71q9(qjhat, 0);
        } else {
          tmp_5 = this.w1b_1;
        }
        ULongArray__set_impl_z19mvh(tmp_4, j, tmp_5);
        reconstructedQuotient = this.c1f(this.d1g(divisor, ULongArray__get_impl_pr71q9(quotient, j), divisorCorrectedSize), imul(j, this.u1b_1));
        while (this.r1f(reconstructedQuotient, dividend) > 0) {
          var tmp_7 = quotient;
          var tmp$ret$10;
          // Inline function 'kotlin.ULong.minus' call
          var tmp10_minus = ULongArray__get_impl_pr71q9(quotient, j);
          var tmp$ret$9;
          // Inline function 'kotlin.ULong.minus' call
          var tmp$ret$8;
          // Inline function 'kotlin.UInt.toULong' call
          tmp$ret$8 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1))).c5(new Long(-1, 0)));
          var tmp0_minus = tmp$ret$8;
          tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_minus).c4(_ULong___get_data__impl__fggpzb(tmp0_minus)));
          tmp$ret$10 = tmp$ret$9;
          ULongArray__set_impl_z19mvh(tmp_7, j, tmp$ret$10);
          reconstructedQuotient = this.c1f(this.d1g(divisor, ULongArray__get_impl_pr71q9(quotient, j), divisorCorrectedSize), imul(j, this.u1b_1));
        }
        dividend = this.q1f(dividend, reconstructedQuotient);
      }
       while (0 <= inductionVariable);
    while (this.r1f(dividend, divisor) >= 0) {
      quotient = this.i1g(quotient, _ULong___init__impl__c78o9k(new Long(1, 0)));
      dividend = this.q1f(dividend, divisor);
    }
    var denormRemainder = this.f1g(dividend, normalizationShift);
    return new Pair(new ULongArray(this.g1c(quotient)), new ULongArray(denormRemainder));
  };
  BigInteger63Arithmetic.prototype.m1g = function (operand) {
    if (isZero_0(operand, this))
      return this.p1b_1;
    var length = this.w1c(operand);
    var tmp;
    if ((length % 64 | 0) === 0) {
      tmp = length / 64 | 0;
    } else {
      tmp = (length / 64 | 0) + 1 | 0;
    }
    var requiredLength = tmp;
    var wordStep;
    var shiftAmount;
    var result = _ULongArray___init__impl__twm1l3_0(requiredLength);
    var inductionVariable = 0;
    if (inductionVariable < requiredLength)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        wordStep = i / 63 | 0;
        shiftAmount = i % 63 | 0;
        if (((i + wordStep | 0) + 1 | 0) < _ULongArray___get_size__impl__ju6dtr(operand)) {
          var tmp$ret$2;
          // Inline function 'kotlin.ULong.or' call
          var tmp$ret$0;
          // Inline function 'kotlin.ULong.shr' call
          var tmp0_shr = ULongArray__get_impl_pr71q9(operand, i + wordStep | 0);
          var tmp1_shr = shiftAmount;
          tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).x5(tmp1_shr));
          var tmp4_or = tmp$ret$0;
          var tmp$ret$1;
          // Inline function 'kotlin.ULong.shl' call
          var tmp2_shl = ULongArray__get_impl_pr71q9(operand, (i + wordStep | 0) + 1 | 0);
          var tmp3_shl = 63 - shiftAmount | 0;
          tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_shl).y5(tmp3_shl));
          var tmp5_or = tmp$ret$1;
          tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_or).hb(_ULong___get_data__impl__fggpzb(tmp5_or)));
          ULongArray__set_impl_z19mvh(result, i, tmp$ret$2);
        } else {
          var tmp$ret$3;
          // Inline function 'kotlin.ULong.shr' call
          var tmp6_shr = ULongArray__get_impl_pr71q9(operand, i + wordStep | 0);
          var tmp7_shr = shiftAmount;
          tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).x5(tmp7_shr));
          ULongArray__set_impl_z19mvh(result, i, tmp$ret$3);
        }
      }
       while (inductionVariable < requiredLength);
    return this.g1c(result);
  };
  BigInteger63Arithmetic.prototype.n1g = function (operand) {
    var power64Representation = this.m1g(operand);
    var result = _UIntArray___init__impl__ghjpc6_0(imul(_ULongArray___get_size__impl__ju6dtr(power64Representation), 2));
    var inductionVariable = 0;
    var last = _ULongArray___get_size__impl__ju6dtr(power64Representation);
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = imul(2, i);
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.and' call
        var tmp1_and = ULongArray__get_impl_pr71q9(power64Representation, i);
        var tmp$ret$0;
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_toULong = BigInteger32Arithmetic_getInstance().v1d_1;
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).c5(new Long(-1, 0)));
        var tmp2_and = tmp$ret$0;
        tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).c5(_ULong___get_data__impl__fggpzb(tmp2_and)));
        var tmp3_toUInt = tmp$ret$1;
        var tmp$ret$2;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp3_toUInt);
        tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u5());
        tmp$ret$3 = tmp$ret$2;
        UIntArray__set_impl_7f2zu2(result, tmp, tmp$ret$3);
        var tmp_0 = imul(2, i) + 1 | 0;
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.shr' call
        var tmp4_shr = ULongArray__get_impl_pr71q9(power64Representation, i);
        tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shr).x5(32));
        var tmp5_toUInt = tmp$ret$4;
        var tmp$ret$5;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp5_toUInt);
        tmp$ret$5 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u5());
        tmp$ret$6 = tmp$ret$5;
        UIntArray__set_impl_7f2zu2(result, tmp_0, tmp$ret$6);
      }
       while (inductionVariable < last);
    return BigInteger32Arithmetic_getInstance().i1e(result);
  };
  BigInteger63Arithmetic.prototype.o1g = function (operand) {
    if (_UIntArray___get_size__impl__r6l8ci(operand) === 0) {
      return this.p1b_1;
    }
    if (_UIntArray___get_size__impl__r6l8ci(operand) === 1) {
      var tmp$ret$1;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_toULong = UIntArray__get_impl_gp5kza(operand, 0);
      tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).c5(new Long(-1, 0)));
      var tmp1_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
      tmp$ret$1 = tmp1_ulongArrayOf;
      return tmp$ret$1;
    }
    var length = BigInteger32Arithmetic_getInstance().g1e(operand);
    var tmp;
    if ((length % 63 | 0) === 0) {
      tmp = length / 63 | 0;
    } else {
      tmp = (length / 63 | 0) + 1 | 0;
    }
    var requiredLength = tmp;
    var result = _ULongArray___init__impl__twm1l3_0(requiredLength);
    var skipWordCount;
    var inductionVariable = 0;
    if (inductionVariable < requiredLength)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        skipWordCount = i / 32 | 0;
        var shiftAmount = i % 32 | 0;
        var position = imul(i, 2) - skipWordCount | 0;
        if (requiredLength === 2) {
          var tmp$ret$6;
          // Inline function 'kotlin.ULong.or' call
          var tmp$ret$2;
          // Inline function 'kotlin.UInt.toULong' call
          var tmp2_toULong = UIntArray__get_impl_gp5kza(operand, 0);
          tmp$ret$2 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp2_toULong)).c5(new Long(-1, 0)));
          var tmp7_or = tmp$ret$2;
          var tmp$ret$5;
          // Inline function 'kotlin.ULong.and' call
          var tmp$ret$4;
          // Inline function 'kotlin.ULong.shl' call
          var tmp$ret$3;
          // Inline function 'kotlin.UInt.toULong' call
          var tmp3_toULong = UIntArray__get_impl_gp5kza(operand, 1);
          tmp$ret$3 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp3_toULong)).c5(new Long(-1, 0)));
          var tmp4_shl = tmp$ret$3;
          tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shl).y5(32));
          var tmp5_and = tmp$ret$4;
          var tmp6_and = this.z1b_1;
          tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_and).c5(_ULong___get_data__impl__fggpzb(tmp6_and)));
          var tmp8_or = tmp$ret$5;
          tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_or).hb(_ULong___get_data__impl__fggpzb(tmp8_or)));
          ULongArray__set_impl_z19mvh(result, 0, tmp$ret$6);
          if (_UIntArray___get_size__impl__r6l8ci(operand) === 4) {
            var tmp$ret$14;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$11;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$8;
            // Inline function 'kotlin.ULong.shr' call
            var tmp$ret$7;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp9_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            tmp$ret$7 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp9_toULong)).c5(new Long(-1, 0)));
            var tmp10_shr = tmp$ret$7;
            tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_shr).x5(31));
            var tmp13_or = tmp$ret$8;
            var tmp$ret$10;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$9;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp11_toULong = UIntArray__get_impl_gp5kza(operand, 2);
            tmp$ret$9 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp11_toULong)).c5(new Long(-1, 0)));
            var tmp12_shl = tmp$ret$9;
            tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_shl).y5(1));
            var tmp14_or = tmp$ret$10;
            tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_or).hb(_ULong___get_data__impl__fggpzb(tmp14_or)));
            var tmp17_or = tmp$ret$11;
            var tmp$ret$13;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$12;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp15_toULong = UIntArray__get_impl_gp5kza(operand, 3);
            tmp$ret$12 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp15_toULong)).c5(new Long(-1, 0)));
            var tmp16_shl = tmp$ret$12;
            tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_shl).y5(33));
            var tmp18_or = tmp$ret$13;
            tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_or).hb(_ULong___get_data__impl__fggpzb(tmp18_or)));
            ULongArray__set_impl_z19mvh(result, 1, tmp$ret$14);
          } else {
            if (_UIntArray___get_size__impl__r6l8ci(operand) > 2) {
              var tmp$ret$19;
              // Inline function 'kotlin.ULong.or' call
              var tmp$ret$16;
              // Inline function 'kotlin.ULong.shr' call
              var tmp$ret$15;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp19_toULong = UIntArray__get_impl_gp5kza(operand, 1);
              tmp$ret$15 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp19_toULong)).c5(new Long(-1, 0)));
              var tmp20_shr = tmp$ret$15;
              tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_shr).x5(31));
              var tmp23_or = tmp$ret$16;
              var tmp$ret$18;
              // Inline function 'kotlin.ULong.shl' call
              var tmp$ret$17;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp21_toULong = UIntArray__get_impl_gp5kza(operand, 2);
              tmp$ret$17 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp21_toULong)).c5(new Long(-1, 0)));
              var tmp22_shl = tmp$ret$17;
              tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp22_shl).y5(1));
              var tmp24_or = tmp$ret$18;
              tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp23_or).hb(_ULong___get_data__impl__fggpzb(tmp24_or)));
              ULongArray__set_impl_z19mvh(result, 1, tmp$ret$19);
            } else {
              var tmp$ret$21;
              // Inline function 'kotlin.ULong.shr' call
              var tmp$ret$20;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp25_toULong = UIntArray__get_impl_gp5kza(operand, 1);
              tmp$ret$20 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp25_toULong)).c5(new Long(-1, 0)));
              var tmp26_shr = tmp$ret$20;
              tmp$ret$21 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp26_shr).x5(31));
              ULongArray__set_impl_z19mvh(result, 1, tmp$ret$21);
            }
          }
        } else {
          var tmp1_subject = i;
          if (tmp1_subject === 0) {
            var tmp$ret$26;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$22;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp27_toULong = UIntArray__get_impl_gp5kza(operand, 0);
            tmp$ret$22 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp27_toULong)).c5(new Long(-1, 0)));
            var tmp32_or = tmp$ret$22;
            var tmp$ret$25;
            // Inline function 'kotlin.ULong.and' call
            var tmp$ret$24;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$23;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp28_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            tmp$ret$23 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp28_toULong)).c5(new Long(-1, 0)));
            var tmp29_shl = tmp$ret$23;
            tmp$ret$24 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp29_shl).y5(32));
            var tmp30_and = tmp$ret$24;
            var tmp31_and = this.z1b_1;
            tmp$ret$25 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp30_and).c5(_ULong___get_data__impl__fggpzb(tmp31_and)));
            var tmp33_or = tmp$ret$25;
            tmp$ret$26 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp32_or).hb(_ULong___get_data__impl__fggpzb(tmp33_or)));
            ULongArray__set_impl_z19mvh(result, i, tmp$ret$26);
          } else if (1 <= tmp1_subject ? tmp1_subject < (requiredLength - 1 | 0) : false) {
            var tmp$ret$35;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$31;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$28;
            // Inline function 'kotlin.ULong.shr' call
            var tmp$ret$27;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp34_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
            tmp$ret$27 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp34_toULong)).c5(new Long(-1, 0)));
            var tmp35_shr = tmp$ret$27;
            var tmp36_shr = 32 - shiftAmount | 0;
            tmp$ret$28 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp35_shr).x5(tmp36_shr));
            var tmp39_or = tmp$ret$28;
            var tmp$ret$30;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$29;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp37_toULong = UIntArray__get_impl_gp5kza(operand, position);
            tmp$ret$29 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp37_toULong)).c5(new Long(-1, 0)));
            var tmp38_shl = tmp$ret$29;
            tmp$ret$30 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp38_shl).y5(shiftAmount));
            var tmp40_or = tmp$ret$30;
            tmp$ret$31 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp39_or).hb(_ULong___get_data__impl__fggpzb(tmp40_or)));
            var tmp46_or = tmp$ret$31;
            var tmp$ret$34;
            // Inline function 'kotlin.ULong.and' call
            var tmp$ret$33;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$32;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp41_toULong = UIntArray__get_impl_gp5kza(operand, position + 1 | 0);
            tmp$ret$32 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp41_toULong)).c5(new Long(-1, 0)));
            var tmp42_shl = tmp$ret$32;
            var tmp43_shl = 32 + shiftAmount | 0;
            tmp$ret$33 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp42_shl).y5(tmp43_shl));
            var tmp44_and = tmp$ret$33;
            var tmp45_and = this.z1b_1;
            tmp$ret$34 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp44_and).c5(_ULong___get_data__impl__fggpzb(tmp45_and)));
            var tmp47_or = tmp$ret$34;
            tmp$ret$35 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp46_or).hb(_ULong___get_data__impl__fggpzb(tmp47_or)));
            ULongArray__set_impl_z19mvh(result, i, tmp$ret$35);
          } else if (tmp1_subject === (requiredLength - 1 | 0)) {
            if (position < _UIntArray___get_size__impl__r6l8ci(operand)) {
              var tmp$ret$40;
              // Inline function 'kotlin.ULong.or' call
              var tmp$ret$37;
              // Inline function 'kotlin.ULong.shr' call
              var tmp$ret$36;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp48_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
              tmp$ret$36 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp48_toULong)).c5(new Long(-1, 0)));
              var tmp49_shr = tmp$ret$36;
              var tmp50_shr = 32 - shiftAmount | 0;
              tmp$ret$37 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp49_shr).x5(tmp50_shr));
              var tmp53_or = tmp$ret$37;
              var tmp$ret$39;
              // Inline function 'kotlin.ULong.shl' call
              var tmp$ret$38;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp51_toULong = UIntArray__get_impl_gp5kza(operand, position);
              tmp$ret$38 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp51_toULong)).c5(new Long(-1, 0)));
              var tmp52_shl = tmp$ret$38;
              tmp$ret$39 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp52_shl).y5(shiftAmount));
              var tmp54_or = tmp$ret$39;
              tmp$ret$40 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp53_or).hb(_ULong___get_data__impl__fggpzb(tmp54_or)));
              ULongArray__set_impl_z19mvh(result, i, tmp$ret$40);
            } else {
              var tmp$ret$42;
              // Inline function 'kotlin.ULong.shr' call
              var tmp$ret$41;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp55_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
              tmp$ret$41 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(tmp55_toULong)).c5(new Long(-1, 0)));
              var tmp56_shr = tmp$ret$41;
              var tmp57_shr = 32 - shiftAmount | 0;
              tmp$ret$42 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp56_shr).x5(tmp57_shr));
              ULongArray__set_impl_z19mvh(result, i, tmp$ret$42);
            }
          }
        }
      }
       while (inductionVariable < requiredLength);
    return result;
  };
  BigInteger63Arithmetic.prototype.r1c = function (first, second) {
    return this.h1g(first, second);
  };
  BigInteger63Arithmetic.prototype.i1f = function (_this__u8e3s4, other) {
    return signedAdd(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.k1f = function (_this__u8e3s4, other) {
    return signedSubtract(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.h1f = function (_this__u8e3s4, other) {
    return signedMultiply(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.c1g = function (_this__u8e3s4, other) {
    return signedDivide(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.g1f = function (_this__u8e3s4, places) {
    return new SignedULongArray(this.g1g(_this__u8e3s4.l1f_1, places), _this__u8e3s4.m1f_1);
  };
  BigInteger63Arithmetic.prototype.j1f = function (_this__u8e3s4, places) {
    return new SignedULongArray(this.c1f(_this__u8e3s4.l1f_1, places), _this__u8e3s4.m1f_1);
  };
  BigInteger63Arithmetic.prototype.f1f = function (_this__u8e3s4, operand) {
    return new SignedULongArray(this.p1g(_this__u8e3s4.l1f_1, operand), _this__u8e3s4.m1f_1);
  };
  BigInteger63Arithmetic.prototype.d1b = function (number, base) {
    var parsed = this.p1b_1;
    // Inline function 'kotlin.text.forEach' call
    var tmp$ret$1;
    // Inline function 'kotlin.text.toLowerCase' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = number;
    tmp$ret$1 = tmp$ret$0.toLowerCase();
    var tmp0_forEach = tmp$ret$1;
    var indexedObject = tmp0_forEach;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.parseForBase.<anonymous>' call
      var tmp = BigInteger63Arithmetic_getInstance();
      var tmp_0 = BigInteger63Arithmetic_getInstance();
      var tmp_1 = parsed;
      var tmp$ret$2;
      // Inline function 'kotlin.toULong' call
      tmp$ret$2 = _ULong___init__impl__c78o9k(toLong_0(base));
      var tmp_2 = tmp_0.q1g(tmp_1, tmp$ret$2);
      var tmp$ret$3;
      // Inline function 'kotlin.toULong' call
      var tmp0_toULong = toDigit(element, base);
      tmp$ret$3 = _ULong___init__impl__c78o9k(toLong_0(tmp0_toULong));
      parsed = tmp.i1g(tmp_2, tmp$ret$3);
    }
    return this.g1c(parsed);
  };
  BigInteger63Arithmetic.prototype.a1d = function (operand, base) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.copyOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(copyOf(_ULongArray___get_storage__impl__28e64j(operand)));
    var copy = tmp$ret$0;
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong_0(base));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp0_ulongArrayOf;
    var baseArray = tmp$ret$2;
    var stringBuilder = StringBuilder_init_$Create$_0();
    while (!equals_0(copy, this.p1b_1)) {
      var divremResult = this.r1g(copy, baseArray);
      if (ULongArray__isEmpty_impl_c3yngu(divremResult.n2_1.s5_1)) {
        stringBuilder.ga(0);
      } else {
        stringBuilder.ha(toString_0(ULongArray__get_impl_pr71q9(divremResult.n2_1.s5_1, 0), base));
      }
      copy = divremResult.m2_1.s5_1;
    }
    var tmp$ret$3;
    // Inline function 'kotlin.text.reversed' call
    var tmp1_reversed = stringBuilder.toString();
    tmp$ret$3 = toString_3(reversed(isCharSequence(tmp1_reversed) ? tmp1_reversed : THROW_CCE()));
    return tmp$ret$3;
  };
  BigInteger63Arithmetic.prototype.p1g = function (operand, mask) {
    var tmp;
    if (_ULongArray___get_size__impl__ju6dtr(operand) > _ULongArray___get_size__impl__ju6dtr(mask)) {
      tmp = new Pair(new ULongArray(operand), new ULongArray(mask));
    } else {
      tmp = new Pair(new ULongArray(mask), new ULongArray(operand));
    }
    var tmp0_container = tmp;
    var bigger = tmp0_container.o2().s5_1;
    var smaller = tmp0_container.p2().s5_1;
    var tmp$ret$4;
    // Inline function 'kotlin.ULongArray' call
    var tmp0_ULongArray = _ULongArray___get_size__impl__ju6dtr(smaller);
    var tmp_0 = 0;
    var tmp_1 = tmp0_ULongArray;
    var tmp_2 = longArray(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$3;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.and.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.and' call
      var tmp0_and = ULongArray__get_impl_pr71q9(operand, tmp_3);
      var tmp1_and = ULongArray__get_impl_pr71q9(mask, tmp_3);
      tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_and).c5(_ULong___get_data__impl__fggpzb(tmp1_and)));
      tmp$ret$1 = tmp$ret$0;
      var tmp0_toLong = tmp$ret$1;
      tmp$ret$2 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$3 = tmp$ret$2;
      tmp_2[tmp_3] = tmp$ret$3;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$4 = _ULongArray___init__impl__twm1l3(tmp_2);
    return tmp$ret$4;
  };
  BigInteger63Arithmetic.prototype.c1f = function (_this__u8e3s4, places) {
    return this.w1f(_this__u8e3s4, places);
  };
  BigInteger63Arithmetic.prototype.g1g = function (_this__u8e3s4, places) {
    return this.x1f(_this__u8e3s4, places);
  };
  BigInteger63Arithmetic.prototype.d1f = function (_this__u8e3s4, other) {
    return this.j1c(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.q1f = function (_this__u8e3s4, other) {
    return this.i1c(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.s1f = function (_this__u8e3s4, other) {
    return this.p1c(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.i1g = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.j1c(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger63Arithmetic.prototype.e1f = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.i1c(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger63Arithmetic.prototype.q1g = function (_this__u8e3s4, other) {
    return this.b1f(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.t1f = function (_this__u8e3s4, other) {
    return this.r1c(_this__u8e3s4, other).m2_1.s5_1;
  };
  BigInteger63Arithmetic.prototype.r1g = function (_this__u8e3s4, other) {
    return this.r1c(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.r1f = function (_this__u8e3s4, other) {
    return this.m1b(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.l1g = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.m1b(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger63Arithmetic.prototype.j1g = function (_this__u8e3s4) {
    return this.n1g(_this__u8e3s4);
  };
  BigInteger63Arithmetic.prototype.k1g = function (_this__u8e3s4) {
    return this.o1g(_this__u8e3s4);
  };
  BigInteger63Arithmetic.prototype.f1b = function (uLong) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = this.a1c_1;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(uLong).c5(_ULong___get_data__impl__fggpzb(tmp0_and)));
    if (!equals_0(tmp$ret$0, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      var tmp$ret$2;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = this.w1b_1;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(uLong).c5(_ULong___get_data__impl__fggpzb(tmp1_and)));
      var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1, _ULong___init__impl__c78o9k(new Long(1, 0))]));
      tmp$ret$2 = tmp2_ulongArrayOf;
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.ulongArrayOf' call
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(longArrayOf([uLong]));
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  BigInteger63Arithmetic.prototype.h1b = function (uInt) {
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UInt___get_data__impl__f0vqqw(uInt)).c5(new Long(-1, 0)));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    tmp$ret$1 = tmp0_ulongArrayOf;
    return tmp$ret$1;
  };
  BigInteger63Arithmetic.prototype.j1b = function (uShort) {
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UShort___get_data__impl__g0245(uShort)).c5(new Long(65535, 0)));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    tmp$ret$1 = tmp0_ulongArrayOf;
    return tmp$ret$1;
  };
  BigInteger63Arithmetic.prototype.l1b = function (uByte) {
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_0(_UByte___get_data__impl__jof9qr(uByte)).c5(new Long(255, 0)));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    tmp$ret$1 = tmp0_ulongArrayOf;
    return tmp$ret$1;
  };
  BigInteger63Arithmetic.prototype.v1a = function (long) {
    Companion_getInstance_9();
    if (long.equals(new Long(0, -2147483648))) {
      var tmp$ret$0;
      // Inline function 'kotlin.ulongArrayOf' call
      tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
      return tmp$ret$0;
    }
    var tmp$ret$4;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.and' call
    var tmp$ret$2;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$1;
    // Inline function 'kotlin.math.absoluteValue' call
    tmp$ret$1 = abs(long);
    var tmp0_toULong = tmp$ret$1;
    tmp$ret$2 = _ULong___init__impl__c78o9k(tmp0_toULong);
    var tmp1_and = tmp$ret$2;
    var tmp2_and = this.w1b_1;
    tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).c5(_ULong___get_data__impl__fggpzb(tmp2_and)));
    var tmp3_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$3]));
    tmp$ret$4 = tmp3_ulongArrayOf;
    return tmp$ret$4;
  };
  BigInteger63Arithmetic.prototype.w1a = function (int) {
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0;
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0__get_absoluteValue__nukmtt = toLong_0(int);
    tmp$ret$0 = abs(tmp0__get_absoluteValue__nukmtt);
    var tmp1_toULong = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(tmp1_toULong);
    var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp2_ulongArrayOf;
    return tmp$ret$2;
  };
  BigInteger63Arithmetic.prototype.x1a = function (short) {
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0;
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0__get_absoluteValue__nukmtt = short;
    tmp$ret$0 = abs_0(tmp0__get_absoluteValue__nukmtt);
    var tmp1_toULong = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong_0(tmp1_toULong));
    var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp2_ulongArrayOf;
    return tmp$ret$2;
  };
  BigInteger63Arithmetic.prototype.y1a = function (byte) {
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0;
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0__get_absoluteValue__nukmtt = byte;
    tmp$ret$0 = abs_0(tmp0__get_absoluteValue__nukmtt);
    var tmp1_toULong = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong_0(tmp1_toULong));
    var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp2_ulongArrayOf;
    return tmp$ret$2;
  };
  var BigInteger63Arithmetic_instance;
  function BigInteger63Arithmetic_getInstance() {
    if (BigInteger63Arithmetic_instance == null)
      new BigInteger63Arithmetic();
    return BigInteger63Arithmetic_instance;
  }
  function toDigit(_this__u8e3s4, base) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(57) : false) {
      tmp = Char__toInt_impl_vasixd(Char__minus_impl_a2frrh_0(_this__u8e3s4, 48));
    } else if (_Char___init__impl__6a9atx(97) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(122) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(97)) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(90) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65)) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65313) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(65338) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65313)) - 10 | 0;
    } else if (_Char___init__impl__6a9atx(65345) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(65370) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65345)) - 10 | 0;
    } else if (equals_0(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(46)))) {
      throw NumberFormatException_init_$Create$('Invalid digit for radix ' + new Char(_this__u8e3s4) + ' (Possibly a decimal value, which is not supported by BigInteger parser');
    } else {
      throw NumberFormatException_init_$Create$('Invalid digit for radix ' + new Char(_this__u8e3s4));
    }
    var digit = tmp;
    if (digit < 0 ? true : digit >= base) {
      throw NumberFormatException_init_$Create$('' + new Char(_this__u8e3s4) + ' is not a valid digit for number system with base ' + base);
    }
    return digit;
  }
  function RuntimePlatform() {
    RuntimePlatform_instance = this;
  }
  RuntimePlatform.prototype.p1a = function () {
    return Platform_JS_getInstance();
  };
  var RuntimePlatform_instance;
  function RuntimePlatform_getInstance() {
    if (RuntimePlatform_instance == null)
      new RuntimePlatform();
    return RuntimePlatform_instance;
  }
  function Roles() {
    Roles_instance = this;
    this.ORCHESTRATOR_ADMIN = 'tr_orchestrator_admin';
    this.ORCHESTRATOR_USER = 'tr_orchestrator_user';
    this.PROJECT_MANAGER_ADMIN = 'tr_project_manager_admin';
    this.PROJECT_MANAGER_USER = 'tr_project_manager_user';
    this.STAKEHOLDER_ADMIN = 'tr_stakeholder_admin';
    this.STAKEHOLDER_USER = 'tr_stakeholder_user';
  }
  Roles.prototype.s1g = function () {
    return this.ORCHESTRATOR_ADMIN;
  };
  Roles.prototype.t1g = function () {
    return this.ORCHESTRATOR_USER;
  };
  Roles.prototype.u1g = function () {
    return this.PROJECT_MANAGER_ADMIN;
  };
  Roles.prototype.v1g = function () {
    return this.PROJECT_MANAGER_USER;
  };
  Roles.prototype.w1g = function () {
    return this.STAKEHOLDER_ADMIN;
  };
  Roles.prototype.x1g = function () {
    return this.STAKEHOLDER_USER;
  };
  var Roles_instance;
  function Roles_getInstance() {
    if (Roles_instance == null)
      new Roles();
    return Roles_instance;
  }
  var Role_ORCHESTRATOR_ADMIN_instance;
  var Role_ORCHESTRATOR_USER_instance;
  var Role_PROJECT_MANAGER_ADMIN_instance;
  var Role_PROJECT_MANAGER_USER_instance;
  var Role_STAKEHOLDER_ADMIN_instance;
  var Role_STAKEHOLDER_USER_instance;
  var Role_entriesInitialized_0;
  function Role_initEntries_0() {
    if (Role_entriesInitialized_0)
      return Unit_getInstance();
    Role_entriesInitialized_0 = true;
    Roles_getInstance();
    Role_ORCHESTRATOR_ADMIN_instance = new Role_1('ORCHESTRATOR_ADMIN', 0, 'tr_orchestrator_admin');
    Roles_getInstance();
    Role_ORCHESTRATOR_USER_instance = new Role_1('ORCHESTRATOR_USER', 1, 'tr_orchestrator_user');
    Roles_getInstance();
    Role_PROJECT_MANAGER_ADMIN_instance = new Role_1('PROJECT_MANAGER_ADMIN', 2, 'tr_project_manager_admin');
    Roles_getInstance();
    Role_PROJECT_MANAGER_USER_instance = new Role_1('PROJECT_MANAGER_USER', 3, 'tr_project_manager_user');
    Roles_getInstance();
    Role_STAKEHOLDER_ADMIN_instance = new Role_1('STAKEHOLDER_ADMIN', 4, 'tr_stakeholder_admin');
    Roles_getInstance();
    Role_STAKEHOLDER_USER_instance = new Role_1('STAKEHOLDER_USER', 5, 'tr_stakeholder_user');
  }
  function Role_1(name, ordinal, value) {
    Enum.call(this, name, ordinal);
    this.a1h_1 = value;
  }
  Role_1.prototype.toString = function () {
    return this.a1h_1;
  };
  function Role_ORCHESTRATOR_USER_getInstance() {
    Role_initEntries_0();
    return Role_ORCHESTRATOR_USER_instance;
  }
  function Role_STAKEHOLDER_USER_getInstance() {
    Role_initEntries_0();
    return Role_STAKEHOLDER_USER_instance;
  }
  function ExceptionCodes() {
    ExceptionCodes_instance = this;
  }
  ExceptionCodes.prototype.negativeTransaction = function () {
    return 1000;
  };
  ExceptionCodes.prototype.notEnoughAssets = function () {
    return 1001;
  };
  ExceptionCodes.prototype.granularityTooSmall = function () {
    return 1002;
  };
  var ExceptionCodes_instance;
  function ExceptionCodes_getInstance() {
    if (ExceptionCodes_instance == null)
      new ExceptionCodes();
    return ExceptionCodes_instance;
  }
  function GeoLocationDTO() {
  }
  function RedirectableRoutes() {
    RedirectableRoutes_instance = this;
  }
  RedirectableRoutes.prototype.quotations = function () {
    return 'quotations';
  };
  RedirectableRoutes.prototype.projects = function () {
    return 'projects';
  };
  var RedirectableRoutes_instance;
  function RedirectableRoutes_getInstance() {
    if (RedirectableRoutes_instance == null)
      new RedirectableRoutes();
    return RedirectableRoutes_instance;
  }
  function S2SourcingEvent() {
  }
  function Code() {
  }
  function EvidenceDTO() {
  }
  function EvidenceTypeList() {
  }
  function EvidenceType() {
  }
  function Companion_31() {
    Companion_instance_31 = this;
  }
  Companion_31.prototype.serializer = function () {
    return $serializer_getInstance_8();
  };
  var Companion_instance_31;
  function Companion_getInstance_31() {
    if (Companion_instance_31 == null)
      new Companion_31();
    return Companion_instance_31;
  }
  function $serializer_10() {
    $serializer_instance_8 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('cccev.dsl.model.CoreLocationLocation', this, 0);
    this.o1h_1 = tmp0_serialDesc;
  }
  $serializer_10.prototype.al = function () {
    return this.o1h_1;
  };
  $serializer_10.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_10.prototype.zr = function (decoder) {
    var tmp0_desc = this.o1h_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_input = decoder.as(tmp0_desc);
    if (tmp4_input.bn()) {
    } else
      while (tmp1_flag) {
        tmp2_index = tmp4_input.cn(tmp0_desc);
        if (tmp2_index === -1)
          tmp1_flag = false;
        else
          throw UnknownFieldException_init_$Create$(tmp2_index);
      }
    tmp4_input.an(tmp0_desc);
    return CoreLocationLocation_init_$Create$(tmp3_bitMask0, null);
  };
  $serializer_10.prototype.p1h = function (encoder, value) {
    var tmp0_desc = this.o1h_1;
    var tmp1_output = encoder.as(tmp0_desc);
    tmp1_output.an(tmp0_desc);
  };
  $serializer_10.prototype.cs = function (encoder, value) {
    return this.p1h(encoder, value instanceof CoreLocationLocation ? value : THROW_CCE());
  };
  var $serializer_instance_8;
  function $serializer_getInstance_8() {
    if ($serializer_instance_8 == null)
      new $serializer_10();
    return $serializer_instance_8;
  }
  function CoreLocationLocation_init_$Init$(seen1, serializationConstructorMarker, $this) {
    if (!(0 === (0 & seen1))) {
      throwMissingFieldException(seen1, 0, $serializer_getInstance_8().o1h_1);
    }
    return $this;
  }
  function CoreLocationLocation_init_$Create$(seen1, serializationConstructorMarker) {
    return CoreLocationLocation_init_$Init$(seen1, serializationConstructorMarker, Object.create(CoreLocationLocation.prototype));
  }
  function CoreLocationLocation() {
    Companion_getInstance_31();
  }
  function PeriodOfTime_init_$Init$(duration, endTime, startTime, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      duration = null;
    if (!(($mask0 & 2) === 0))
      endTime = null;
    if (!(($mask0 & 4) === 0))
      startTime = null;
    PeriodOfTime.call($this, duration, endTime, startTime);
    return $this;
  }
  function PeriodOfTime_init_$Create$(duration, endTime, startTime, $mask0, $marker) {
    return PeriodOfTime_init_$Init$(duration, endTime, startTime, $mask0, $marker, Object.create(PeriodOfTime.prototype));
  }
  function Companion_32() {
    Companion_instance_32 = this;
  }
  Companion_32.prototype.serializer = function () {
    return $serializer_getInstance_9();
  };
  var Companion_instance_32;
  function Companion_getInstance_32() {
    if (Companion_instance_32 == null)
      new Companion_32();
    return Companion_instance_32;
  }
  function $serializer_11() {
    $serializer_instance_9 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('cccev.dsl.model.PeriodOfTime', this, 3);
    tmp0_serialDesc.dp('duration', true);
    tmp0_serialDesc.dp('endTime', true);
    tmp0_serialDesc.dp('startTime', true);
    this.q1h_1 = tmp0_serialDesc;
  }
  $serializer_11.prototype.al = function () {
    return this.q1h_1;
  };
  $serializer_11.prototype.jp = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [get_nullable(StringSerializer_getInstance()), get_nullable(IntSerializer_getInstance()), get_nullable(IntSerializer_getInstance())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer_11.prototype.zr = function (decoder) {
    var tmp0_desc = this.q1h_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.as(tmp0_desc);
    if (tmp7_input.bn()) {
      tmp4_local0 = tmp7_input.gn(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.gn(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.gn(tmp0_desc, 2, IntSerializer_getInstance(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.cn(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.gn(tmp0_desc, 0, StringSerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.gn(tmp0_desc, 1, IntSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.gn(tmp0_desc, 2, IntSerializer_getInstance(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.an(tmp0_desc);
    return PeriodOfTime_init_$Create$_0(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer_11.prototype.r1h = function (encoder, value) {
    var tmp0_desc = this.q1h_1;
    var tmp1_output = encoder.as(tmp0_desc);
    if (tmp1_output.hn(tmp0_desc, 0) ? true : !(value.duration == null)) {
      tmp1_output.ln(tmp0_desc, 0, StringSerializer_getInstance(), value.duration);
    }
    if (tmp1_output.hn(tmp0_desc, 1) ? true : !(value.endTime == null)) {
      tmp1_output.ln(tmp0_desc, 1, IntSerializer_getInstance(), value.endTime);
    }
    if (tmp1_output.hn(tmp0_desc, 2) ? true : !(value.startTime == null)) {
      tmp1_output.ln(tmp0_desc, 2, IntSerializer_getInstance(), value.startTime);
    }
    tmp1_output.an(tmp0_desc);
  };
  $serializer_11.prototype.cs = function (encoder, value) {
    return this.r1h(encoder, value instanceof PeriodOfTime ? value : THROW_CCE());
  };
  var $serializer_instance_9;
  function $serializer_getInstance_9() {
    if ($serializer_instance_9 == null)
      new $serializer_11();
    return $serializer_instance_9;
  }
  function PeriodOfTime_init_$Init$_0(seen1, duration, endTime, startTime, serializationConstructorMarker, $this) {
    if (!(0 === (0 & seen1))) {
      throwMissingFieldException(seen1, 0, $serializer_getInstance_9().q1h_1);
    }
    if (0 === (seen1 & 1))
      $this.duration = null;
    else
      $this.duration = duration;
    if (0 === (seen1 & 2))
      $this.endTime = null;
    else
      $this.endTime = endTime;
    if (0 === (seen1 & 4))
      $this.startTime = null;
    else
      $this.startTime = startTime;
    return $this;
  }
  function PeriodOfTime_init_$Create$_0(seen1, duration, endTime, startTime, serializationConstructorMarker) {
    return PeriodOfTime_init_$Init$_0(seen1, duration, endTime, startTime, serializationConstructorMarker, Object.create(PeriodOfTime.prototype));
  }
  function PeriodOfTime(duration, endTime, startTime) {
    Companion_getInstance_32();
    var duration_0 = duration === void 1 ? null : duration;
    var endTime_0 = endTime === void 1 ? null : endTime;
    var startTime_0 = startTime === void 1 ? null : startTime;
    this.duration = duration_0;
    this.endTime = endTime_0;
    this.startTime = startTime_0;
  }
  PeriodOfTime.prototype.s1h = function () {
    return this.duration;
  };
  PeriodOfTime.prototype.t1h = function () {
    return this.endTime;
  };
  PeriodOfTime.prototype.u1h = function () {
    return this.startTime;
  };
  function InformationConcept() {
  }
  function SupportedValueDTO() {
  }
  function DataUnitDTO() {
  }
  function DataUnitInitCommand() {
  }
  function DataUnitCommand() {
  }
  function DataUnitEvent() {
  }
  function DataUnitCreatedEventDTO() {
  }
  var DataUnitType_BOOLEAN_instance;
  var DataUnitType_DATE_instance;
  var DataUnitType_NUMBER_instance;
  var DataUnitType_STRING_instance;
  var DataUnitType_entriesInitialized;
  function DataUnitType_initEntries() {
    if (DataUnitType_entriesInitialized)
      return Unit_getInstance();
    DataUnitType_entriesInitialized = true;
    DataUnitType_BOOLEAN_instance = new DataUnitType('BOOLEAN', 0);
    DataUnitType_DATE_instance = new DataUnitType('DATE', 1);
    DataUnitType_NUMBER_instance = new DataUnitType('NUMBER', 2);
    DataUnitType_STRING_instance = new DataUnitType('STRING', 3);
  }
  function DataUnitType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function DataUnitType_BOOLEAN_getInstance() {
    DataUnitType_initEntries();
    return DataUnitType_BOOLEAN_instance;
  }
  function DataUnitType_DATE_getInstance() {
    DataUnitType_initEntries();
    return DataUnitType_DATE_instance;
  }
  function DataUnitType_NUMBER_getInstance() {
    DataUnitType_initEntries();
    return DataUnitType_NUMBER_instance;
  }
  function DataUnitType_STRING_getInstance() {
    DataUnitType_initEntries();
    return DataUnitType_STRING_instance;
  }
  function InformationConceptInitCommand() {
  }
  function InformationConceptCommand() {
  }
  function InformationConceptEvent() {
  }
  function InformationConceptCreateCommandDTO() {
  }
  function InformationConceptCreatedEventDTO() {
  }
  function EvidenceTypeInitCommand() {
  }
  function EvidenceTypeCommand() {
  }
  function EvidenceTypeEvent() {
  }
  function EvidenceTypeListInitCommand() {
  }
  function EvidenceTypeListCommand() {
  }
  function EvidenceTypeListEvent() {
  }
  function EvidenceTypeListCreateCommandDTO() {
  }
  function EvidenceTypeListCreatedEventDTO() {
  }
  function EvidenceTypeListUpdateCommandDTO() {
  }
  function EvidenceTypeListUpdatedEventDTO() {
  }
  function EvidenceTypeCreateCommandDTO() {
  }
  function EvidenceTypeCreatedEventDTO() {
  }
  function RequirementInitCommand() {
  }
  function RequirementCommand() {
  }
  function RequirementEvent() {
  }
  function RequirementAddRequirementsCommandDTO() {
  }
  function RequirementAddedRequirementsEventDTO() {
  }
  function RequirementCreatedEventDTO() {
  }
  function RequirementUpdateCommandDTO() {
  }
  function RequirementUpdatedEventDTO() {
  }
  function FileAskQuestionQueryDTO() {
  }
  function FileAskQuestionResultDTO() {
  }
  function ChatMessageDTO() {
  }
  function ChatMetadataDTO() {
  }
  function FilePathDTO() {
  }
  function CertificationInitCommand() {
  }
  function CertificationCommand() {
  }
  function CertificationEvent() {
  }
  function CertificationAddedEvidenceEventDTO() {
  }
  function CertificationAddRequirementsCommandDTO() {
  }
  function CertificationAddedRequirementsEventDTO() {
  }
  function CertificationAddValuesCommandDTO() {
  }
  function CertificationAddedValuesEventDTO() {
  }
  function CertificationCreateCommandDTO() {
  }
  function CertificationCreatedEventDTO() {
  }
  function CertificationRemoveEvidenceCommandDTO() {
  }
  function CertificationRemovedEvidenceEventDTO() {
  }
  function CertificationRemoveRequirementsCommandDTO() {
  }
  function CertificationRemovedRequirementsEventDTO() {
  }
  function CertificationDTO() {
  }
  function EvidenceDTO_0() {
  }
  function GetEvidenceTypeListsQueryDTO() {
  }
  function GetEvidenceTypeListsQueryResultDTO() {
  }
  function EvidenceTypeDTO() {
  }
  function EvidenceTypeListChoicesDTO() {
  }
  function EvidenceTypeListDTO() {
  }
  function DataUnitCreateCommandDTO() {
  }
  function DataUnitCreatedEventDTO_0() {
  }
  function DataUnitDTO_0() {
  }
  function DataUnitTypeValues() {
    DataUnitTypeValues_instance = this;
  }
  DataUnitTypeValues.prototype.boolean = function () {
    return DataUnitType_BOOLEAN_getInstance().j3_1;
  };
  DataUnitTypeValues.prototype.date = function () {
    return DataUnitType_DATE_getInstance().j3_1;
  };
  DataUnitTypeValues.prototype.number = function () {
    return DataUnitType_NUMBER_getInstance().j3_1;
  };
  DataUnitTypeValues.prototype.string = function () {
    return DataUnitType_STRING_getInstance().j3_1;
  };
  var DataUnitTypeValues_instance;
  function DataUnitTypeValues_getInstance() {
    if (DataUnitTypeValues_instance == null)
      new DataUnitTypeValues();
    return DataUnitTypeValues_instance;
  }
  function DataUnitGetByIdentifierQueryDTO() {
  }
  function DataUnitGetByIdentifierResultDTO() {
  }
  function DataUnitGetQueryDTO() {
  }
  function DataUnitGetResultDTO() {
  }
  function InformationConceptCreateCommandDTO_0() {
  }
  function InformationConceptCreatedEventDTO_0() {
  }
  function InformationConceptDTO() {
  }
  function RequestInformationConceptDTO() {
  }
  function GetInformationConceptsQueryDTO() {
  }
  function GetInformationConceptsQueryResultDTO() {
  }
  function InformationConceptGetByIdentifierQueryDTO() {
  }
  function InformationConceptGetByIdentifierResultDTO() {
  }
  function InformationConceptGetQueryDTO() {
  }
  function InformationConceptGetResultDTO() {
  }
  function CertificationAddEvidenceCommandDTO() {
  }
  function CertificationAddedEvidenceEventDTO_0() {
  }
  function CertificationAddRequirementsCommandDTO_0() {
  }
  function CertificationAddedRequirementsEventDTO_0() {
  }
  function CertificationAddValuesCommandDTO_0() {
  }
  function CertificationAddedValuesEventDTO_0() {
  }
  function RequestCreateCommandDTO() {
  }
  function RequestCreatedEventDTO() {
  }
  function RequestRemoveEvidenceCommandDTO() {
  }
  function RequestRemovedEvidenceEventDTO() {
  }
  function RequestRemoveRequirementsCommandDTO() {
  }
  function RequestRemovedRequirementsEventDTO() {
  }
  function CertificationDTO_0() {
  }
  function EvidenceDTO_1() {
  }
  function CertificationDownloadEvidenceQueryDTO() {
  }
  function CertificationGetByIdentifierQueryDTO() {
  }
  function CertificationGetByIdentifierResultDTO() {
  }
  function CertificationGetQueryDTO() {
  }
  function CertificationGetResultDTO() {
  }
  function EvidenceTypeListCreateCommandDTO_0() {
  }
  function EvidenceTypeListCreatedEventDTO_0() {
  }
  function EvidenceTypeListUpdateCommandDTO_0() {
  }
  function EvidenceTypeListUpdatedEventDTO_0() {
  }
  function EvidenceTypeCreateCommandDTO_0() {
  }
  function EvidenceTypeCreatedEventDTO_0() {
  }
  function EvidenceTypeDTO_0() {
  }
  function EvidenceTypeListDTO_0() {
  }
  function EvidenceTypeGetByIdentifierQueryDTO() {
  }
  function EvidenceTypeGetByIdentifierResultDTO() {
  }
  function EvidenceTypeGetQueryDTO() {
  }
  function EvidenceTypeGetResultDTO() {
  }
  function EvidenceTypeListGetByIdentifierQueryDTO() {
  }
  function EvidenceTypeListGetByIdentifierResultDTO() {
  }
  function EvidenceTypeListGetQueryDTO() {
  }
  function EvidenceTypeListGetResultDTO() {
  }
  function FrameworkInitCommand() {
  }
  function FrameworkCommand() {
  }
  function FrameworkEvent() {
  }
  function FrameworkCreateCommandDTO() {
  }
  function FrameworkCreatedEventDTO() {
  }
  function FrameworkDTO() {
  }
  function FrameworkCreateCommandDTO_0() {
  }
  function FrameworkCreatedEventDTO_0() {
  }
  function FrameworkDTO_0() {
  }
  function FrameworkGetByIdentifierQueryDTO() {
  }
  function FrameworkGetByIdentifierResultDTO() {
  }
  function FrameworkGetQueryDTO() {
  }
  function FrameworkGetResultDTO() {
  }
  function ConstraintCreateCommandDTO() {
  }
  function ConstraintCreatedEventDTO() {
  }
  function CriterionCreateCommandDTO() {
  }
  function CriterionCreatedEventDTO() {
  }
  function InformationRequirementCreateCommandDTO() {
  }
  function InformationRequirementCreatedEventDTO() {
  }
  function RequirementAddRequirementsCommandDTO_0() {
  }
  function RequirementAddedRequirementsEventDTO_0() {
  }
  function RequirementCreateCommandDTO() {
  }
  function RequirementCreatedEventDTO_0() {
  }
  function RequirementUpdateCommandDTO_0() {
  }
  function RequirementUpdatedEventDTO_0() {
  }
  function RequirementDTO() {
  }
  function RequirementGetByIdentifierQueryDTO() {
  }
  function RequirementGetByIdentifierResultDTO() {
  }
  function RequirementGetQueryDTO() {
  }
  function RequirementGetResultDTO() {
  }
  function RequirementListChildrenByTypeQueryDTO() {
  }
  function RequirementListChildrenByTypeResultDTO() {
  }
  function RequirementListQueryDTO() {
  }
  function RequirementListResultDTO() {
  }
  function AssetPoolInitCommand() {
  }
  function AssetPoolCommand() {
  }
  function AssetPoolEvent() {
  }
  function AssetTransactionInitCommand() {
  }
  function AssetTransactionCommand() {
  }
  function AssetTransactionEvent() {
  }
  function AssetTransactionState$Companion$$cachedSerializer$delegate$_anonymous__xcacoj() {
    return createSimpleEnumSerializer('city.smartb.registry.program.s2.asset.domain.automate.AssetTransactionState', values_1());
  }
  var AssetTransactionState_EMITTED_instance;
  var AssetTransactionState_CANCELLED_instance;
  function Companion_33() {
    Companion_instance_33 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.y1j_1 = lazy_0(tmp_0, AssetTransactionState$Companion$$cachedSerializer$delegate$_anonymous__xcacoj);
  }
  var Companion_instance_33;
  function Companion_getInstance_33() {
    AssetTransactionState_initEntries();
    if (Companion_instance_33 == null)
      new Companion_33();
    return Companion_instance_33;
  }
  function values_1() {
    return [AssetTransactionState_EMITTED_getInstance(), AssetTransactionState_CANCELLED_getInstance()];
  }
  function valueOf_1(value) {
    switch (value) {
      case 'EMITTED':
        return AssetTransactionState_EMITTED_getInstance();
      case 'CANCELLED':
        return AssetTransactionState_CANCELLED_getInstance();
      default:
        AssetTransactionState_initEntries();
        THROW_ISE();
        break;
    }
  }
  var AssetTransactionState_entriesInitialized;
  function AssetTransactionState_initEntries() {
    if (AssetTransactionState_entriesInitialized)
      return Unit_getInstance();
    AssetTransactionState_entriesInitialized = true;
    AssetTransactionState_EMITTED_instance = new AssetTransactionState('EMITTED', 0, 0);
    AssetTransactionState_CANCELLED_instance = new AssetTransactionState('CANCELLED', 1, 1);
    Companion_getInstance_33();
  }
  function AssetTransactionState(name, ordinal, position) {
    Enum.call(this, name, ordinal);
    this.b1k_1 = position;
  }
  AssetTransactionState.prototype.s14 = function () {
    return this.b1k_1;
  };
  Object.defineProperty(AssetTransactionState.prototype, 'position', {
    configurable: true,
    get: function () {
      return this.s14();
    }
  });
  function AssetTransactionState_EMITTED_getInstance() {
    AssetTransactionState_initEntries();
    return AssetTransactionState_EMITTED_instance;
  }
  function AssetTransactionState_CANCELLED_getInstance() {
    AssetTransactionState_initEntries();
    return AssetTransactionState_CANCELLED_instance;
  }
  function AssetPoolCloseCommandDTO() {
  }
  function AssetPoolHoldCommandDTO() {
  }
  function AssetPoolResumeCommandDTO() {
  }
  function AssetPoolStats() {
  }
  function get_s2Order() {
    init_properties_S2Order_kt_w18in9();
    return s2Order;
  }
  var s2Order;
  function OrderInitCommand() {
  }
  function OrderCommand() {
  }
  function OrderEvent() {
  }
  function OrderState$Companion$$cachedSerializer$delegate$_anonymous__crkyr7() {
    return createSimpleEnumSerializer('city.smartb.registry.program.s2.order.domain.OrderState', values_2());
  }
  var OrderState_DRAFT_instance;
  var OrderState_SUBMITTED_instance;
  var OrderState_PENDING_instance;
  var OrderState_COMPLETED_instance;
  var OrderState_CANCELLED_instance;
  var OrderState_DELETED_instance;
  function Companion_34() {
    Companion_instance_34 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.f1k_1 = lazy_0(tmp_0, OrderState$Companion$$cachedSerializer$delegate$_anonymous__crkyr7);
  }
  var Companion_instance_34;
  function Companion_getInstance_34() {
    OrderState_initEntries();
    if (Companion_instance_34 == null)
      new Companion_34();
    return Companion_instance_34;
  }
  function values_2() {
    return [OrderState_DRAFT_getInstance(), OrderState_SUBMITTED_getInstance(), OrderState_PENDING_getInstance(), OrderState_COMPLETED_getInstance(), OrderState_CANCELLED_getInstance(), OrderState_DELETED_getInstance()];
  }
  var OrderState_entriesInitialized;
  function OrderState_initEntries() {
    if (OrderState_entriesInitialized)
      return Unit_getInstance();
    OrderState_entriesInitialized = true;
    OrderState_DRAFT_instance = new OrderState('DRAFT', 0, 0);
    OrderState_SUBMITTED_instance = new OrderState('SUBMITTED', 1, 1);
    OrderState_PENDING_instance = new OrderState('PENDING', 2, 2);
    OrderState_COMPLETED_instance = new OrderState('COMPLETED', 3, 3);
    OrderState_CANCELLED_instance = new OrderState('CANCELLED', 4, 4);
    OrderState_DELETED_instance = new OrderState('DELETED', 5, 5);
    Companion_getInstance_34();
  }
  function OrderState(name, ordinal, position) {
    Enum.call(this, name, ordinal);
    this.i1k_1 = position;
  }
  OrderState.prototype.s14 = function () {
    return this.i1k_1;
  };
  Object.defineProperty(OrderState.prototype, 'position', {
    configurable: true,
    get: function () {
      return this.s14();
    }
  });
  function s2Order$lambda($this$s2Sourcing) {
    init_properties_S2Order_kt_w18in9();
    $this$s2Sourcing.z15_1 = 'OrderS2';
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.init' call
    var builder = new S2InitTransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    builder.c16_1 = OrderState_DRAFT_getInstance();
    builder.d16_1 = Role_STAKEHOLDER_USER_getInstance();
    var tmp$ret$0;
    // Inline function 'kotlin.let' call
    var tmp1_to = toValue_0(builder.q12());
    var tmp2_role = toValue_1(builder.yy());
    var tmp3_action = toValue(getKClass(OrderPlaceCommand));
    var tmp0_elvis_lhs = builder.e16_1;
    var tmp4_result = toValue(tmp0_elvis_lhs == null ? getKClass(OrderPlacedEvent) : tmp0_elvis_lhs);
    var tmp0_let = new S2Transition(null, tmp1_to, tmp2_role, tmp3_action, tmp4_result);
    var tmp1_let = $this$s2Sourcing.b16_1;
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$0 = tmp1_let.e(tmp0_let);
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.transaction' call
    var builder_0 = new S2TransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    builder_0.f16_1 = OrderState_DRAFT_getInstance();
    builder_0.h16_1 = OrderState_SUBMITTED_getInstance();
    builder_0.i16_1 = Role_STAKEHOLDER_USER_getInstance();
    var tmp$ret$1;
    // Inline function 'kotlin.let' call
    var tmp0_safe_receiver = builder_0.f16_1;
    var tmp = tmp0_safe_receiver == null ? null : toValue_0(tmp0_safe_receiver);
    var tmp_0 = toValue_0(builder_0.q12());
    var tmp_1 = toValue_1(builder_0.yy());
    var tmp_2 = toValue(getKClass(OrderSubmitCommand));
    var tmp1_elvis_lhs = builder_0.j16_1;
    var tmp0_let_0 = new S2Transition(tmp, tmp_0, tmp_1, tmp_2, toValue(tmp1_elvis_lhs == null ? getKClass(OrderSubmittedEvent) : tmp1_elvis_lhs));
    var tmp1_let_0 = $this$s2Sourcing.b16_1;
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$1 = tmp1_let_0.e(tmp0_let_0);
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.transaction' call
    var builder_1 = new S2TransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    builder_1.f16_1 = OrderState_SUBMITTED_getInstance();
    builder_1.h16_1 = OrderState_PENDING_getInstance();
    builder_1.i16_1 = Role_ORCHESTRATOR_USER_getInstance();
    var tmp$ret$2;
    // Inline function 'kotlin.let' call
    var tmp0_safe_receiver_0 = builder_1.f16_1;
    var tmp_3 = tmp0_safe_receiver_0 == null ? null : toValue_0(tmp0_safe_receiver_0);
    var tmp_4 = toValue_0(builder_1.q12());
    var tmp_5 = toValue_1(builder_1.yy());
    var tmp_6 = toValue(getKClass(OrderPendCommand));
    var tmp1_elvis_lhs_0 = builder_1.j16_1;
    var tmp0_let_1 = new S2Transition(tmp_3, tmp_4, tmp_5, tmp_6, toValue(tmp1_elvis_lhs_0 == null ? getKClass(OrderPendedEvent) : tmp1_elvis_lhs_0));
    var tmp1_let_1 = $this$s2Sourcing.b16_1;
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$2 = tmp1_let_1.e(tmp0_let_1);
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.selfTransaction' call
    var builder_2 = new S2SelfTransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    var tmp0_this = builder_2;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp0_plusAssign = tmp0_this.k16_1;
    var tmp1_plusAssign = OrderState_DRAFT_getInstance();
    tmp0_plusAssign.e(tmp1_plusAssign);
    var tmp1_this = builder_2;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp2_plusAssign = tmp1_this.k16_1;
    var tmp3_plusAssign = OrderState_SUBMITTED_getInstance();
    tmp2_plusAssign.e(tmp3_plusAssign);
    var tmp2_this = builder_2;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp4_plusAssign = tmp2_this.k16_1;
    var tmp5_plusAssign = OrderState_PENDING_getInstance();
    tmp4_plusAssign.e(tmp5_plusAssign);
    builder_2.l16_1 = Role_STAKEHOLDER_USER_getInstance();
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = builder_2.k16_1;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.h();
    while (tmp0_iterator.i()) {
      var item = tmp0_iterator.j();
      var tmp$ret$3;
      // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.selfTransaction.<anonymous>' call
      var tmp_7 = toValue_0(item);
      var tmp_8 = toValue_0(item);
      var tmp_9 = toValue_1(builder_2.yy());
      var tmp_10 = toValue(getKClass(OrderUpdateCommand));
      var tmp0_elvis_lhs_0 = builder_2.m16_1;
      tmp$ret$3 = new S2Transition(tmp_7, tmp_8, tmp_9, tmp_10, toValue(tmp0_elvis_lhs_0 == null ? getKClass(OrderUpdatedEvent) : tmp0_elvis_lhs_0));
      tmp0_mapTo.e(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var tmp1_forEach = tmp$ret$5;
    var tmp0_iterator_0 = tmp1_forEach.h();
    while (tmp0_iterator_0.i()) {
      var element = tmp0_iterator_0.j();
      invoke$add($this$s2Sourcing.b16_1, element);
    }
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.transaction' call
    var builder_3 = new S2TransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    builder_3.f16_1 = OrderState_PENDING_getInstance();
    builder_3.h16_1 = OrderState_COMPLETED_getInstance();
    builder_3.i16_1 = Role_STAKEHOLDER_USER_getInstance();
    var tmp$ret$6;
    // Inline function 'kotlin.let' call
    var tmp0_safe_receiver_1 = builder_3.f16_1;
    var tmp_11 = tmp0_safe_receiver_1 == null ? null : toValue_0(tmp0_safe_receiver_1);
    var tmp_12 = toValue_0(builder_3.q12());
    var tmp_13 = toValue_1(builder_3.yy());
    var tmp_14 = toValue(getKClass(OrderCompleteCommand));
    var tmp1_elvis_lhs_1 = builder_3.j16_1;
    var tmp0_let_2 = new S2Transition(tmp_11, tmp_12, tmp_13, tmp_14, toValue(tmp1_elvis_lhs_1 == null ? getKClass(OrderCompletedEvent) : tmp1_elvis_lhs_1));
    var tmp1_let_2 = $this$s2Sourcing.b16_1;
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$6 = tmp1_let_2.e(tmp0_let_2);
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.transaction' call
    var builder_4 = new S2TransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    var tmp0_this_0 = builder_4;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp0_plusAssign_0 = tmp0_this_0.g16_1;
    var tmp1_plusAssign_0 = OrderState_SUBMITTED_getInstance();
    tmp0_plusAssign_0.e(tmp1_plusAssign_0);
    var tmp1_this_0 = builder_4;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp2_plusAssign_0 = tmp1_this_0.g16_1;
    var tmp3_plusAssign_0 = OrderState_PENDING_getInstance();
    tmp2_plusAssign_0.e(tmp3_plusAssign_0);
    builder_4.h16_1 = OrderState_CANCELLED_getInstance();
    builder_4.i16_1 = Role_STAKEHOLDER_USER_getInstance();
    var tmp$ret$7;
    // Inline function 'kotlin.let' call
    var tmp0_safe_receiver_2 = builder_4.f16_1;
    var tmp_15 = tmp0_safe_receiver_2 == null ? null : toValue_0(tmp0_safe_receiver_2);
    var tmp_16 = toValue_0(builder_4.q12());
    var tmp_17 = toValue_1(builder_4.yy());
    var tmp_18 = toValue(getKClass(OrderCancelCommand));
    var tmp1_elvis_lhs_2 = builder_4.j16_1;
    var tmp0_let_3 = new S2Transition(tmp_15, tmp_16, tmp_17, tmp_18, toValue(tmp1_elvis_lhs_2 == null ? getKClass(OrderCanceledEvent) : tmp1_elvis_lhs_2));
    var tmp1_let_3 = $this$s2Sourcing.b16_1;
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$7 = tmp1_let_3.e(tmp0_let_3);
    // Inline function 's2.dsl.automate.builder.S2SourcingAutomateBuilder.transaction' call
    var builder_5 = new S2TransitionBuilder();
    // Inline function 'city.smartb.registry.program.s2.order.domain.s2Order.<anonymous>.<anonymous>' call
    builder_5.f16_1 = OrderState_DRAFT_getInstance();
    builder_5.f16_1 = OrderState_CANCELLED_getInstance();
    builder_5.h16_1 = OrderState_DELETED_getInstance();
    builder_5.i16_1 = Role_STAKEHOLDER_USER_getInstance();
    var tmp$ret$8;
    // Inline function 'kotlin.let' call
    var tmp0_safe_receiver_3 = builder_5.f16_1;
    var tmp_19 = tmp0_safe_receiver_3 == null ? null : toValue_0(tmp0_safe_receiver_3);
    var tmp_20 = toValue_0(builder_5.q12());
    var tmp_21 = toValue_1(builder_5.yy());
    var tmp_22 = toValue(getKClass(OrderDeleteCommand));
    var tmp1_elvis_lhs_3 = builder_5.j16_1;
    var tmp0_let_4 = new S2Transition(tmp_19, tmp_20, tmp_21, tmp_22, toValue(tmp1_elvis_lhs_3 == null ? getKClass(OrderDeletedEvent) : tmp1_elvis_lhs_3));
    var tmp1_let_4 = $this$s2Sourcing.b16_1;
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$8 = tmp1_let_4.e(tmp0_let_4);
    return Unit_getInstance();
  }
  function invoke$add(receiver, p0) {
    receiver.e(p0);
  }
  function OrderState_DRAFT_getInstance() {
    OrderState_initEntries();
    return OrderState_DRAFT_instance;
  }
  function OrderState_SUBMITTED_getInstance() {
    OrderState_initEntries();
    return OrderState_SUBMITTED_instance;
  }
  function OrderState_PENDING_getInstance() {
    OrderState_initEntries();
    return OrderState_PENDING_instance;
  }
  function OrderState_COMPLETED_getInstance() {
    OrderState_initEntries();
    return OrderState_COMPLETED_instance;
  }
  function OrderState_CANCELLED_getInstance() {
    OrderState_initEntries();
    return OrderState_CANCELLED_instance;
  }
  function OrderState_DELETED_getInstance() {
    OrderState_initEntries();
    return OrderState_DELETED_instance;
  }
  var properties_initialized_S2Order_kt_fx1s8v;
  function init_properties_S2Order_kt_w18in9() {
    if (properties_initialized_S2Order_kt_fx1s8v) {
    } else {
      properties_initialized_S2Order_kt_fx1s8v = true;
      s2Order = s2Sourcing(s2Order$lambda);
    }
  }
  function OrderCancelCommandDTO() {
  }
  function OrderCancelCommand(id) {
    this.j1k_1 = id;
  }
  OrderCancelCommand.prototype.ur = function () {
    return this.j1k_1;
  };
  OrderCancelCommand.prototype.toString = function () {
    return 'OrderCancelCommand(id=' + this.j1k_1 + ')';
  };
  OrderCancelCommand.prototype.hashCode = function () {
    return getStringHashCode(this.j1k_1);
  };
  OrderCancelCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderCancelCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderCancelCommand ? other : THROW_CCE();
    if (!(this.j1k_1 === tmp0_other_with_cast.j1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderCancelCommand.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function Companion_35() {
    Companion_instance_35 = this;
  }
  var Companion_instance_35;
  function Companion_getInstance_35() {
    if (Companion_instance_35 == null)
      new Companion_35();
    return Companion_instance_35;
  }
  function OrderCanceledEvent(id, date) {
    Companion_getInstance_35();
    this.k1k_1 = id;
    this.l1k_1 = date;
  }
  OrderCanceledEvent.prototype.ur = function () {
    return this.k1k_1;
  };
  OrderCanceledEvent.prototype.m14 = function () {
    return this.l1k_1;
  };
  OrderCanceledEvent.prototype.toString = function () {
    return 'OrderCanceledEvent(id=' + this.k1k_1 + ', date=' + toString_3(this.l1k_1) + ')';
  };
  OrderCanceledEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.k1k_1);
    result = imul(result, 31) + this.l1k_1.hashCode() | 0;
    return result;
  };
  OrderCanceledEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderCanceledEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderCanceledEvent ? other : THROW_CCE();
    if (!(this.k1k_1 === tmp0_other_with_cast.k1k_1))
      return false;
    if (!this.l1k_1.equals(tmp0_other_with_cast.l1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderCanceledEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function OrderCompleteCommand(id, assetTransactionId, certificate) {
    this.m1k_1 = id;
    this.n1k_1 = assetTransactionId;
    this.o1k_1 = certificate;
  }
  OrderCompleteCommand.prototype.ur = function () {
    return this.m1k_1;
  };
  OrderCompleteCommand.prototype.toString = function () {
    return 'OrderCompleteCommand(id=' + this.m1k_1 + ', assetTransactionId=' + this.n1k_1 + ', certificate=' + this.o1k_1 + ')';
  };
  OrderCompleteCommand.prototype.hashCode = function () {
    var result = getStringHashCode(this.m1k_1);
    result = imul(result, 31) + getStringHashCode(this.n1k_1) | 0;
    result = imul(result, 31) + (this.o1k_1 == null ? 0 : this.o1k_1.hashCode()) | 0;
    return result;
  };
  OrderCompleteCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderCompleteCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderCompleteCommand ? other : THROW_CCE();
    if (!(this.m1k_1 === tmp0_other_with_cast.m1k_1))
      return false;
    if (!(this.n1k_1 === tmp0_other_with_cast.n1k_1))
      return false;
    if (!equals_0(this.o1k_1, tmp0_other_with_cast.o1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderCompleteCommand.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function Companion_36() {
    Companion_instance_36 = this;
  }
  var Companion_instance_36;
  function Companion_getInstance_36() {
    if (Companion_instance_36 == null)
      new Companion_36();
    return Companion_instance_36;
  }
  function OrderCompletedEvent(id, assetTransactionId, date, certificate) {
    Companion_getInstance_36();
    this.p1k_1 = id;
    this.q1k_1 = assetTransactionId;
    this.r1k_1 = date;
    this.s1k_1 = certificate;
  }
  OrderCompletedEvent.prototype.ur = function () {
    return this.p1k_1;
  };
  OrderCompletedEvent.prototype.m14 = function () {
    return this.r1k_1;
  };
  OrderCompletedEvent.prototype.toString = function () {
    return 'OrderCompletedEvent(id=' + this.p1k_1 + ', assetTransactionId=' + this.q1k_1 + ', date=' + toString_3(this.r1k_1) + ', certificate=' + this.s1k_1 + ')';
  };
  OrderCompletedEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.p1k_1);
    result = imul(result, 31) + getStringHashCode(this.q1k_1) | 0;
    result = imul(result, 31) + this.r1k_1.hashCode() | 0;
    result = imul(result, 31) + (this.s1k_1 == null ? 0 : this.s1k_1.hashCode()) | 0;
    return result;
  };
  OrderCompletedEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderCompletedEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderCompletedEvent ? other : THROW_CCE();
    if (!(this.p1k_1 === tmp0_other_with_cast.p1k_1))
      return false;
    if (!(this.q1k_1 === tmp0_other_with_cast.q1k_1))
      return false;
    if (!this.r1k_1.equals(tmp0_other_with_cast.r1k_1))
      return false;
    if (!equals_0(this.s1k_1, tmp0_other_with_cast.s1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderCompletedEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function OrderDeleteCommandDTO() {
  }
  function OrderDeleteCommand(id) {
    this.t1k_1 = id;
  }
  OrderDeleteCommand.prototype.ur = function () {
    return this.t1k_1;
  };
  OrderDeleteCommand.prototype.toString = function () {
    return 'OrderDeleteCommand(id=' + this.t1k_1 + ')';
  };
  OrderDeleteCommand.prototype.hashCode = function () {
    return getStringHashCode(this.t1k_1);
  };
  OrderDeleteCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderDeleteCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderDeleteCommand ? other : THROW_CCE();
    if (!(this.t1k_1 === tmp0_other_with_cast.t1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderDeleteCommand.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function Companion_37() {
    Companion_instance_37 = this;
  }
  var Companion_instance_37;
  function Companion_getInstance_37() {
    if (Companion_instance_37 == null)
      new Companion_37();
    return Companion_instance_37;
  }
  function OrderDeletedEvent(id, date) {
    Companion_getInstance_37();
    this.u1k_1 = id;
    this.v1k_1 = date;
  }
  OrderDeletedEvent.prototype.ur = function () {
    return this.u1k_1;
  };
  OrderDeletedEvent.prototype.m14 = function () {
    return this.v1k_1;
  };
  OrderDeletedEvent.prototype.toString = function () {
    return 'OrderDeletedEvent(id=' + this.u1k_1 + ', date=' + toString_3(this.v1k_1) + ')';
  };
  OrderDeletedEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.u1k_1);
    result = imul(result, 31) + this.v1k_1.hashCode() | 0;
    return result;
  };
  OrderDeletedEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderDeletedEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderDeletedEvent ? other : THROW_CCE();
    if (!(this.u1k_1 === tmp0_other_with_cast.u1k_1))
      return false;
    if (!this.v1k_1.equals(tmp0_other_with_cast.v1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderDeletedEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function OrderPendCommand(id, certificate) {
    this.w1k_1 = id;
    this.x1k_1 = certificate;
  }
  OrderPendCommand.prototype.ur = function () {
    return this.w1k_1;
  };
  OrderPendCommand.prototype.toString = function () {
    return 'OrderPendCommand(id=' + this.w1k_1 + ', certificate=' + this.x1k_1 + ')';
  };
  OrderPendCommand.prototype.hashCode = function () {
    var result = getStringHashCode(this.w1k_1);
    result = imul(result, 31) + (this.x1k_1 == null ? 0 : this.x1k_1.hashCode()) | 0;
    return result;
  };
  OrderPendCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderPendCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderPendCommand ? other : THROW_CCE();
    if (!(this.w1k_1 === tmp0_other_with_cast.w1k_1))
      return false;
    if (!equals_0(this.x1k_1, tmp0_other_with_cast.x1k_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderPendCommand.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function Companion_38() {
    Companion_instance_38 = this;
  }
  var Companion_instance_38;
  function Companion_getInstance_38() {
    if (Companion_instance_38 == null)
      new Companion_38();
    return Companion_instance_38;
  }
  function OrderPendedEvent(id, date, certificate) {
    Companion_getInstance_38();
    this.y1k_1 = id;
    this.z1k_1 = date;
    this.a1l_1 = certificate;
  }
  OrderPendedEvent.prototype.ur = function () {
    return this.y1k_1;
  };
  OrderPendedEvent.prototype.m14 = function () {
    return this.z1k_1;
  };
  OrderPendedEvent.prototype.toString = function () {
    return 'OrderPendedEvent(id=' + this.y1k_1 + ', date=' + toString_3(this.z1k_1) + ', certificate=' + this.a1l_1 + ')';
  };
  OrderPendedEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.y1k_1);
    result = imul(result, 31) + this.z1k_1.hashCode() | 0;
    result = imul(result, 31) + (this.a1l_1 == null ? 0 : this.a1l_1.hashCode()) | 0;
    return result;
  };
  OrderPendedEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderPendedEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderPendedEvent ? other : THROW_CCE();
    if (!(this.y1k_1 === tmp0_other_with_cast.y1k_1))
      return false;
    if (!this.z1k_1.equals(tmp0_other_with_cast.z1k_1))
      return false;
    if (!equals_0(this.a1l_1, tmp0_other_with_cast.a1l_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderPendedEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function OrderPlaceCommand(from, to, by, poolId, quantity, type) {
    this.b1l_1 = from;
    this.c1l_1 = to;
    this.d1l_1 = by;
    this.e1l_1 = poolId;
    this.f1l_1 = quantity;
    this.g1l_1 = type;
  }
  OrderPlaceCommand.prototype.toString = function () {
    return 'OrderPlaceCommand(from=' + this.b1l_1 + ', to=' + this.c1l_1 + ', by=' + this.d1l_1 + ', poolId=' + this.e1l_1 + ', quantity=' + this.f1l_1 + ', type=' + this.g1l_1 + ')';
  };
  OrderPlaceCommand.prototype.hashCode = function () {
    var result = this.b1l_1 == null ? 0 : getStringHashCode(this.b1l_1);
    result = imul(result, 31) + (this.c1l_1 == null ? 0 : getStringHashCode(this.c1l_1)) | 0;
    result = imul(result, 31) + getStringHashCode(this.d1l_1) | 0;
    result = imul(result, 31) + (this.e1l_1 == null ? 0 : getStringHashCode(this.e1l_1)) | 0;
    result = imul(result, 31) + this.f1l_1.hashCode() | 0;
    result = imul(result, 31) + this.g1l_1.hashCode() | 0;
    return result;
  };
  OrderPlaceCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderPlaceCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderPlaceCommand ? other : THROW_CCE();
    if (!(this.b1l_1 == tmp0_other_with_cast.b1l_1))
      return false;
    if (!(this.c1l_1 == tmp0_other_with_cast.c1l_1))
      return false;
    if (!(this.d1l_1 === tmp0_other_with_cast.d1l_1))
      return false;
    if (!(this.e1l_1 == tmp0_other_with_cast.e1l_1))
      return false;
    if (!this.f1l_1.equals(tmp0_other_with_cast.f1l_1))
      return false;
    if (!this.g1l_1.equals(tmp0_other_with_cast.g1l_1))
      return false;
    return true;
  };
  function Companion_39() {
    Companion_instance_39 = this;
  }
  var Companion_instance_39;
  function Companion_getInstance_39() {
    if (Companion_instance_39 == null)
      new Companion_39();
    return Companion_instance_39;
  }
  function OrderPlacedEvent(id, date, poolId, from, to, by, quantity, type) {
    Companion_getInstance_39();
    this.h1l_1 = id;
    this.i1l_1 = date;
    this.j1l_1 = poolId;
    this.k1l_1 = from;
    this.l1l_1 = to;
    this.m1l_1 = by;
    this.n1l_1 = quantity;
    this.o1l_1 = type;
  }
  OrderPlacedEvent.prototype.ur = function () {
    return this.h1l_1;
  };
  OrderPlacedEvent.prototype.m14 = function () {
    return this.i1l_1;
  };
  OrderPlacedEvent.prototype.toString = function () {
    return 'OrderPlacedEvent(id=' + this.h1l_1 + ', date=' + toString_3(this.i1l_1) + ', poolId=' + this.j1l_1 + ', from=' + this.k1l_1 + ', to=' + this.l1l_1 + ', by=' + this.m1l_1 + ', quantity=' + this.n1l_1 + ', type=' + this.o1l_1 + ')';
  };
  OrderPlacedEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.h1l_1);
    result = imul(result, 31) + this.i1l_1.hashCode() | 0;
    result = imul(result, 31) + (this.j1l_1 == null ? 0 : getStringHashCode(this.j1l_1)) | 0;
    result = imul(result, 31) + (this.k1l_1 == null ? 0 : getStringHashCode(this.k1l_1)) | 0;
    result = imul(result, 31) + (this.l1l_1 == null ? 0 : getStringHashCode(this.l1l_1)) | 0;
    result = imul(result, 31) + getStringHashCode(this.m1l_1) | 0;
    result = imul(result, 31) + this.n1l_1.hashCode() | 0;
    result = imul(result, 31) + this.o1l_1.hashCode() | 0;
    return result;
  };
  OrderPlacedEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderPlacedEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderPlacedEvent ? other : THROW_CCE();
    if (!(this.h1l_1 === tmp0_other_with_cast.h1l_1))
      return false;
    if (!this.i1l_1.equals(tmp0_other_with_cast.i1l_1))
      return false;
    if (!(this.j1l_1 == tmp0_other_with_cast.j1l_1))
      return false;
    if (!(this.k1l_1 == tmp0_other_with_cast.k1l_1))
      return false;
    if (!(this.l1l_1 == tmp0_other_with_cast.l1l_1))
      return false;
    if (!(this.m1l_1 === tmp0_other_with_cast.m1l_1))
      return false;
    if (!this.n1l_1.equals(tmp0_other_with_cast.n1l_1))
      return false;
    if (!this.o1l_1.equals(tmp0_other_with_cast.o1l_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderPlacedEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function OrderSubmitCommandDTO() {
  }
  function OrderSubmitCommand(id) {
    this.p1l_1 = id;
  }
  OrderSubmitCommand.prototype.ur = function () {
    return this.p1l_1;
  };
  OrderSubmitCommand.prototype.toString = function () {
    return 'OrderSubmitCommand(id=' + this.p1l_1 + ')';
  };
  OrderSubmitCommand.prototype.hashCode = function () {
    return getStringHashCode(this.p1l_1);
  };
  OrderSubmitCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderSubmitCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderSubmitCommand ? other : THROW_CCE();
    if (!(this.p1l_1 === tmp0_other_with_cast.p1l_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderSubmitCommand.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function Companion_40() {
    Companion_instance_40 = this;
  }
  var Companion_instance_40;
  function Companion_getInstance_40() {
    if (Companion_instance_40 == null)
      new Companion_40();
    return Companion_instance_40;
  }
  function OrderSubmittedEvent(id, date) {
    Companion_getInstance_40();
    this.q1l_1 = id;
    this.r1l_1 = date;
  }
  OrderSubmittedEvent.prototype.ur = function () {
    return this.q1l_1;
  };
  OrderSubmittedEvent.prototype.m14 = function () {
    return this.r1l_1;
  };
  OrderSubmittedEvent.prototype.toString = function () {
    return 'OrderSubmittedEvent(id=' + this.q1l_1 + ', date=' + toString_3(this.r1l_1) + ')';
  };
  OrderSubmittedEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.q1l_1);
    result = imul(result, 31) + this.r1l_1.hashCode() | 0;
    return result;
  };
  OrderSubmittedEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderSubmittedEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderSubmittedEvent ? other : THROW_CCE();
    if (!(this.q1l_1 === tmp0_other_with_cast.q1l_1))
      return false;
    if (!this.r1l_1.equals(tmp0_other_with_cast.r1l_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderSubmittedEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function OrderUpdateCommandDTO() {
  }
  function OrderUpdateCommand(id, poolId, quantity) {
    this.u1l_1 = id;
    this.v1l_1 = poolId;
    this.w1l_1 = quantity;
  }
  OrderUpdateCommand.prototype.ur = function () {
    return this.u1l_1;
  };
  OrderUpdateCommand.prototype.s1l = function () {
    return this.v1l_1;
  };
  OrderUpdateCommand.prototype.t1l = function () {
    return this.w1l_1;
  };
  OrderUpdateCommand.prototype.toString = function () {
    return 'OrderUpdateCommand(id=' + this.u1l_1 + ', poolId=' + this.v1l_1 + ', quantity=' + this.w1l_1 + ')';
  };
  OrderUpdateCommand.prototype.hashCode = function () {
    var result = getStringHashCode(this.u1l_1);
    result = imul(result, 31) + (this.v1l_1 == null ? 0 : getStringHashCode(this.v1l_1)) | 0;
    result = imul(result, 31) + this.w1l_1.hashCode() | 0;
    return result;
  };
  OrderUpdateCommand.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderUpdateCommand))
      return false;
    var tmp0_other_with_cast = other instanceof OrderUpdateCommand ? other : THROW_CCE();
    if (!(this.u1l_1 === tmp0_other_with_cast.u1l_1))
      return false;
    if (!(this.v1l_1 == tmp0_other_with_cast.v1l_1))
      return false;
    if (!this.w1l_1.equals(tmp0_other_with_cast.w1l_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderUpdateCommand.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  Object.defineProperty(OrderUpdateCommand.prototype, 'poolId', {
    configurable: true,
    get: function () {
      return this.s1l();
    }
  });
  Object.defineProperty(OrderUpdateCommand.prototype, 'quantity', {
    configurable: true,
    get: function () {
      return this.t1l();
    }
  });
  function Companion_41() {
    Companion_instance_41 = this;
  }
  var Companion_instance_41;
  function Companion_getInstance_41() {
    if (Companion_instance_41 == null)
      new Companion_41();
    return Companion_instance_41;
  }
  function OrderUpdatedEvent(id, date, poolId, quantity) {
    Companion_getInstance_41();
    this.x1l_1 = id;
    this.y1l_1 = date;
    this.z1l_1 = poolId;
    this.a1m_1 = quantity;
  }
  OrderUpdatedEvent.prototype.ur = function () {
    return this.x1l_1;
  };
  OrderUpdatedEvent.prototype.m14 = function () {
    return this.y1l_1;
  };
  OrderUpdatedEvent.prototype.toString = function () {
    return 'OrderUpdatedEvent(id=' + this.x1l_1 + ', date=' + toString_3(this.y1l_1) + ', poolId=' + this.z1l_1 + ', quantity=' + this.a1m_1 + ')';
  };
  OrderUpdatedEvent.prototype.hashCode = function () {
    var result = getStringHashCode(this.x1l_1);
    result = imul(result, 31) + this.y1l_1.hashCode() | 0;
    result = imul(result, 31) + (this.z1l_1 == null ? 0 : getStringHashCode(this.z1l_1)) | 0;
    result = imul(result, 31) + this.a1m_1.hashCode() | 0;
    return result;
  };
  OrderUpdatedEvent.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OrderUpdatedEvent))
      return false;
    var tmp0_other_with_cast = other instanceof OrderUpdatedEvent ? other : THROW_CCE();
    if (!(this.x1l_1 === tmp0_other_with_cast.x1l_1))
      return false;
    if (!this.y1l_1.equals(tmp0_other_with_cast.y1l_1))
      return false;
    if (!(this.z1l_1 == tmp0_other_with_cast.z1l_1))
      return false;
    if (!this.a1m_1.equals(tmp0_other_with_cast.a1m_1))
      return false;
    return true;
  };
  Object.defineProperty(OrderUpdatedEvent.prototype, 'id', {
    configurable: true,
    get: function () {
      return this.ur();
    }
  });
  function AssetOrderCancelCommandDTO() {
  }
  function AssetOrderCanceledEventDTO() {
  }
  function AssetOrderCompleteCommandDTO() {
  }
  function AssetOrderCompletedEventDTO() {
  }
  function AssetOrderDeleteCommandDTO() {
  }
  function AssetOrderDeletedEventDTO() {
  }
  function AssetOrderSubmitCommandDTO() {
  }
  function AssetOrderSubmittedEventDTO() {
  }
  function AssetOrderUpdateCommandDTO() {
  }
  function AssetOrderUpdatedEventDTO() {
  }
  function OrderDTO() {
  }
  function canWriteOrder($this, authedUser, order) {
    var tmp;
    Roles_getInstance();
    Roles_getInstance();
    if (hasOneOfRoles_0(authedUser, ['tr_orchestrator_admin', 'tr_orchestrator_user'])) {
      tmp = true;
    } else {
      tmp = order.by === authedUser.memberOf;
    }
    return tmp;
  }
  function AssetPolicies() {
    AssetPolicies_instance = this;
  }
  AssetPolicies.prototype.canSubmitOrder = function (authedUser, order) {
    var tmp$ret$2;
    // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canTransitionAnd' call
    var tmp;
    if (!(order == null)) {
      var tmp$ret$1;
      // Inline function 's2.dsl.automate.extention.canExecuteTransitionAnd' call
      var tmp0_canExecuteTransitionAnd = get_s2Order();
      var tmp_0;
      if (isAvailableTransition(tmp0_canExecuteTransitionAnd, order, ensureNotNull(getKClass(OrderSubmitCommand).c9()))) {
        var tmp$ret$0;
        // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canSubmitOrder.<anonymous>' call
        tmp$ret$0 = canWriteOrder(AssetPolicies_getInstance(), authedUser, order);
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = false;
      }
      tmp$ret$1 = tmp_0;
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    tmp$ret$2 = tmp;
    return tmp$ret$2;
  };
  AssetPolicies.prototype.canUpdateOrder = function (authedUser, order) {
    var tmp$ret$2;
    // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canTransitionAnd' call
    var tmp;
    if (!(order == null)) {
      var tmp$ret$1;
      // Inline function 's2.dsl.automate.extention.canExecuteTransitionAnd' call
      var tmp0_canExecuteTransitionAnd = get_s2Order();
      var tmp_0;
      if (isAvailableTransition(tmp0_canExecuteTransitionAnd, order, ensureNotNull(getKClass(OrderUpdateCommand).c9()))) {
        var tmp$ret$0;
        // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canUpdateOrder.<anonymous>' call
        tmp$ret$0 = canWriteOrder(AssetPolicies_getInstance(), authedUser, order);
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = false;
      }
      tmp$ret$1 = tmp_0;
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    tmp$ret$2 = tmp;
    return tmp$ret$2;
  };
  AssetPolicies.prototype.canCompleteOrder = function (authedUser, order) {
    var tmp$ret$2;
    // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canTransitionAnd' call
    var tmp;
    if (!(order == null)) {
      var tmp$ret$1;
      // Inline function 's2.dsl.automate.extention.canExecuteTransitionAnd' call
      var tmp0_canExecuteTransitionAnd = get_s2Order();
      var tmp_0;
      if (isAvailableTransition(tmp0_canExecuteTransitionAnd, order, ensureNotNull(getKClass(OrderCompleteCommand).c9()))) {
        var tmp$ret$0;
        // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canCompleteOrder.<anonymous>' call
        Roles_getInstance();
        Roles_getInstance();
        tmp$ret$0 = hasOneOfRoles_0(authedUser, ['tr_orchestrator_admin', 'tr_orchestrator_user']);
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = false;
      }
      tmp$ret$1 = tmp_0;
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    tmp$ret$2 = tmp;
    return tmp$ret$2;
  };
  AssetPolicies.prototype.canCancelOrder = function (authedUser, order) {
    var tmp$ret$2;
    // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canTransitionAnd' call
    var tmp;
    if (!(order == null)) {
      var tmp$ret$1;
      // Inline function 's2.dsl.automate.extention.canExecuteTransitionAnd' call
      var tmp0_canExecuteTransitionAnd = get_s2Order();
      var tmp_0;
      if (isAvailableTransition(tmp0_canExecuteTransitionAnd, order, ensureNotNull(getKClass(OrderCancelCommand).c9()))) {
        var tmp$ret$0;
        // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canCancelOrder.<anonymous>' call
        tmp$ret$0 = canWriteOrder(AssetPolicies_getInstance(), authedUser, order);
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = false;
      }
      tmp$ret$1 = tmp_0;
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    tmp$ret$2 = tmp;
    return tmp$ret$2;
  };
  AssetPolicies.prototype.canDeleteOrder = function (authedUser, order) {
    var tmp$ret$2;
    // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canTransitionAnd' call
    var tmp;
    if (!(order == null)) {
      var tmp$ret$1;
      // Inline function 's2.dsl.automate.extention.canExecuteTransitionAnd' call
      var tmp0_canExecuteTransitionAnd = get_s2Order();
      var tmp_0;
      if (isAvailableTransition(tmp0_canExecuteTransitionAnd, order, ensureNotNull(getKClass(OrderDeleteCommand).c9()))) {
        var tmp$ret$0;
        // Inline function 'city.smartb.registry.program.f2.asset.domain.utils.AssetPolicies.canDeleteOrder.<anonymous>' call
        Roles_getInstance();
        Roles_getInstance();
        tmp$ret$0 = hasOneOfRoles_0(authedUser, ['tr_orchestrator_admin', 'tr_orchestrator_user']);
        tmp_0 = tmp$ret$0;
      } else {
        tmp_0 = false;
      }
      tmp$ret$1 = tmp_0;
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    tmp$ret$2 = tmp;
    return tmp$ret$2;
  };
  var AssetPolicies_instance;
  function AssetPolicies_getInstance() {
    if (AssetPolicies_instance == null)
      new AssetPolicies();
    return AssetPolicies_instance;
  }
  function OrderStatusValues() {
    OrderStatusValues_instance = this;
  }
  OrderStatusValues.prototype.draft = function () {
    return OrderState_DRAFT_getInstance().j3_1;
  };
  OrderStatusValues.prototype.submitted = function () {
    return OrderState_SUBMITTED_getInstance().j3_1;
  };
  OrderStatusValues.prototype.pending = function () {
    return OrderState_PENDING_getInstance().j3_1;
  };
  OrderStatusValues.prototype.completed = function () {
    return OrderState_COMPLETED_getInstance().j3_1;
  };
  OrderStatusValues.prototype.cancelled = function () {
    return OrderState_CANCELLED_getInstance().j3_1;
  };
  OrderStatusValues.prototype.deleted = function () {
    return OrderState_DELETED_getInstance().j3_1;
  };
  var OrderStatusValues_instance;
  function OrderStatusValues_getInstance() {
    if (OrderStatusValues_instance == null)
      new OrderStatusValues();
    return OrderStatusValues_instance;
  }
  //region block: post-declaration
  CombinedContext.prototype.e3 = plus;
  AbstractCoroutineContextElement.prototype.x2 = get;
  AbstractCoroutineContextElement.prototype.d3 = fold;
  AbstractCoroutineContextElement.prototype.c3 = minusKey;
  AbstractCoroutineContextElement.prototype.e3 = plus;
  InternalHashCodeMap.prototype.b8 = createJsMap;
  JobSupport.prototype.wd = invokeOnCompletion$default;
  JobSupport.prototype.e3 = plus;
  JobSupport.prototype.x2 = get;
  JobSupport.prototype.d3 = fold;
  JobSupport.prototype.c3 = minusKey;
  AbstractCoroutine.prototype.wd = invokeOnCompletion$default;
  AbstractCoroutine.prototype.e3 = plus;
  AbstractCoroutine.prototype.x2 = get;
  AbstractCoroutine.prototype.d3 = fold;
  AbstractCoroutine.prototype.c3 = minusKey;
  DeferredCoroutine.prototype.wd = invokeOnCompletion$default;
  DeferredCoroutine.prototype.e3 = plus;
  DeferredCoroutine.prototype.x2 = get;
  DeferredCoroutine.prototype.d3 = fold;
  DeferredCoroutine.prototype.c3 = minusKey;
  LazyDeferredCoroutine.prototype.wd = invokeOnCompletion$default;
  LazyDeferredCoroutine.prototype.e3 = plus;
  LazyDeferredCoroutine.prototype.x2 = get;
  LazyDeferredCoroutine.prototype.d3 = fold;
  LazyDeferredCoroutine.prototype.c3 = minusKey;
  CoroutineDispatcher.prototype.x2 = get_0;
  CoroutineDispatcher.prototype.d3 = fold;
  CoroutineDispatcher.prototype.c3 = minusKey_0;
  CoroutineDispatcher.prototype.e3 = plus;
  EventLoop.prototype.e3 = plus;
  EventLoop.prototype.x2 = get_0;
  EventLoop.prototype.d3 = fold;
  EventLoop.prototype.c3 = minusKey_0;
  MainCoroutineDispatcher.prototype.e3 = plus;
  MainCoroutineDispatcher.prototype.x2 = get_0;
  MainCoroutineDispatcher.prototype.d3 = fold;
  MainCoroutineDispatcher.prototype.c3 = minusKey_0;
  Unconfined.prototype.e3 = plus;
  Unconfined.prototype.x2 = get_0;
  Unconfined.prototype.d3 = fold;
  Unconfined.prototype.c3 = minusKey_0;
  JsMainDispatcher.prototype.e3 = plus;
  JsMainDispatcher.prototype.x2 = get_0;
  JsMainDispatcher.prototype.d3 = fold;
  JsMainDispatcher.prototype.c3 = minusKey_0;
  UnconfinedEventLoop.prototype.e3 = plus;
  UnconfinedEventLoop.prototype.x2 = get_0;
  UnconfinedEventLoop.prototype.d3 = fold;
  UnconfinedEventLoop.prototype.c3 = minusKey_0;
  SetTimeoutBasedDispatcher.prototype.e3 = plus;
  SetTimeoutBasedDispatcher.prototype.x2 = get_0;
  SetTimeoutBasedDispatcher.prototype.d3 = fold;
  SetTimeoutBasedDispatcher.prototype.c3 = minusKey_0;
  NodeDispatcher.prototype.e3 = plus;
  NodeDispatcher.prototype.x2 = get_0;
  NodeDispatcher.prototype.d3 = fold;
  NodeDispatcher.prototype.c3 = minusKey_0;
  SetTimeoutDispatcher.prototype.e3 = plus;
  SetTimeoutDispatcher.prototype.x2 = get_0;
  SetTimeoutDispatcher.prototype.d3 = fold;
  SetTimeoutDispatcher.prototype.c3 = minusKey_0;
  WindowDispatcher.prototype.e3 = plus;
  WindowDispatcher.prototype.x2 = get_0;
  WindowDispatcher.prototype.d3 = fold;
  WindowDispatcher.prototype.c3 = minusKey_0;
  SerialDescriptorImpl.prototype.yl = get_isNullable;
  ListLikeDescriptor.prototype.yl = get_isNullable;
  ArrayListClassDesc.prototype.yl = get_isNullable;
  ArrayClassDesc.prototype.yl = get_isNullable;
  PluginGeneratedSerialDescriptor.prototype.yl = get_isNullable;
  EnumDescriptor.prototype.yl = get_isNullable;
  PrimitiveSerialDescriptor.prototype.yl = get_isNullable;
  PolymorphismValidator.prototype.yp = contextual;
  $serializer.prototype.kp = typeParametersSerializers;
  AndMatch.prototype.or = or;
  OrMatch.prototype.and = and;
  $serializer_1.prototype.kp = typeParametersSerializers;
  $serializer_3.prototype.kp = typeParametersSerializers;
  $serializer_4.prototype.kp = typeParametersSerializers;
  $serializer_5.prototype.kp = typeParametersSerializers;
  $serializer_6.prototype.kp = typeParametersSerializers;
  $serializer_7.prototype.kp = typeParametersSerializers;
  $serializer_8.prototype.kp = typeParametersSerializers;
  $serializer_9.prototype.kp = typeParametersSerializers;
  Companion_28.prototype.r16 = tryFromFloat$default;
  Companion_28.prototype.t16 = tryFromDouble$default;
  Companion_28.prototype.o16 = parseString$default;
  BigDecimal.prototype.e17 = plus_1;
  BigDecimal.prototype.g17 = minus_0;
  Companion_30.prototype.o16 = parseString$default;
  Companion_30.prototype.r16 = tryFromFloat$default;
  Companion_30.prototype.t16 = tryFromDouble$default;
  BigInteger.prototype.w16 = plus_0;
  BigInteger.prototype.y16 = minus;
  BigInteger.prototype.a17 = times;
  BigInteger.prototype.f17 = times_0;
  BigInteger.prototype.c17 = div;
  BigInteger.prototype.h17 = div_0;
  BigInteger.prototype.i17 = rem;
  $serializer_10.prototype.kp = typeParametersSerializers;
  $serializer_11.prototype.kp = typeParametersSerializers;
  OrderCanceledEvent.prototype.s2Id = s2Id;
  OrderCompletedEvent.prototype.s2Id = s2Id;
  OrderDeletedEvent.prototype.s2Id = s2Id;
  OrderPendedEvent.prototype.s2Id = s2Id;
  OrderPlacedEvent.prototype.s2Id = s2Id;
  OrderSubmittedEvent.prototype.s2Id = s2Id;
  OrderUpdatedEvent.prototype.s2Id = s2Id;
  //endregion
  //region block: init
  MODE_CANCELLABLE = 1;
  MODE_UNINITIALIZED = -1;
  MODE_ATOMIC = 0;
  counter = 0;
  DEBUG = false;
  PACKET_MAX_COPY_SIZE = 200;
  DISABLE_SFG = false;
  initializer = SerializerInitializer_getInstance();
  DISTANT_PAST_SECONDS = new Long(-931914497, -750);
  DISTANT_FUTURE_SECONDS = new Long(1151527680, 720);
  //endregion
  //region block: exports
  function $jsExportAll$(_) {
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$error = $f2$dsl$cqrs.error || ($f2$dsl$cqrs.error = {});
    $f2$dsl$cqrs$error.F2Error = F2Error;
    $f2$dsl$cqrs$error.F2Error.F2Error_init_$Create$ = F2Error_init_$Create$_0;
    Object.defineProperty($f2$dsl$cqrs$error.F2Error, 'Companion', {
      configurable: true,
      get: Companion_getInstance_12
    });
    Object.defineProperty($f2$dsl$cqrs$error.F2Error, '$serializer', {
      configurable: true,
      get: $serializer_getInstance
    });
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$exception = $f2$dsl$cqrs.exception || ($f2$dsl$cqrs.exception = {});
    $f2$dsl$cqrs$exception.F2Exception = F2Exception;
    Object.defineProperty($f2$dsl$cqrs$exception.F2Exception, 'Companion', {
      configurable: true,
      get: Companion_getInstance_13
    });
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$filter = $f2$dsl$cqrs.filter || ($f2$dsl$cqrs.filter = {});
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$filter = $f2$dsl$cqrs.filter || ($f2$dsl$cqrs.filter = {});
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$page = $f2$dsl$cqrs.page || ($f2$dsl$cqrs.page = {});
    $f2$dsl$cqrs$page.Page = Page;
    $f2$dsl$cqrs$page.Page.Page_init_$Create$ = Page_init_$Create$;
    Object.defineProperty($f2$dsl$cqrs$page.Page, 'Companion', {
      configurable: true,
      get: Companion_getInstance_14
    });
    $f2$dsl$cqrs$page.Page.$serializer = $serializer_0;
    $f2$dsl$cqrs$page.Page.$serializer.$serializer_init_$Create$ = $serializer_init_$Create$;
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$page = $f2$dsl$cqrs.page || ($f2$dsl$cqrs.page = {});
    $f2$dsl$cqrs$page.PageQuery = PageQuery;
    $f2$dsl$cqrs$page.PageQuery.PageQuery_init_$Create$ = PageQuery_init_$Create$;
    Object.defineProperty($f2$dsl$cqrs$page.PageQuery, 'Companion', {
      configurable: true,
      get: Companion_getInstance_15
    });
    Object.defineProperty($f2$dsl$cqrs$page.PageQuery, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_0
    });
    $f2$dsl$cqrs$page.PageQueryResult = PageQueryResult;
    $f2$dsl$cqrs$page.PageQueryResult.PageQueryResult_init_$Create$ = PageQueryResult_init_$Create$;
    Object.defineProperty($f2$dsl$cqrs$page.PageQueryResult, 'Companion', {
      configurable: true,
      get: Companion_getInstance_16
    });
    $f2$dsl$cqrs$page.PageQueryResult.$serializer = $serializer_2;
    $f2$dsl$cqrs$page.PageQueryResult.$serializer.$serializer_init_$Create$ = $serializer_init_$Create$_0;
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$cqrs = $f2$dsl.cqrs || ($f2$dsl.cqrs = {});
    var $f2$dsl$cqrs$page = $f2$dsl$cqrs.page || ($f2$dsl$cqrs.page = {});
    $f2$dsl$cqrs$page.OffsetPagination = OffsetPagination;
    $f2$dsl$cqrs$page.OffsetPagination.OffsetPagination_init_$Create$ = OffsetPagination_init_$Create$;
    Object.defineProperty($f2$dsl$cqrs$page.OffsetPagination, 'Companion', {
      configurable: true,
      get: Companion_getInstance_18
    });
    Object.defineProperty($f2$dsl$cqrs$page.OffsetPagination, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_1
    });
    $f2$dsl$cqrs$page.PagePagination = PagePagination;
    $f2$dsl$cqrs$page.PagePagination.PagePagination_init_$Create$ = PagePagination_init_$Create$;
    Object.defineProperty($f2$dsl$cqrs$page.PagePagination, 'Companion', {
      configurable: true,
      get: Companion_getInstance_19
    });
    Object.defineProperty($f2$dsl$cqrs$page.PagePagination, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_2
    });
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$commons = $city$smartb$im.commons || ($city$smartb$im.commons = {});
    var $city$smartb$im$commons$auth = $city$smartb$im$commons.auth || ($city$smartb$im$commons.auth = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$commons = $city$smartb$im.commons || ($city$smartb$im.commons = {});
    var $city$smartb$im$commons$model = $city$smartb$im$commons.model || ($city$smartb$im$commons.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$commons = $city$smartb$im.commons || ($city$smartb$im.commons = {});
    var $city$smartb$im$commons$http = $city$smartb$im$commons.http || ($city$smartb$im$commons.http = {});
    $city$smartb$im$commons$http.ClientJs = ClientJs;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$master = $i2$keycloak.master || ($i2$keycloak.master = {});
    var $i2$keycloak$master$domain = $i2$keycloak$master.domain || ($i2$keycloak$master.domain = {});
    $i2$keycloak$master$domain.AuthRealm = AuthRealm;
    $i2$keycloak$master$domain.AuthRealmPassword = AuthRealmPassword;
    $i2$keycloak$master$domain.AuthRealmClientSecret = AuthRealmClientSecret;
    var $f2 = _.f2 || (_.f2 = {});
    var $f2$dsl = $f2.dsl || ($f2.dsl = {});
    var $f2$dsl$fnc = $f2$dsl.fnc || ($f2$dsl.fnc = {});
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$commons = $i2$keycloak$f2.commons || ($i2$keycloak$f2.commons = {});
    var $i2$keycloak$f2$commons$domain = $i2$keycloak$f2$commons.domain || ($i2$keycloak$f2$commons.domain = {});
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    $i2$keycloak$f2$role$domain.Role = Role_0;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    $i2$keycloak$f2$role$domain.RoleCompositesModel = RoleCompositesModel;
    $i2$keycloak$f2$role$domain.RolesCompositeModel = RolesCompositeModel;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$query = $i2$keycloak$f2$role$domain$features.query || ($i2$keycloak$f2$role$domain$features.query = {});
    $i2$keycloak$f2$role$domain$features$query.RoleCompositeGetQuery = RoleCompositeGetQuery;
    $i2$keycloak$f2$role$domain$features$query.RoleCompositeGetResult = RoleCompositeGetResult;
    $i2$keycloak$f2$role$domain$features$query.RoleCompositeObjType = RoleCompositeObjType;
    $i2$keycloak$f2$role$domain$features$query.RoleCompositeObjType.values = values;
    $i2$keycloak$f2$role$domain$features$query.RoleCompositeObjType.valueOf = valueOf;
    Object.defineProperty($i2$keycloak$f2$role$domain$features$query.RoleCompositeObjType, 'USER', {
      configurable: true,
      get: RoleCompositeObjType_USER_getInstance
    });
    Object.defineProperty($i2$keycloak$f2$role$domain$features$query.RoleCompositeObjType, 'GROUP', {
      configurable: true,
      get: RoleCompositeObjType_GROUP_getInstance
    });
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$query = $i2$keycloak$f2$role$domain$features.query || ($i2$keycloak$f2$role$domain$features.query = {});
    $i2$keycloak$f2$role$domain$features$query.RoleGetByIdQuery = RoleGetByIdQuery;
    $i2$keycloak$f2$role$domain$features$query.RoleGetByIdResult = RoleGetByIdResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$query = $i2$keycloak$f2$role$domain$features.query || ($i2$keycloak$f2$role$domain$features.query = {});
    $i2$keycloak$f2$role$domain$features$query.RoleGetByNameQuery = RoleGetByNameQuery;
    $i2$keycloak$f2$role$domain$features$query.RoleGetByNameResult = RoleGetByNameResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$query = $i2$keycloak$f2$role$domain$features.query || ($i2$keycloak$f2$role$domain$features.query = {});
    $i2$keycloak$f2$role$domain$features$query.RolePageQuery = RolePageQuery;
    $i2$keycloak$f2$role$domain$features$query.RolePageResult = RolePageResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$command = $i2$keycloak$f2$role$domain$features.command || ($i2$keycloak$f2$role$domain$features.command = {});
    $i2$keycloak$f2$role$domain$features$command.RoleAddCompositesCommand = RoleAddCompositesCommand;
    $i2$keycloak$f2$role$domain$features$command.RoleAddedCompositesEvent = RoleAddedCompositesEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$command = $i2$keycloak$f2$role$domain$features.command || ($i2$keycloak$f2$role$domain$features.command = {});
    $i2$keycloak$f2$role$domain$features$command.RoleCreateCommand = RoleCreateCommand;
    $i2$keycloak$f2$role$domain$features$command.RoleCreatedEvent = RoleCreatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$role = $i2$keycloak$f2.role || ($i2$keycloak$f2.role = {});
    var $i2$keycloak$f2$role$domain = $i2$keycloak$f2$role.domain || ($i2$keycloak$f2$role.domain = {});
    var $i2$keycloak$f2$role$domain$features = $i2$keycloak$f2$role$domain.features || ($i2$keycloak$f2$role$domain.features = {});
    var $i2$keycloak$f2$role$domain$features$command = $i2$keycloak$f2$role$domain$features.command || ($i2$keycloak$f2$role$domain$features.command = {});
    $i2$keycloak$f2$role$domain$features$command.RoleUpdateCommand = RoleUpdateCommand;
    $i2$keycloak$f2$role$domain$features$command.RoleUpdatedEvent = RoleUpdatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$group = $i2$keycloak$f2.group || ($i2$keycloak$f2.group = {});
    var $i2$keycloak$f2$group$domain = $i2$keycloak$f2$group.domain || ($i2$keycloak$f2$group.domain = {});
    var $i2$keycloak$f2$group$domain$features = $i2$keycloak$f2$group$domain.features || ($i2$keycloak$f2$group$domain.features = {});
    var $i2$keycloak$f2$group$domain$features$command = $i2$keycloak$f2$group$domain$features.command || ($i2$keycloak$f2$group$domain$features.command = {});
    $i2$keycloak$f2$group$domain$features$command.GroupCreateCommand = GroupCreateCommand;
    $i2$keycloak$f2$group$domain$features$command.GroupCreatedEvent = GroupCreatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$group = $i2$keycloak$f2.group || ($i2$keycloak$f2.group = {});
    var $i2$keycloak$f2$group$domain = $i2$keycloak$f2$group.domain || ($i2$keycloak$f2$group.domain = {});
    var $i2$keycloak$f2$group$domain$features = $i2$keycloak$f2$group$domain.features || ($i2$keycloak$f2$group$domain.features = {});
    var $i2$keycloak$f2$group$domain$features$command = $i2$keycloak$f2$group$domain$features.command || ($i2$keycloak$f2$group$domain$features.command = {});
    $i2$keycloak$f2$group$domain$features$command.GroupDisableCommand = GroupDisableCommand;
    $i2$keycloak$f2$group$domain$features$command.GroupDisabledEvent = GroupDisabledEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$group = $i2$keycloak$f2.group || ($i2$keycloak$f2.group = {});
    var $i2$keycloak$f2$group$domain = $i2$keycloak$f2$group.domain || ($i2$keycloak$f2$group.domain = {});
    var $i2$keycloak$f2$group$domain$features = $i2$keycloak$f2$group$domain.features || ($i2$keycloak$f2$group$domain.features = {});
    var $i2$keycloak$f2$group$domain$features$command = $i2$keycloak$f2$group$domain$features.command || ($i2$keycloak$f2$group$domain$features.command = {});
    $i2$keycloak$f2$group$domain$features$command.GroupSetAttributesCommand = GroupSetAttributesCommand;
    $i2$keycloak$f2$group$domain$features$command.GroupSetAttributesEvent = GroupSetAttributesEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$group = $i2$keycloak$f2.group || ($i2$keycloak$f2.group = {});
    var $i2$keycloak$f2$group$domain = $i2$keycloak$f2$group.domain || ($i2$keycloak$f2$group.domain = {});
    var $i2$keycloak$f2$group$domain$features = $i2$keycloak$f2$group$domain.features || ($i2$keycloak$f2$group$domain.features = {});
    var $i2$keycloak$f2$group$domain$features$command = $i2$keycloak$f2$group$domain$features.command || ($i2$keycloak$f2$group$domain$features.command = {});
    $i2$keycloak$f2$group$domain$features$command.GroupUpdateCommand = GroupUpdateCommand;
    $i2$keycloak$f2$group$domain$features$command.GroupUpdatedEvent = GroupUpdatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserCreateCommand = UserCreateCommand;
    $i2$keycloak$f2$user$domain$features$command.UserCreatedEvent = UserCreatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserDeleteCommand = UserDeleteCommand;
    $i2$keycloak$f2$user$domain$features$command.UserDeletedEvent = UserDeletedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserDisableCommand = UserDisableCommand;
    $i2$keycloak$f2$user$domain$features$command.UserDisabledEvent = UserDisabledEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserEmailSendActionsCommand = UserEmailSendActionsCommand;
    $i2$keycloak$f2$user$domain$features$command.UserEmailSentActionsEvent = UserEmailSentActionsEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserJoinGroupCommand = UserJoinGroupCommand;
    $i2$keycloak$f2$user$domain$features$command.UserJoinedGroupEvent = UserJoinedGroupEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserRolesGrantCommand = UserRolesGrantCommand;
    $i2$keycloak$f2$user$domain$features$command.UserRolesGrantedEvent = UserRolesGrantedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserRolesRevokeCommand = UserRolesRevokeCommand;
    $i2$keycloak$f2$user$domain$features$command.UserRolesRevokedEvent = UserRolesRevokedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserRolesSetCommand = UserRolesSetCommand;
    $i2$keycloak$f2$user$domain$features$command.UserRolesSetEvent = UserRolesSetEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserSetAttributesCommand = UserSetAttributesCommand;
    $i2$keycloak$f2$user$domain$features$command.UserSetAttributesEvent = UserSetAttributesEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserUpdateEmailCommand = UserUpdateEmailCommand;
    $i2$keycloak$f2$user$domain$features$command.UserUpdatedEmailEvent = UserUpdatedEmailEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserUpdateCommand = UserUpdateCommand;
    $i2$keycloak$f2$user$domain$features$command.UserUpdatedEvent = UserUpdatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$command = $i2$keycloak$f2$user$domain$features.command || ($i2$keycloak$f2$user$domain$features.command = {});
    $i2$keycloak$f2$user$domain$features$command.UserUpdatePasswordCommand = UserUpdatePasswordCommand;
    $i2$keycloak$f2$user$domain$features$command.UserUpdatedPasswordEvent = UserUpdatedPasswordEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$query = $i2$keycloak$f2$user$domain$features.query || ($i2$keycloak$f2$user$domain$features.query = {});
    $i2$keycloak$f2$user$domain$features$query.UserGetByEmailQuery = UserGetByEmailQuery;
    $i2$keycloak$f2$user$domain$features$query.UserGetByEmailQueryResult = UserGetByEmailQueryResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$query = $i2$keycloak$f2$user$domain$features.query || ($i2$keycloak$f2$user$domain$features.query = {});
    $i2$keycloak$f2$user$domain$features$query.UserGetByUsernameQuery = UserGetByUsernameQuery;
    $i2$keycloak$f2$user$domain$features$query.UserGetByUsernameResult = UserGetByUsernameResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$query = $i2$keycloak$f2$user$domain$features.query || ($i2$keycloak$f2$user$domain$features.query = {});
    $i2$keycloak$f2$user$domain$features$query.UserGetQuery = UserGetQuery;
    $i2$keycloak$f2$user$domain$features$query.UserGetResult = UserGetResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$query = $i2$keycloak$f2$user$domain$features.query || ($i2$keycloak$f2$user$domain$features.query = {});
    $i2$keycloak$f2$user$domain$features$query.UserGetGroupsQuery = UserGetGroupsQuery;
    $i2$keycloak$f2$user$domain$features$query.UserGetGroupsResult = UserGetGroupsResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$query = $i2$keycloak$f2$user$domain$features.query || ($i2$keycloak$f2$user$domain$features.query = {});
    $i2$keycloak$f2$user$domain$features$query.UserGetRolesQuery = UserGetRolesQuery;
    $i2$keycloak$f2$user$domain$features$query.UserGetRolesResult = UserGetRolesResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$features = $i2$keycloak$f2$user$domain.features || ($i2$keycloak$f2$user$domain.features = {});
    var $i2$keycloak$f2$user$domain$features$query = $i2$keycloak$f2$user$domain$features.query || ($i2$keycloak$f2$user$domain$features.query = {});
    $i2$keycloak$f2$user$domain$features$query.UserPageQuery = UserPageQuery;
    $i2$keycloak$f2$user$domain$features$query.UserPageResult = UserPageResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$model = $i2$keycloak$f2$user$domain.model || ($i2$keycloak$f2$user$domain.model = {});
    $i2$keycloak$f2$user$domain$model.UserGroup = UserGroup;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$user = $i2$keycloak$f2.user || ($i2$keycloak$f2.user = {});
    var $i2$keycloak$f2$user$domain = $i2$keycloak$f2$user.domain || ($i2$keycloak$f2$user.domain = {});
    var $i2$keycloak$f2$user$domain$model = $i2$keycloak$f2$user$domain.model || ($i2$keycloak$f2$user$domain.model = {});
    $i2$keycloak$f2$user$domain$model.UserModel = UserModel;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    $i2$keycloak$f2$client$domain.ClientModel = ClientModel;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$query = $i2$keycloak$f2$client$domain$features.query || ($i2$keycloak$f2$client$domain$features.query = {});
    $i2$keycloak$f2$client$domain$features$query.ClientGetByClientIdentifierQuery = ClientGetByClientIdentifierQuery;
    $i2$keycloak$f2$client$domain$features$query.ClientGetByClientIdentifierResult = ClientGetByClientIdentifierResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$query = $i2$keycloak$f2$client$domain$features.query || ($i2$keycloak$f2$client$domain$features.query = {});
    $i2$keycloak$f2$client$domain$features$query.ClientGetQuery = ClientGetQuery;
    $i2$keycloak$f2$client$domain$features$query.ClientGetResult = ClientGetResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$query = $i2$keycloak$f2$client$domain$features.query || ($i2$keycloak$f2$client$domain$features.query = {});
    $i2$keycloak$f2$client$domain$features$query.ClientGetSecretQuery = ClientGetSecretQuery;
    $i2$keycloak$f2$client$domain$features$query.ClientGetSecretResult = ClientGetSecretResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$query = $i2$keycloak$f2$client$domain$features.query || ($i2$keycloak$f2$client$domain$features.query = {});
    $i2$keycloak$f2$client$domain$features$query.ClientGetServiceAccountQuery = ClientGetServiceAccountQuery;
    $i2$keycloak$f2$client$domain$features$query.ClientGetServiceAccountResult = ClientGetServiceAccountResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$query = $i2$keycloak$f2$client$domain$features.query || ($i2$keycloak$f2$client$domain$features.query = {});
    $i2$keycloak$f2$client$domain$features$query.ClientPageQuery = ClientPageQuery;
    $i2$keycloak$f2$client$domain$features$query.ClientPageResult = ClientPageResult;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$command = $i2$keycloak$f2$client$domain$features.command || ($i2$keycloak$f2$client$domain$features.command = {});
    $i2$keycloak$f2$client$domain$features$command.ClientCreateCommand = ClientCreateCommand;
    $i2$keycloak$f2$client$domain$features$command.ClientCreatedEvent = ClientCreatedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$command = $i2$keycloak$f2$client$domain$features.command || ($i2$keycloak$f2$client$domain$features.command = {});
    $i2$keycloak$f2$client$domain$features$command.ClientDeleteCommand = ClientDeleteCommand;
    $i2$keycloak$f2$client$domain$features$command.ClientDeletedEvent = ClientDeletedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$command = $i2$keycloak$f2$client$domain$features.command || ($i2$keycloak$f2$client$domain$features.command = {});
    $i2$keycloak$f2$client$domain$features$command.ClientGenerateSecretCommand = ClientGenerateSecretCommand;
    $i2$keycloak$f2$client$domain$features$command.ClientGeneratedSecretEvent = ClientGeneratedSecretEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$command = $i2$keycloak$f2$client$domain$features.command || ($i2$keycloak$f2$client$domain$features.command = {});
    $i2$keycloak$f2$client$domain$features$command.ClientRealmManagementRolesGrantCommand = ClientRealmManagementRolesGrantCommand;
    $i2$keycloak$f2$client$domain$features$command.ClientRealmManagementRolesGrantedEvent = ClientRealmManagementRolesGrantedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$command = $i2$keycloak$f2$client$domain$features.command || ($i2$keycloak$f2$client$domain$features.command = {});
    $i2$keycloak$f2$client$domain$features$command.ClientServiceAccountRolesGrantCommand = ClientServiceAccountRolesGrantCommand;
    $i2$keycloak$f2$client$domain$features$command.ClientServiceAccountRolesGrantedEvent = ClientServiceAccountRolesGrantedEvent;
    var $i2 = _.i2 || (_.i2 = {});
    var $i2$keycloak = $i2.keycloak || ($i2.keycloak = {});
    var $i2$keycloak$f2 = $i2$keycloak.f2 || ($i2$keycloak.f2 = {});
    var $i2$keycloak$f2$client = $i2$keycloak$f2.client || ($i2$keycloak$f2.client = {});
    var $i2$keycloak$f2$client$domain = $i2$keycloak$f2$client.domain || ($i2$keycloak$f2$client.domain = {});
    var $i2$keycloak$f2$client$domain$features = $i2$keycloak$f2$client$domain.features || ($i2$keycloak$f2$client$domain.features = {});
    var $i2$keycloak$f2$client$domain$features$command = $i2$keycloak$f2$client$domain$features.command || ($i2$keycloak$f2$client$domain$features.command = {});
    $i2$keycloak$f2$client$domain$features$command.ClientUpdateUrisCommand = ClientUpdateUrisCommand;
    $i2$keycloak$f2$client$domain$features$command.ClientUpdatedUrisEvent = ClientUpdatedUrisEvent;
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$command = $city$smartb$im$organization$domain$features.command || ($city$smartb$im$organization$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$command = $city$smartb$im$organization$domain$features.command || ($city$smartb$im$organization$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$command = $city$smartb$im$organization$domain$features.command || ($city$smartb$im$organization$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$command = $city$smartb$im$organization$domain$features.command || ($city$smartb$im$organization$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$command = $city$smartb$im$organization$domain$features.command || ($city$smartb$im$organization$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$query = $city$smartb$im$organization$domain$features.query || ($city$smartb$im$organization$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$query = $city$smartb$im$organization$domain$features.query || ($city$smartb$im$organization$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$query = $city$smartb$im$organization$domain$features.query || ($city$smartb$im$organization$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$features = $city$smartb$im$organization$domain.features || ($city$smartb$im$organization$domain.features = {});
    var $city$smartb$im$organization$domain$features$query = $city$smartb$im$organization$domain$features.query || ($city$smartb$im$organization$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$model = $city$smartb$im$organization$domain.model || ($city$smartb$im$organization$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$model = $city$smartb$im$organization$domain.model || ($city$smartb$im$organization$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$organization = $city$smartb$im.organization || ($city$smartb$im.organization = {});
    var $city$smartb$im$organization$domain = $city$smartb$im$organization.domain || ($city$smartb$im$organization.domain = {});
    var $city$smartb$im$organization$domain$policies = $city$smartb$im$organization$domain.policies || ($city$smartb$im$organization$domain.policies = {});
    Object.defineProperty($city$smartb$im$organization$domain$policies, 'OrganizationPolicies', {
      configurable: true,
      get: OrganizationPolicies_getInstance
    });
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$command = $city$smartb$im$user$domain$features.command || ($city$smartb$im$user$domain$features.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$query = $city$smartb$im$user$domain$features.query || ($city$smartb$im$user$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$query = $city$smartb$im$user$domain$features.query || ($city$smartb$im$user$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$query = $city$smartb$im$user$domain$features.query || ($city$smartb$im$user$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$features = $city$smartb$im$user$domain.features || ($city$smartb$im$user$domain.features = {});
    var $city$smartb$im$user$domain$features$query = $city$smartb$im$user$domain$features.query || ($city$smartb$im$user$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$model = $city$smartb$im$user$domain.model || ($city$smartb$im$user$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$im = $city$smartb.im || ($city$smartb.im = {});
    var $city$smartb$im$user = $city$smartb$im.user || ($city$smartb$im.user = {});
    var $city$smartb$im$user$domain = $city$smartb$im$user.domain || ($city$smartb$im$user.domain = {});
    var $city$smartb$im$user$domain$policies = $city$smartb$im$user$domain.policies || ($city$smartb$im$user$domain.policies = {});
    Object.defineProperty($city$smartb$im$user$domain$policies, 'UserPolicies', {
      configurable: true,
      get: UserPolicies_getInstance
    });
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$blockchain = $ssm$chaincode$dsl.blockchain || ($ssm$chaincode$dsl.blockchain = {});
    $ssm$chaincode$dsl$blockchain.Block = Block;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$blockchain = $ssm$chaincode$dsl.blockchain || ($ssm$chaincode$dsl.blockchain = {});
    $ssm$chaincode$dsl$blockchain.EnvelopeType = EnvelopeType;
    $ssm$chaincode$dsl$blockchain.EnvelopeType.values = values_0;
    $ssm$chaincode$dsl$blockchain.EnvelopeType.valueOf = valueOf_0;
    Object.defineProperty($ssm$chaincode$dsl$blockchain.EnvelopeType, 'TRANSACTION_ENVELOPE', {
      configurable: true,
      get: EnvelopeType_TRANSACTION_ENVELOPE_getInstance
    });
    Object.defineProperty($ssm$chaincode$dsl$blockchain.EnvelopeType, 'ENVELOPE', {
      configurable: true,
      get: EnvelopeType_ENVELOPE_getInstance
    });
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$blockchain = $ssm$chaincode$dsl.blockchain || ($ssm$chaincode$dsl.blockchain = {});
    $ssm$chaincode$dsl$blockchain.IdentitiesInfo = IdentitiesInfo;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$blockchain = $ssm$chaincode$dsl.blockchain || ($ssm$chaincode$dsl.blockchain = {});
    $ssm$chaincode$dsl$blockchain.Transaction = Transaction;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$config = $ssm$chaincode$dsl.config || ($ssm$chaincode$dsl.config = {});
    $ssm$chaincode$dsl$config.ChaincodeSsmConfig = ChaincodeSsmConfig;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.Agent = Agent;
    Object.defineProperty($ssm$chaincode$dsl$model.Agent, 'Companion', {
      configurable: true,
      get: Companion_getInstance_20
    });
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.Chaincode = Chaincode;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.Ssm = Ssm;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.SsmContext = SsmContext;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.SsmGrant = SsmGrant;
    $ssm$chaincode$dsl$model.Credit = Credit;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.SsmSession = SsmSession;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.SsmSessionState = SsmSessionState;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.SsmSessionStateLog = SsmSessionStateLog;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    $ssm$chaincode$dsl$model.SsmTransition = SsmTransition;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    var $ssm$chaincode$dsl$model$uri = $ssm$chaincode$dsl$model.uri || ($ssm$chaincode$dsl$model.uri = {});
    $ssm$chaincode$dsl$model$uri.ChaincodeUri = ChaincodeUri;
    Object.defineProperty($ssm$chaincode$dsl$model$uri.ChaincodeUri, 'Companion', {
      configurable: true,
      get: Companion_getInstance_21
    });
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$model = $ssm$chaincode$dsl.model || ($ssm$chaincode$dsl.model = {});
    var $ssm$chaincode$dsl$model$uri = $ssm$chaincode$dsl$model.uri || ($ssm$chaincode$dsl$model.uri = {});
    $ssm$chaincode$dsl$model$uri.SsmUri = SsmUri;
    Object.defineProperty($ssm$chaincode$dsl$model$uri.SsmUri, 'Companion', {
      configurable: true,
      get: Companion_getInstance_22
    });
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmGetAdminQuery = SsmGetAdminQuery;
    $ssm$chaincode$dsl$query.SsmGetAdminResult = SsmGetAdminResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmGetQuery = SsmGetQuery;
    $ssm$chaincode$dsl$query.SsmGetResult = SsmGetResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmGetSessionLogsQuery = SsmGetSessionLogsQuery;
    $ssm$chaincode$dsl$query.SsmGetSessionLogsQueryResult = SsmGetSessionLogsQueryResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmGetSessionQuery = SsmGetSessionQuery;
    $ssm$chaincode$dsl$query.SsmGetSessionResult = SsmGetSessionResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmGetTransactionQuery = SsmGetTransactionQuery;
    $ssm$chaincode$dsl$query.SsmGetTransactionQueryResult = SsmGetTransactionQueryResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmGetUserQuery = SsmGetUserQuery;
    $ssm$chaincode$dsl$query.SsmGetUserResult = SsmGetUserResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmListAdminQuery = SsmListAdminQuery;
    $ssm$chaincode$dsl$query.SsmListAdminResult = SsmListAdminResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmListSessionQuery = SsmListSessionQuery;
    $ssm$chaincode$dsl$query.SsmListSessionResult = SsmListSessionResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmListSsmQuery = SsmListSsmQuery;
    $ssm$chaincode$dsl$query.SsmListSsmResult = SsmListSsmResult;
    var $ssm = _.ssm || (_.ssm = {});
    var $ssm$chaincode = $ssm.chaincode || ($ssm.chaincode = {});
    var $ssm$chaincode$dsl = $ssm$chaincode.dsl || ($ssm$chaincode.dsl = {});
    var $ssm$chaincode$dsl$query = $ssm$chaincode$dsl.query || ($ssm$chaincode$dsl.query = {});
    $ssm$chaincode$dsl$query.SsmListUserQuery = SsmListUserQuery;
    $ssm$chaincode$dsl$query.SsmListUserResult = SsmListUserResult;
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    $s2$dsl$automate.S2Automate = S2Automate;
    $s2$dsl$automate.S2Automate.S2Automate_init_$Create$ = S2Automate_init_$Create$;
    Object.defineProperty($s2$dsl$automate.S2Automate, 'Companion', {
      configurable: true,
      get: Companion_getInstance_23
    });
    Object.defineProperty($s2$dsl$automate.S2Automate, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_3
    });
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    $s2$dsl$automate.S2ErrorBase = S2ErrorBase;
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    $s2$dsl$automate.S2EventSuccess = S2EventSuccess;
    $s2$dsl$automate.S2EventError = S2EventError;
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    $s2$dsl$automate.S2SubMachine = S2SubMachine;
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    $s2$dsl$automate.S2InitTransition = S2InitTransition;
    $s2$dsl$automate.S2Transition = S2Transition;
    $s2$dsl$automate.S2Transition.S2Transition_init_$Create$ = S2Transition_init_$Create$;
    Object.defineProperty($s2$dsl$automate.S2Transition, 'Companion', {
      configurable: true,
      get: Companion_getInstance_24
    });
    Object.defineProperty($s2$dsl$automate.S2Transition, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_4
    });
    $s2$dsl$automate.S2TransitionValue = S2TransitionValue;
    $s2$dsl$automate.S2TransitionValue.S2TransitionValue_init_$Create$ = S2TransitionValue_init_$Create$;
    Object.defineProperty($s2$dsl$automate.S2TransitionValue, 'Companion', {
      configurable: true,
      get: Companion_getInstance_25
    });
    Object.defineProperty($s2$dsl$automate.S2TransitionValue, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_5
    });
    $s2$dsl$automate.S2RoleValue = S2RoleValue;
    $s2$dsl$automate.S2RoleValue.S2RoleValue_init_$Create$ = S2RoleValue_init_$Create$;
    Object.defineProperty($s2$dsl$automate.S2RoleValue, 'Companion', {
      configurable: true,
      get: Companion_getInstance_26
    });
    Object.defineProperty($s2$dsl$automate.S2RoleValue, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_6
    });
    $s2$dsl$automate.S2StateValue = S2StateValue;
    $s2$dsl$automate.S2StateValue.S2StateValue_init_$Create$ = S2StateValue_init_$Create$;
    Object.defineProperty($s2$dsl$automate.S2StateValue, 'Companion', {
      configurable: true,
      get: Companion_getInstance_27
    });
    Object.defineProperty($s2$dsl$automate.S2StateValue, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_7
    });
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2$dsl$automate$builder = $s2$dsl$automate.builder || ($s2$dsl$automate.builder = {});
    $s2$dsl$automate$builder.s2 = s2;
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2$dsl$automate$builder = $s2$dsl$automate.builder || ($s2$dsl$automate.builder = {});
    $s2$dsl$automate$builder.s2Sourcing = s2Sourcing;
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2$dsl$automate$model = $s2$dsl$automate.model || ($s2$dsl$automate.model = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2$dsl$automate$model = $s2$dsl$automate.model || ($s2$dsl$automate.model = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$dsl = $s2.dsl || ($s2.dsl = {});
    var $s2$dsl$automate = $s2$dsl.automate || ($s2$dsl.automate = {});
    var $s2$dsl$automate$model = $s2$dsl$automate.model || ($s2$dsl$automate.model = {});
    var $s2 = _.s2 || (_.s2 = {});
    var $s2$sourcing = $s2.sourcing || ($s2.sourcing = {});
    var $s2$sourcing$dsl = $s2$sourcing.dsl || ($s2$sourcing.dsl = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$api = $city$smartb$registry$program.api || ($city$smartb$registry$program.api = {});
    var $city$smartb$registry$program$api$commons = $city$smartb$registry$program$api.commons || ($city$smartb$registry$program$api.commons = {});
    var $city$smartb$registry$program$api$commons$auth = $city$smartb$registry$program$api$commons.auth || ($city$smartb$registry$program$api$commons.auth = {});
    Object.defineProperty($city$smartb$registry$program$api$commons$auth, 'Roles', {
      configurable: true,
      get: Roles_getInstance
    });
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$api = $city$smartb$registry$program.api || ($city$smartb$registry$program.api = {});
    var $city$smartb$registry$program$api$commons = $city$smartb$registry$program$api.commons || ($city$smartb$registry$program$api.commons = {});
    var $city$smartb$registry$program$api$commons$exception = $city$smartb$registry$program$api$commons.exception || ($city$smartb$registry$program$api$commons.exception = {});
    Object.defineProperty($city$smartb$registry$program$api$commons$exception, 'ExceptionCodes', {
      configurable: true,
      get: ExceptionCodes_getInstance
    });
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$api = $city$smartb$registry$program.api || ($city$smartb$registry$program.api = {});
    var $city$smartb$registry$program$api$commons = $city$smartb$registry$program$api.commons || ($city$smartb$registry$program$api.commons = {});
    var $city$smartb$registry$program$api$commons$model = $city$smartb$registry$program$api$commons.model || ($city$smartb$registry$program$api$commons.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$api = $city$smartb$registry$program.api || ($city$smartb$registry$program.api = {});
    var $city$smartb$registry$program$api$commons = $city$smartb$registry$program$api.commons || ($city$smartb$registry$program$api.commons = {});
    var $city$smartb$registry$program$api$commons$model = $city$smartb$registry$program$api$commons.model || ($city$smartb$registry$program$api$commons.model = {});
    Object.defineProperty($city$smartb$registry$program$api$commons$model, 'RedirectableRoutes', {
      configurable: true,
      get: RedirectableRoutes_getInstance
    });
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$dsl = $cccev.dsl || ($cccev.dsl = {});
    var $cccev$dsl$model = $cccev$dsl.model || ($cccev$dsl.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$dsl = $cccev.dsl || ($cccev.dsl = {});
    var $cccev$dsl$model = $cccev$dsl.model || ($cccev$dsl.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$dsl = $cccev.dsl || ($cccev.dsl = {});
    var $cccev$dsl$model = $cccev$dsl.model || ($cccev$dsl.model = {});
    $cccev$dsl$model.CoreLocationLocation = CoreLocationLocation;
    $cccev$dsl$model.CoreLocationLocation.CoreLocationLocation_init_$Create$ = CoreLocationLocation_init_$Create$;
    Object.defineProperty($cccev$dsl$model.CoreLocationLocation, 'Companion', {
      configurable: true,
      get: Companion_getInstance_31
    });
    Object.defineProperty($cccev$dsl$model.CoreLocationLocation, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_8
    });
    $cccev$dsl$model.PeriodOfTime = PeriodOfTime;
    $cccev$dsl$model.PeriodOfTime.PeriodOfTime_init_$Create$ = PeriodOfTime_init_$Create$_0;
    Object.defineProperty($cccev$dsl$model.PeriodOfTime, 'Companion', {
      configurable: true,
      get: Companion_getInstance_32
    });
    Object.defineProperty($cccev$dsl$model.PeriodOfTime, '$serializer', {
      configurable: true,
      get: $serializer_getInstance_9
    });
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$dsl = $cccev.dsl || ($cccev.dsl = {});
    var $cccev$dsl$model = $cccev$dsl.model || ($cccev$dsl.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$dsl = $cccev.dsl || ($cccev.dsl = {});
    var $cccev$dsl$model = $cccev$dsl.model || ($cccev$dsl.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$dsl = $cccev.dsl || ($cccev.dsl = {});
    var $cccev$dsl$model = $cccev$dsl.model || ($cccev$dsl.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$unit = $cccev$s2.unit || ($cccev$s2.unit = {});
    var $cccev$s2$unit$domain = $cccev$s2$unit.domain || ($cccev$s2$unit.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$unit = $cccev$s2.unit || ($cccev$s2.unit = {});
    var $cccev$s2$unit$domain = $cccev$s2$unit.domain || ($cccev$s2$unit.domain = {});
    var $cccev$s2$unit$domain$command = $cccev$s2$unit$domain.command || ($cccev$s2$unit$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$concept = $cccev$s2.concept || ($cccev$s2.concept = {});
    var $cccev$s2$concept$domain = $cccev$s2$concept.domain || ($cccev$s2$concept.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$concept = $cccev$s2.concept || ($cccev$s2.concept = {});
    var $cccev$s2$concept$domain = $cccev$s2$concept.domain || ($cccev$s2$concept.domain = {});
    var $cccev$s2$concept$domain$command = $cccev$s2$concept$domain.command || ($cccev$s2$concept$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$evidence = $cccev$s2.evidence || ($cccev$s2.evidence = {});
    var $cccev$s2$evidence$type = $cccev$s2$evidence.type || ($cccev$s2$evidence.type = {});
    var $cccev$s2$evidence$type$domain = $cccev$s2$evidence$type.domain || ($cccev$s2$evidence$type.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$evidence = $cccev$s2.evidence || ($cccev$s2.evidence = {});
    var $cccev$s2$evidence$type = $cccev$s2$evidence.type || ($cccev$s2$evidence.type = {});
    var $cccev$s2$evidence$type$domain = $cccev$s2$evidence$type.domain || ($cccev$s2$evidence$type.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$evidence = $cccev$s2.evidence || ($cccev$s2.evidence = {});
    var $cccev$s2$evidence$type = $cccev$s2$evidence.type || ($cccev$s2$evidence.type = {});
    var $cccev$s2$evidence$type$domain = $cccev$s2$evidence$type.domain || ($cccev$s2$evidence$type.domain = {});
    var $cccev$s2$evidence$type$domain$command = $cccev$s2$evidence$type$domain.command || ($cccev$s2$evidence$type$domain.command = {});
    var $cccev$s2$evidence$type$domain$command$list = $cccev$s2$evidence$type$domain$command.list || ($cccev$s2$evidence$type$domain$command.list = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$evidence = $cccev$s2.evidence || ($cccev$s2.evidence = {});
    var $cccev$s2$evidence$type = $cccev$s2$evidence.type || ($cccev$s2$evidence.type = {});
    var $cccev$s2$evidence$type$domain = $cccev$s2$evidence$type.domain || ($cccev$s2$evidence$type.domain = {});
    var $cccev$s2$evidence$type$domain$command = $cccev$s2$evidence$type$domain.command || ($cccev$s2$evidence$type$domain.command = {});
    var $cccev$s2$evidence$type$domain$command$list = $cccev$s2$evidence$type$domain$command.list || ($cccev$s2$evidence$type$domain$command.list = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$evidence = $cccev$s2.evidence || ($cccev$s2.evidence = {});
    var $cccev$s2$evidence$type = $cccev$s2$evidence.type || ($cccev$s2$evidence.type = {});
    var $cccev$s2$evidence$type$domain = $cccev$s2$evidence$type.domain || ($cccev$s2$evidence$type.domain = {});
    var $cccev$s2$evidence$type$domain$command = $cccev$s2$evidence$type$domain.command || ($cccev$s2$evidence$type$domain.command = {});
    var $cccev$s2$evidence$type$domain$command$type = $cccev$s2$evidence$type$domain$command.type || ($cccev$s2$evidence$type$domain$command.type = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$requirement = $cccev$s2.requirement || ($cccev$s2.requirement = {});
    var $cccev$s2$requirement$domain = $cccev$s2$requirement.domain || ($cccev$s2$requirement.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$requirement = $cccev$s2.requirement || ($cccev$s2.requirement = {});
    var $cccev$s2$requirement$domain = $cccev$s2$requirement.domain || ($cccev$s2$requirement.domain = {});
    var $cccev$s2$requirement$domain$command = $cccev$s2$requirement$domain.command || ($cccev$s2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$requirement = $cccev$s2.requirement || ($cccev$s2.requirement = {});
    var $cccev$s2$requirement$domain = $cccev$s2$requirement.domain || ($cccev$s2$requirement.domain = {});
    var $cccev$s2$requirement$domain$command = $cccev$s2$requirement$domain.command || ($cccev$s2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$requirement = $cccev$s2.requirement || ($cccev$s2.requirement = {});
    var $cccev$s2$requirement$domain = $cccev$s2$requirement.domain || ($cccev$s2$requirement.domain = {});
    var $cccev$s2$requirement$domain$command = $cccev$s2$requirement$domain.command || ($cccev$s2$requirement$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$fs = $city$smartb.fs || ($city$smartb.fs = {});
    var $city$smartb$fs$s2 = $city$smartb$fs.s2 || ($city$smartb$fs.s2 = {});
    var $city$smartb$fs$s2$file = $city$smartb$fs$s2.file || ($city$smartb$fs$s2.file = {});
    var $city$smartb$fs$s2$file$domain = $city$smartb$fs$s2$file.domain || ($city$smartb$fs$s2$file.domain = {});
    var $city$smartb$fs$s2$file$domain$features = $city$smartb$fs$s2$file$domain.features || ($city$smartb$fs$s2$file$domain.features = {});
    var $city$smartb$fs$s2$file$domain$features$query = $city$smartb$fs$s2$file$domain$features.query || ($city$smartb$fs$s2$file$domain$features.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$fs = $city$smartb.fs || ($city$smartb.fs = {});
    var $city$smartb$fs$s2 = $city$smartb$fs.s2 || ($city$smartb$fs.s2 = {});
    var $city$smartb$fs$s2$file = $city$smartb$fs$s2.file || ($city$smartb$fs$s2.file = {});
    var $city$smartb$fs$s2$file$domain = $city$smartb$fs$s2$file.domain || ($city$smartb$fs$s2$file.domain = {});
    var $city$smartb$fs$s2$file$domain$model = $city$smartb$fs$s2$file$domain.model || ($city$smartb$fs$s2$file$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$chat = $city$smartb$registry$program$f2.chat || ($city$smartb$registry$program$f2.chat = {});
    var $city$smartb$registry$program$f2$chat$domain = $city$smartb$registry$program$f2$chat.domain || ($city$smartb$registry$program$f2$chat.domain = {});
    var $city$smartb$registry$program$f2$chat$domain$model = $city$smartb$registry$program$f2$chat$domain.model || ($city$smartb$registry$program$f2$chat$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$fs = $city$smartb.fs || ($city$smartb.fs = {});
    var $city$smartb$fs$s2 = $city$smartb$fs.s2 || ($city$smartb$fs.s2 = {});
    var $city$smartb$fs$s2$file = $city$smartb$fs$s2.file || ($city$smartb$fs$s2.file = {});
    var $city$smartb$fs$s2$file$domain = $city$smartb$fs$s2$file.domain || ($city$smartb$fs$s2$file.domain = {});
    var $city$smartb$fs$s2$file$domain$model = $city$smartb$fs$s2$file$domain.model || ($city$smartb$fs$s2$file$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$command = $cccev$s2$certification$domain.command || ($cccev$s2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$command = $cccev$s2$certification$domain.command || ($cccev$s2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$command = $cccev$s2$certification$domain.command || ($cccev$s2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$command = $cccev$s2$certification$domain.command || ($cccev$s2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$command = $cccev$s2$certification$domain.command || ($cccev$s2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$command = $cccev$s2$certification$domain.command || ($cccev$s2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$model = $cccev$s2$certification$domain.model || ($cccev$s2$certification$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$certification = $cccev$s2.certification || ($cccev$s2.certification = {});
    var $cccev$s2$certification$domain = $cccev$s2$certification.domain || ($cccev$s2$certification.domain = {});
    var $cccev$s2$certification$domain$model = $cccev$s2$certification$domain.model || ($cccev$s2$certification$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$domain = $cccev$f2$evidence.domain || ($cccev$f2$evidence.domain = {});
    var $cccev$f2$evidence$domain$features = $cccev$f2$evidence$domain.features || ($cccev$f2$evidence$domain.features = {});
    var $cccev$f2$evidence$domain$features$query = $cccev$f2$evidence$domain$features.query || ($cccev$f2$evidence$domain$features.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$domain = $cccev$f2$evidence.domain || ($cccev$f2$evidence.domain = {});
    var $cccev$f2$evidence$domain$model = $cccev$f2$evidence$domain.model || ($cccev$f2$evidence$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$domain = $cccev$f2$evidence.domain || ($cccev$f2$evidence.domain = {});
    var $cccev$f2$evidence$domain$model = $cccev$f2$evidence$domain.model || ($cccev$f2$evidence$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$domain = $cccev$f2$evidence.domain || ($cccev$f2$evidence.domain = {});
    var $cccev$f2$evidence$domain$model = $cccev$f2$evidence$domain.model || ($cccev$f2$evidence$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$unit = $cccev$f2.unit || ($cccev$f2.unit = {});
    var $cccev$f2$unit$domain = $cccev$f2$unit.domain || ($cccev$f2$unit.domain = {});
    var $cccev$f2$unit$domain$command = $cccev$f2$unit$domain.command || ($cccev$f2$unit$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$unit = $cccev$f2.unit || ($cccev$f2.unit = {});
    var $cccev$f2$unit$domain = $cccev$f2$unit.domain || ($cccev$f2$unit.domain = {});
    var $cccev$f2$unit$domain$model = $cccev$f2$unit$domain.model || ($cccev$f2$unit$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$unit = $cccev$f2.unit || ($cccev$f2.unit = {});
    var $cccev$f2$unit$domain = $cccev$f2$unit.domain || ($cccev$f2$unit.domain = {});
    var $cccev$f2$unit$domain$model = $cccev$f2$unit$domain.model || ($cccev$f2$unit$domain.model = {});
    Object.defineProperty($cccev$f2$unit$domain$model, 'DataUnitTypeValues', {
      configurable: true,
      get: DataUnitTypeValues_getInstance
    });
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$unit = $cccev$f2.unit || ($cccev$f2.unit = {});
    var $cccev$f2$unit$domain = $cccev$f2$unit.domain || ($cccev$f2$unit.domain = {});
    var $cccev$f2$unit$domain$query = $cccev$f2$unit$domain.query || ($cccev$f2$unit$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$unit = $cccev$f2.unit || ($cccev$f2.unit = {});
    var $cccev$f2$unit$domain = $cccev$f2$unit.domain || ($cccev$f2$unit.domain = {});
    var $cccev$f2$unit$domain$query = $cccev$f2$unit$domain.query || ($cccev$f2$unit$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$concept = $cccev$f2.concept || ($cccev$f2.concept = {});
    var $cccev$f2$concept$domain = $cccev$f2$concept.domain || ($cccev$f2$concept.domain = {});
    var $cccev$f2$concept$domain$command = $cccev$f2$concept$domain.command || ($cccev$f2$concept$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$concept = $cccev$f2.concept || ($cccev$f2.concept = {});
    var $cccev$f2$concept$domain = $cccev$f2$concept.domain || ($cccev$f2$concept.domain = {});
    var $cccev$f2$concept$domain$model = $cccev$f2$concept$domain.model || ($cccev$f2$concept$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$concept = $cccev$f2.concept || ($cccev$f2.concept = {});
    var $cccev$f2$concept$domain = $cccev$f2$concept.domain || ($cccev$f2$concept.domain = {});
    var $cccev$f2$concept$domain$model = $cccev$f2$concept$domain.model || ($cccev$f2$concept$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$concept = $cccev$f2.concept || ($cccev$f2.concept = {});
    var $cccev$f2$concept$domain = $cccev$f2$concept.domain || ($cccev$f2$concept.domain = {});
    var $cccev$f2$concept$domain$query = $cccev$f2$concept$domain.query || ($cccev$f2$concept$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$concept = $cccev$f2.concept || ($cccev$f2.concept = {});
    var $cccev$f2$concept$domain = $cccev$f2$concept.domain || ($cccev$f2$concept.domain = {});
    var $cccev$f2$concept$domain$query = $cccev$f2$concept$domain.query || ($cccev$f2$concept$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$concept = $cccev$f2.concept || ($cccev$f2.concept = {});
    var $cccev$f2$concept$domain = $cccev$f2$concept.domain || ($cccev$f2$concept.domain = {});
    var $cccev$f2$concept$domain$query = $cccev$f2$concept$domain.query || ($cccev$f2$concept$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$command = $cccev$f2$certification$domain.command || ($cccev$f2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$command = $cccev$f2$certification$domain.command || ($cccev$f2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$command = $cccev$f2$certification$domain.command || ($cccev$f2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$command = $cccev$f2$certification$domain.command || ($cccev$f2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$command = $cccev$f2$certification$domain.command || ($cccev$f2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$command = $cccev$f2$certification$domain.command || ($cccev$f2$certification$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$model = $cccev$f2$certification$domain.model || ($cccev$f2$certification$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$model = $cccev$f2$certification$domain.model || ($cccev$f2$certification$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$query = $cccev$f2$certification$domain.query || ($cccev$f2$certification$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$query = $cccev$f2$certification$domain.query || ($cccev$f2$certification$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$certification = $cccev$f2.certification || ($cccev$f2.certification = {});
    var $cccev$f2$certification$domain = $cccev$f2$certification.domain || ($cccev$f2$certification.domain = {});
    var $cccev$f2$certification$domain$query = $cccev$f2$certification$domain.query || ($cccev$f2$certification$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$command = $cccev$f2$evidence$type$domain.command || ($cccev$f2$evidence$type$domain.command = {});
    var $cccev$f2$evidence$type$domain$command$list = $cccev$f2$evidence$type$domain$command.list || ($cccev$f2$evidence$type$domain$command.list = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$command = $cccev$f2$evidence$type$domain.command || ($cccev$f2$evidence$type$domain.command = {});
    var $cccev$f2$evidence$type$domain$command$list = $cccev$f2$evidence$type$domain$command.list || ($cccev$f2$evidence$type$domain$command.list = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$command = $cccev$f2$evidence$type$domain.command || ($cccev$f2$evidence$type$domain.command = {});
    var $cccev$f2$evidence$type$domain$command$type = $cccev$f2$evidence$type$domain$command.type || ($cccev$f2$evidence$type$domain$command.type = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$model = $cccev$f2$evidence$type$domain.model || ($cccev$f2$evidence$type$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$model = $cccev$f2$evidence$type$domain.model || ($cccev$f2$evidence$type$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$query = $cccev$f2$evidence$type$domain.query || ($cccev$f2$evidence$type$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$query = $cccev$f2$evidence$type$domain.query || ($cccev$f2$evidence$type$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$query = $cccev$f2$evidence$type$domain.query || ($cccev$f2$evidence$type$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$evidence = $cccev$f2.evidence || ($cccev$f2.evidence = {});
    var $cccev$f2$evidence$type = $cccev$f2$evidence.type || ($cccev$f2$evidence.type = {});
    var $cccev$f2$evidence$type$domain = $cccev$f2$evidence$type.domain || ($cccev$f2$evidence$type.domain = {});
    var $cccev$f2$evidence$type$domain$query = $cccev$f2$evidence$type$domain.query || ($cccev$f2$evidence$type$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$framework = $cccev$s2.framework || ($cccev$s2.framework = {});
    var $cccev$s2$framework$domain = $cccev$s2$framework.domain || ($cccev$s2$framework.domain = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$framework = $cccev$s2.framework || ($cccev$s2.framework = {});
    var $cccev$s2$framework$domain = $cccev$s2$framework.domain || ($cccev$s2$framework.domain = {});
    var $cccev$s2$framework$domain$command = $cccev$s2$framework$domain.command || ($cccev$s2$framework$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$s2 = $cccev.s2 || ($cccev.s2 = {});
    var $cccev$s2$framework = $cccev$s2.framework || ($cccev$s2.framework = {});
    var $cccev$s2$framework$domain = $cccev$s2$framework.domain || ($cccev$s2$framework.domain = {});
    var $cccev$s2$framework$domain$model = $cccev$s2$framework$domain.model || ($cccev$s2$framework$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$framework = $cccev$f2.framework || ($cccev$f2.framework = {});
    var $cccev$f2$framework$domain = $cccev$f2$framework.domain || ($cccev$f2$framework.domain = {});
    var $cccev$f2$framework$domain$command = $cccev$f2$framework$domain.command || ($cccev$f2$framework$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$framework = $cccev$f2.framework || ($cccev$f2.framework = {});
    var $cccev$f2$framework$domain = $cccev$f2$framework.domain || ($cccev$f2$framework.domain = {});
    var $cccev$f2$framework$domain$model = $cccev$f2$framework$domain.model || ($cccev$f2$framework$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$framework = $cccev$f2.framework || ($cccev$f2.framework = {});
    var $cccev$f2$framework$domain = $cccev$f2$framework.domain || ($cccev$f2$framework.domain = {});
    var $cccev$f2$framework$domain$query = $cccev$f2$framework$domain.query || ($cccev$f2$framework$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$framework = $cccev$f2.framework || ($cccev$f2.framework = {});
    var $cccev$f2$framework$domain = $cccev$f2$framework.domain || ($cccev$f2$framework.domain = {});
    var $cccev$f2$framework$domain$query = $cccev$f2$framework$domain.query || ($cccev$f2$framework$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$command = $cccev$f2$requirement$domain.command || ($cccev$f2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$command = $cccev$f2$requirement$domain.command || ($cccev$f2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$command = $cccev$f2$requirement$domain.command || ($cccev$f2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$command = $cccev$f2$requirement$domain.command || ($cccev$f2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$command = $cccev$f2$requirement$domain.command || ($cccev$f2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$command = $cccev$f2$requirement$domain.command || ($cccev$f2$requirement$domain.command = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$model = $cccev$f2$requirement$domain.model || ($cccev$f2$requirement$domain.model = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$query = $cccev$f2$requirement$domain.query || ($cccev$f2$requirement$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$query = $cccev$f2$requirement$domain.query || ($cccev$f2$requirement$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$query = $cccev$f2$requirement$domain.query || ($cccev$f2$requirement$domain.query = {});
    var $cccev = _.cccev || (_.cccev = {});
    var $cccev$f2 = $cccev.f2 || ($cccev.f2 = {});
    var $cccev$f2$requirement = $cccev$f2.requirement || ($cccev$f2.requirement = {});
    var $cccev$f2$requirement$domain = $cccev$f2$requirement.domain || ($cccev$f2$requirement.domain = {});
    var $cccev$f2$requirement$domain$query = $cccev$f2$requirement$domain.query || ($cccev$f2$requirement$domain.query = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$asset = $city$smartb$registry$program$s2.asset || ($city$smartb$registry$program$s2.asset = {});
    var $city$smartb$registry$program$s2$asset$domain = $city$smartb$registry$program$s2$asset.domain || ($city$smartb$registry$program$s2$asset.domain = {});
    var $city$smartb$registry$program$s2$asset$domain$automate = $city$smartb$registry$program$s2$asset$domain.automate || ($city$smartb$registry$program$s2$asset$domain.automate = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$asset = $city$smartb$registry$program$s2.asset || ($city$smartb$registry$program$s2.asset = {});
    var $city$smartb$registry$program$s2$asset$domain = $city$smartb$registry$program$s2$asset.domain || ($city$smartb$registry$program$s2$asset.domain = {});
    var $city$smartb$registry$program$s2$asset$domain$automate = $city$smartb$registry$program$s2$asset$domain.automate || ($city$smartb$registry$program$s2$asset$domain.automate = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$asset = $city$smartb$registry$program$s2.asset || ($city$smartb$registry$program$s2.asset = {});
    var $city$smartb$registry$program$s2$asset$domain = $city$smartb$registry$program$s2$asset.domain || ($city$smartb$registry$program$s2$asset.domain = {});
    var $city$smartb$registry$program$s2$asset$domain$command = $city$smartb$registry$program$s2$asset$domain.command || ($city$smartb$registry$program$s2$asset$domain.command = {});
    var $city$smartb$registry$program$s2$asset$domain$command$pool = $city$smartb$registry$program$s2$asset$domain$command.pool || ($city$smartb$registry$program$s2$asset$domain$command.pool = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$asset = $city$smartb$registry$program$s2.asset || ($city$smartb$registry$program$s2.asset = {});
    var $city$smartb$registry$program$s2$asset$domain = $city$smartb$registry$program$s2$asset.domain || ($city$smartb$registry$program$s2$asset.domain = {});
    var $city$smartb$registry$program$s2$asset$domain$command = $city$smartb$registry$program$s2$asset$domain.command || ($city$smartb$registry$program$s2$asset$domain.command = {});
    var $city$smartb$registry$program$s2$asset$domain$command$pool = $city$smartb$registry$program$s2$asset$domain$command.pool || ($city$smartb$registry$program$s2$asset$domain$command.pool = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$asset = $city$smartb$registry$program$s2.asset || ($city$smartb$registry$program$s2.asset = {});
    var $city$smartb$registry$program$s2$asset$domain = $city$smartb$registry$program$s2$asset.domain || ($city$smartb$registry$program$s2$asset.domain = {});
    var $city$smartb$registry$program$s2$asset$domain$command = $city$smartb$registry$program$s2$asset$domain.command || ($city$smartb$registry$program$s2$asset$domain.command = {});
    var $city$smartb$registry$program$s2$asset$domain$command$pool = $city$smartb$registry$program$s2$asset$domain$command.pool || ($city$smartb$registry$program$s2$asset$domain$command.pool = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$asset = $city$smartb$registry$program$s2.asset || ($city$smartb$registry$program$s2.asset = {});
    var $city$smartb$registry$program$s2$asset$domain = $city$smartb$registry$program$s2$asset.domain || ($city$smartb$registry$program$s2$asset.domain = {});
    var $city$smartb$registry$program$s2$asset$domain$model = $city$smartb$registry$program$s2$asset$domain.model || ($city$smartb$registry$program$s2$asset$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$order = $city$smartb$registry$program$s2.order || ($city$smartb$registry$program$s2.order = {});
    var $city$smartb$registry$program$s2$order$domain = $city$smartb$registry$program$s2$order.domain || ($city$smartb$registry$program$s2$order.domain = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$order = $city$smartb$registry$program$s2.order || ($city$smartb$registry$program$s2.order = {});
    var $city$smartb$registry$program$s2$order$domain = $city$smartb$registry$program$s2$order.domain || ($city$smartb$registry$program$s2$order.domain = {});
    var $city$smartb$registry$program$s2$order$domain$command = $city$smartb$registry$program$s2$order$domain.command || ($city$smartb$registry$program$s2$order$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$order = $city$smartb$registry$program$s2.order || ($city$smartb$registry$program$s2.order = {});
    var $city$smartb$registry$program$s2$order$domain = $city$smartb$registry$program$s2$order.domain || ($city$smartb$registry$program$s2$order.domain = {});
    var $city$smartb$registry$program$s2$order$domain$command = $city$smartb$registry$program$s2$order$domain.command || ($city$smartb$registry$program$s2$order$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$order = $city$smartb$registry$program$s2.order || ($city$smartb$registry$program$s2.order = {});
    var $city$smartb$registry$program$s2$order$domain = $city$smartb$registry$program$s2$order.domain || ($city$smartb$registry$program$s2$order.domain = {});
    var $city$smartb$registry$program$s2$order$domain$command = $city$smartb$registry$program$s2$order$domain.command || ($city$smartb$registry$program$s2$order$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$s2 = $city$smartb$registry$program.s2 || ($city$smartb$registry$program.s2 = {});
    var $city$smartb$registry$program$s2$order = $city$smartb$registry$program$s2.order || ($city$smartb$registry$program$s2.order = {});
    var $city$smartb$registry$program$s2$order$domain = $city$smartb$registry$program$s2$order.domain || ($city$smartb$registry$program$s2$order.domain = {});
    var $city$smartb$registry$program$s2$order$domain$command = $city$smartb$registry$program$s2$order$domain.command || ($city$smartb$registry$program$s2$order$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$command = $city$smartb$registry$program$f2$asset$domain.command || ($city$smartb$registry$program$f2$asset$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$command = $city$smartb$registry$program$f2$asset$domain.command || ($city$smartb$registry$program$f2$asset$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$command = $city$smartb$registry$program$f2$asset$domain.command || ($city$smartb$registry$program$f2$asset$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$command = $city$smartb$registry$program$f2$asset$domain.command || ($city$smartb$registry$program$f2$asset$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$command = $city$smartb$registry$program$f2$asset$domain.command || ($city$smartb$registry$program$f2$asset$domain.command = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$model = $city$smartb$registry$program$f2$asset$domain.model || ($city$smartb$registry$program$f2$asset$domain.model = {});
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$utils = $city$smartb$registry$program$f2$asset$domain.utils || ($city$smartb$registry$program$f2$asset$domain.utils = {});
    Object.defineProperty($city$smartb$registry$program$f2$asset$domain$utils, 'AssetPolicies', {
      configurable: true,
      get: AssetPolicies_getInstance
    });
    var $city = _.city || (_.city = {});
    var $city$smartb = $city.smartb || ($city.smartb = {});
    var $city$smartb$registry = $city$smartb.registry || ($city$smartb.registry = {});
    var $city$smartb$registry$program = $city$smartb$registry.program || ($city$smartb$registry.program = {});
    var $city$smartb$registry$program$f2 = $city$smartb$registry$program.f2 || ($city$smartb$registry$program.f2 = {});
    var $city$smartb$registry$program$f2$asset = $city$smartb$registry$program$f2.asset || ($city$smartb$registry$program$f2.asset = {});
    var $city$smartb$registry$program$f2$asset$domain = $city$smartb$registry$program$f2$asset.domain || ($city$smartb$registry$program$f2$asset.domain = {});
    var $city$smartb$registry$program$f2$asset$domain$utils = $city$smartb$registry$program$f2$asset$domain.utils || ($city$smartb$registry$program$f2$asset$domain.utils = {});
    Object.defineProperty($city$smartb$registry$program$f2$asset$domain$utils, 'OrderStatusValues', {
      configurable: true,
      get: OrderStatusValues_getInstance
    });
  }
  $jsExportAll$(_);
  //endregion
  return _;
}));

//# sourceMappingURL=verified-emission-reduction-registry-asset-order-f2-domain.js.map
